rules:
  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\3" /v "1001" /t REG_DWORD /d 00000003 /f
    ruleid: 1
    rule_name: Internet Settings Zone 3
    description: Modifies Internet Settings Zone 3
    default:
      value: '' 
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L823
    comments:
      - Mitigation for CVE-2021-40444 and other future ActiveX related attacks
      - https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444
      - https://www.huntress.com/blog/cybersecurity-advisory-hackers-are-exploiting-cve-2021-40444
      - https://nitter.unixfox.eu/wdormann/status/1437530613536501765
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - impact:
      - level:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\2" /v "1004" /t REG_DWORD /d 00000003 /f
    ruleid: 2
    rule_name: Internet Settings Zone 2
    description: Modifies Internet Settings Zone 2
    default:
      value: '' 
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L826
    comments:::
      - Mitigation for CVE-2021-40444 and other future ActiveX related attacks
      - https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444
      - https://www.huntress.com/blog/cybersecurity-advisory-hackers-are-exploiting-cve-2021-40444
      - https://nitter.unixfox.eu/wdormann/status/1437530613536501765
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - impact:
      - level:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\0" /v "1004" /t REG_DWORD /d 00000003 /f
    ruleid: 3
    rule_name: Internet Settings Zone 0
    description: Modifies Internet Settings Zone 0
    default:
      value: '' 
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L824
    comments:
      - Mitigation for CVE-2021-40444 and other future ActiveX related attacks
      - https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444
      - https://www.huntress.com/blog/cybersecurity-advisory-hackers-are-exploiting-cve-2021-40444
      - https://nitter.unixfox.eu/wdormann/status/1437530613536501765
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - impact:
      - level:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\1" /v "1001" /t REG_DWORD /d 00000003 /f
    ruleid: 4
    rule_name: Internet Settings Zone 1
    description: Modifies Internet Settings Zone 1
    default:
      value: '' 
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L821
    comments:
      - Mitigation for CVE-2021-40444 and other future ActiveX related attacks
      - https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444
      - https://www.huntress.com/blog/cybersecurity-advisory-hackers-are-exploiting-cve-2021-40444
      - https://nitter.unixfox.eu/wdormann/status/1437530613536501765
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\2" /v "1001" /t REG_DWORD /d 00000003 /f
    ruleid: 5
    rule_name: Internet Settings Zone 2
    description: Modifies Internet Settings Zone 2
    default:
      value: '' 
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6

      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L822
    comments:
      - Mitigation for CVE-2021-40444 and other future ActiveX related attacks
      - https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444
      - https://www.huntress.com/blog/cybersecurity-advisory-hackers-are-exploiting-cve-2021-40444
      - https://nitter.unixfox.eu/wdormann/status/1437530613536501765
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg delete HKEY_CLASSES_ROOT\ms-msdt /f
    ruleid: 6
    rule_name: Registry Deletion
    description: Deletes registry key
    default:
      value: '' 
      present: 'False'
    category: ms-msdt
    category_id: 2
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Deletion
      - Windows
    references:
      - https://msrc.microsoft.com/blog/2022/05/guidance-for-cve-2022-30190-microsoft-support-diagnostic-tool-vulnerability/
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L829
    comments:
      - Mitigation for CVE-2022-30190 MS Office Follina vulnerability
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'ERROR- Invalid syntax.\r\nType "REG DELETE /?" for usage.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config" /v EnableCertPaddingCheck /t REG_SZ /d 1 /f
    ruleid: 7
    rule_name: Wow6432Node Wintrust CertPadding
    description: Enables Wintrust Config for CertPaddingCheck
    default:
      value: '' 
      present: 'False'
    category: Config
    category_id: 3
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Wintrust
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/answers/questions/1000191/what-would-be-the-detection
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L814
    comments:
      - Mitigation for CVE-2013-3900 - WinVerifyTrust Signature Validation Vulnerability
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Microsoft\Cryptography\Wintrust\Config" /v EnableCertPaddingCheck /t REG_SZ /d 1 /f
    ruleid: 8
    rule_name: Wintrust Config CertPadding
    description: Modifies Wintrust Config for EnableCertPaddingCheck
    default:
      value: '' 
      present: 'False'
    category: Config
    category_id: 3
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Wintrust
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/answers/questions/1000191/what-would-be-the-detection
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L813
    comments:
      - Mitigation for CVE-2013-3900 - WinVerifyTrust Signature Validation Vulnerability
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\0" /v "1001" /t REG_DWORD /d 00000003 /f
    ruleid: 9
    rule_name: Internet Settings Zone 0
    description: Modifies Internet Settings Zone 0
    default:
      value: '' 
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L820
    comments:
      - Mitigation for CVE-2021-40444 and other future ActiveX related attacks
      - https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444
      - https://www.huntress.com/blog/cybersecurity-advisory-hackers-are-exploiting-cve-2021-40444
      - https://nitter.unixfox.eu/wdormann/status/1437530613536501765
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.065
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\3" /v "1004" /t REG_DWORD /d 00000003 /f
    ruleid: 10
    rule_name: Internet Settings Zone 3
    description: Modifies Internet Settings Zone 3
    default:
      value: '' 
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L827
    comments:
      - Mitigation for CVE-2021-40444 and other future ActiveX related attacks
      - https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444
      - https://www.huntress.com/blog/cybersecurity-advisory-hackers-are-exploiting-cve-2021-40444
      - https://nitter.unixfox.eu/wdormann/status/1437530613536501765
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.027
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\1" /v "1004" /t REG_DWORD /d 00000003 /f
    ruleid: 11
    rule_name: Internet Settings Zone 1
    description: Modifies Internet Settings Zone 1
    default:
      value: '' 
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet
      - Registry
      - Windows
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L825
    comments:
      - Mitigation for CVE-2021-40444 and other future ActiveX related attacks
      - https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444
      - https://www.huntress.com/blog/cybersecurity-advisory-hackers-are-exploiting-cve-2021-40444
      - https://nitter.unixfox.eu/wdormann/status/1437530613536501765
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.029
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: "powershell.exe vssadmin resize shadowstorage /on=c: /for=c: /maxsize=5000MB"
    ruleid: 12
    rule_name: Resize Shadow Storage
    description: "Resizes shadow storage for drive C:"
    default:
      value: ''
      present: 'False'
    category: Storage
    category_id: 4
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: cmd
    keywords:
      - PowerShell
      - VSSAdmin
      - Shadow Storage
      - Windows
    references:
      - https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/vssadmin-resize-shadowstorage
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L30
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.390
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool\r\n(C) Copyright 2001-2013 Microsoft Corp.\r\n\r\nSuccessfully resized the shadow copy storage association\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -ExecutionPolicy Bypass -Command "Checkpoint-Computer -Description 'BeforeSecurityHardening' -RestorePointType 'MODIFY_SETTINGS'"
    ruleid: 13
    rule_name: Restore Point
    description: Creates a restore point before security hardening
    default:
      value: ''
      present: 'False'
    category: Security Hardening
    category_id: 5
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Restore Point
      - Security Hardening
      - Windows
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L33
    comments:
      - checkpoint-computer -description "beforehardening"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.621
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: "Checkpoint-Computer : This command cannot be run due to the following error: the service cannot be started because it is disabled or does not have \r\nenabled devices associated with it.\r\nAt line:1 char:1\r\n+ Checkpoint-Computer -Description 'BeforeSecurityHardening' -RestorePo ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (:) [Checkpoint-Computer], ArgumentException\r\n    + FullyQualifiedErrorId : ServiceDisabled,Microsoft.PowerShell.Commands.CheckpointComputerCommand\r\n \r\n"
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore" /v SystemRestorePointCreationFrequency /t REG_DWORD /d 20 /f
    ruleid: 14
    rule_name: System Restore Frequency
    description: Sets the System Restore point creation frequency to 20 days
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category: System Restore Point
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - System Restore
      - Frequency
      - Windows
    references:
      - https://www.elevenforum.com/t/change-system-restore-point-creation-frequency-in-windows-11.3613/
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L32
    comments:
      - checkpoint-computer -description "beforehardening"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.027
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add HKEY_LOCAL_MACHINE\Software\Microsoft\OLE /v EnableDCOM /t REG_SZ /d N /F
    ruleid: 15
    rule_name: DCOM
    description: Enables Distributed Component Object Model (DCOM)
    default:
      value: 'Y'
      present: 'True'
    category: OLE
    category_id: 7
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - DCOM
      - Windows
    references:
      - https://learn.microsoft.com/en-us/windows/win32/com/hkey-local-machine-software-microsoft-ole
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L106
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L46
    comments:
      - Block remote commands https://docs.microsoft.com/en-us/windows/win32/com/enabledcom
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe enable-computerrestore -drive c:\
    ruleid: 16
    rule_name: Computer Restore
    description: "Enables Computer Restore on drive C:"
    default:
      value: ''
      present: 'False'
    category: Restore
    category_id: 8
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - System Restore
      - Windows
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L29
    comments:
      - The command below creates the restore point, you can do it manually, too
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.217
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "DefaultWebUsbGuardSetting" /t REG_DWORD /d "33554432" /f
    ruleid: 17
    rule_name: WebUsbGuardSetting
    description: Set Chrome WebUsbGuardSetting to Default
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Registry
      - WebUsbGuard
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L946
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AudioCaptureAllowed" /t REG_DWORD /d 0 /f
    ruleid: 18
    rule_name: AudioCapture
    description: Disable Audio Capture in Chrome
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Registry
      - Audio Capture
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L105
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.069
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "RemoteAccessHostFirewallTraversal" /t REG_DWORD /d "0" /f
    ruleid: 19
    rule_name: RemoteAccessFirewall
    description: Disable Remote Access Host Firewall Traversal in Chrome
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Registry
      - Remote Access
      - Firewall Traversal
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L925
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "VideoCaptureAllowed" /t REG_DWORD /d 0 /f
    ruleid: 20
    rule_name: VideoCapture
    description: Disable Video Capture in Chrome
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Registry
      - Video Capture
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L113
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "AllowDeletingBrowserHistory" /t REG_DWORD /d "0" /f
    ruleid: 21
    rule_name: DeleteBrowserHistory
    description: Disable Deleting Browser History in Chrome
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Registry
      - Browser History
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L941
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome\Recommended" /v "RestoreOnStartup" /t REG_DWORD /d 1 /f
    ruleid: 22
    rule_name: RestoreOnStartup
    description: Enable Restore on Startup in Chrome
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Registry
      - Restore on Startup
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L909
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AllowCrossOriginAuthPrompt" /t REG_DWORD /d 0 /f
    ruleid: 23
    rule_name: CrossOriginAuthPrompt
    description: Disable Cross-Origin Authentication Prompts in Chrome
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Registry
      - Cross-Origin
      - Authentication Prompt
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L102
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L862
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L910
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "ImportAutofillFormData" /t REG_DWORD /d "0" /f
    ruleid: 24
    rule_name: ImportAutofillFormData
    description: Disable Importing Autofill Form Data in Chrome
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Registry
      - Autofill
      - Form Data
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L955
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "PromptForDownloadLocation" /t REG_DWORD /d "16777216" /f
    ruleid: 25
    rule_name: Download Location Prompt
    description: This rule sets the Windows Registry to enable the prompt for download location in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Download Location
      - Registry
      - Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L942
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AmbientAuthenticationInPrivateModesEnabled" /t REG_DWORD /d 0 /f
    ruleid: 26
    rule_name: Ambient Authentication in Private
    description: This rule disables Ambient Authentication in Google Chrome to enhance security.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Ambient Authentication
      - Registry
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L104
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L864
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L912
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.027
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "PasswordManagerEnabled" /t REG_DWORD /d 0 /f
    ruleid: 27
    rule_name: Password Manager
    description: This rule disables the Chrome Password Manager for improved security.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Password Manager
      - Registry
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L878
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome\ExtensionInstallWhitelist" /v "1" /t REG_SZ /d "cjpalhdlnbpafiamejdnhcphjbkeiagm" /f
    ruleid: 28
    rule_name: Extension Install Whitelist
    description: This rule configures the Chrome Extension Install Whitelist for specific extensions.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Extension Install
      - Registry
      - Whitelist
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L956
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AutoFillEnabled" /t REG_DWORD /d 0 /f
    ruleid: 29
    rule_name: AutoFill
    description: This rule disables the Chrome AutoFill feature for improved security.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - AutoFill
      - Registry
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L875
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.080
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "SearchSuggestEnabled" /t REG_DWORD /d "0" /f
    ruleid: 30
    rule_name: Search Suggestions
    description: This rule disables Chrome Search Suggestions for improved privacy.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Search Suggestions
      - Registry
      - Privacy
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L935
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "MetricsReportingEnabled" /t REG_DWORD /d 0 /f
    ruleid: 31
    rule_name: Metrics Reporting
    description: This rule disables Chrome Metrics Reporting for improved privacy.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Metrics Reporting
      - Registry
      - Privacy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L879
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "DNSInterceptionChecksEnabled" /t REG_DWORD /d 1 /f
    ruleid: 32
    rule_name: DNS Interception Checks
    description: This rule enables DNS Interception Checks in Google Chrome for security purposes.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - DNS Interception Checks
      - Registry
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L907
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "ChromeCleanupReportingEnabled" /t REG_DWORD /d "0" /f
    ruleid: 33
    rule_name: Cleanup Reporting
    description: This rule disables Chrome Cleanup Reporting for improved privacy.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Cleanup Reporting
      - Registry
      - Privacy
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L948
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "DefaultGeolocationSetting" /t REG_DWORD /d "33554432" /f
    ruleid: 34
    rule_name: Geolocation Setting in Chrome
    description: This rule sets the default geolocation setting in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Default Geolocation Setting
      - Registry
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L927
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "IncognitoModeAvailability" /t REG_DWORD /d "16777216" /f
    ruleid: 35
    rule_name: Incognito Mode Availability
    description: Configure Chrome to set the availability of incognito mode.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - Incognito
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L937
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.029
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AlwaysOpenPdfExternally" /t REG_DWORD /d 1 /f
    ruleid: 36
    rule_name: Always Open PDF Files Externally
    description: Configure Chrome to open PDF files externally by default.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - PDF
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L103
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AlternateErrorPagesEnabled" /t REG_DWORD /d 0 /f
    ruleid: 37
    rule_name: Alternate Error Pages
    description: Disable alternate error pages in Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - Error Pages
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L884
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "TLS13HardeningForLocalAnchorsEnabled" /t REG_DWORD /d 1 /f
    ruleid: 38
    rule_name: TLS 1.3 Hardening for Local Anchors
    description: Enable TLS 1.3 hardening for local anchor certificates in Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - TLS 1.3
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L112
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L871
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L918
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "DefaultPluginsSetting" /t REG_DWORD /d "50331648" /f
    ruleid: 39
    rule_name: Plugins Setting
    description: Configure the default plugins setting in Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - Plugins
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L940
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "UserFeedbackAllowed" /t REG_DWORD /d 0 /f
    ruleid: 40
    rule_name: User Feedback
    description: Disable user feedback collection in Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - User Feedback
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L906
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.066
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "DnsOverHttpsMode" /t REG_SZ /d "secure" /f
    ruleid: 41
    rule_name: DNS Over HTTPS Mode to Secure
    description: Configure Chrome to use secure DNS over HTTPS mode.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - DNS
      - HTTPS
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L888
    comments:
      - This overrides normal DNS and DoH of Windows for Chrome - you will possibly need to add entries to the hosts file for local netowrk services
      - https://www.ghacks.net/2020/05/20/chrome-83-rollout-of-dns-over-https-secure-dns-begins/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.041
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "NetworkPredictionOptions" /t REG_DWORD /d "33554432" /f
    ruleid: 42
    rule_name: Network Prediction Options
    description: Configure network prediction options in Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - Network Prediction
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L953
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "DnsOverHttpsMode" /t REG_SZ /d on /f
    ruleid: 43
    rule_name: DNS Over HTTPS Mode
    description: Configure Chrome to enable DNS over HTTPS mode.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - DNS
      - HTTPS
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L108
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L915
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.059
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AdvancedProtectionAllowed" /t REG_DWORD /d 1 /f
    ruleid: 44
    rule_name: Advanced Protection in Chrome
    description: Enable advanced protection features in Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - Advanced Protection
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L101
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L861
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.075
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "UrlKeyedAnonymizedDataCollectionEnabled" /t REG_DWORD /d 0 /f
    ruleid: 45
    rule_name: URL Keyed Anonymized Data Collection in Chrome
    description: Disable the collection of URL keyed anonymized data in Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Chrome
      - Data Collection
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L900
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.063
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "ScreenCaptureAllowed" /t REG_DWORD /d 0 /f
    ruleid: 46
    rule_name: Screen Capture
    description: This rule disables screen capture in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Screen Capture
      - Security
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L110
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.041
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "SafeBrowsingExtendedReportingEnabled" /t REG_DWORD /d "0" /f
    ruleid: 47
    rule_name: Safe Browsing Extended Reporting
    description: This rule disables Safe Browsing Extended Reporting in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Safe Browsing
      - Security
      - Registry
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L945
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.037
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Update\" /v "AutoUpdateCheckPeriodMinutes" /t REG_DWORD /d "1613168640" /f
    ruleid: 48
    rule_name: Auto Update Check Period
    description: This rule sets the auto-update check period for Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category: Update Settings
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Auto Update
      - Configuration
      - Registry
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L959
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.068
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AllowFileSelectionDialogs" /t REG_DWORD /d 1 /f
    ruleid: 49
    rule_name: Allow File Selection Dialogs in Chrome
    description: This rule allows file selection dialogs in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - File Selection
      - Configuration
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L873
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AutofillAddressEnabled" /t REG_DWORD /d 0 /f
    ruleid: 50
    rule_name: Autofill for Addresses
    description: This rule disables autofill for addresses in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Autofill
      - Privacy
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L876
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.042
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome\Recommended" /v "DownloadDirectory" /t REG_SZ /d "C:\Users\vibrio\Desktop" /f
    ruleid: 51
    rule_name: Download Directory
    description: This rule sets the download directory for Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Download Directory
      - Configuration
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L912
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.106
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AudioSandboxEnabled" /t REG_DWORD /d 1 /f
    ruleid: 52
    rule_name: Audio Sandbox
    description: This rule enables the audio sandbox feature in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Audio Sandbox
      - Security
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L106
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L912
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L914
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.089
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "DnsOverHttpsTemplates" /t REG_SZ /d "https://1.1.1.2/dns-query" /f
    ruleid: 53
    rule_name: DNS Over HTTPS Templates
    description: This rule sets DNS over HTTPS templates in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - DNS
      - Configuration
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L889
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.196
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "CloudPrintProxyEnabled" /t REG_DWORD /d 0 /f
    ruleid: 54
    rule_name: Cloud Print Proxy
    description: This rule disables the Cloud Print Proxy in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Cloud Print
      - Security
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L882
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "PasswordLeakDetectionEnabled" /t REG_DWORD /d 1 /f
    ruleid: 55
    rule_name: Password Leak Detection
    description: This rule enables password leak detection in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Password Leak Detection
      - Security
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L904
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.052
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "ImportSavedPasswords" /t REG_DWORD /d "0" /f
    ruleid: 56
    rule_name: Import Saved Passwords
    description: This rule disables the import of saved passwords in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Passwords
      - Privacy
      - Registry
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L936
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.091
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "WebRtcEventLogCollectionAllowed" /t REG_DWORD /d "0" /f
    ruleid: 57
    rule_name: WebRTC Event Log Collection
    description: This rule disables WebRTC event log collection in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - WebRTC
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L952
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.117
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "SafeBrowsingProtectionLevel" /t REG_DWORD /d "2" /f
    ruleid: 58
    rule_name: Safe Browsing Protection Level
    description: This rule sets the Safe Browsing protection level in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Safe Browsing
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L902
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L960
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.045
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AudioCaptureAllowed" /t REG_DWORD /d 1 /f
    ruleid: 59
    rule_name: Audio Capture
    description: This rule enables audio capture in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Audio Capture
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L865
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L913
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.055
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "ImportSavedPasswords" /t REG_DWORD /d 0 /f
    ruleid: 60
    rule_name: Importing Saved Passwords
    description: This rule disables the importing of saved passwords in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Saved Passwords
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L880
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.057
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "BackgroundModeEnabled" /t REG_DWORD /d "0" /f
    ruleid: 61
    rule_name: Background Mode
    description: This rule disables background mode in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Background Mode
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L932
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.141
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "DefaultPopupsSetting" /t REG_DWORD /d "33554432" /f
    ruleid: 62
    rule_name: Default Popups Setting
    description: This rule sets the default popups setting in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Popups
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L926
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.128
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "UrlKeyedAnonymizedDataCollectionEnabled" /t REG_DWORD /d 0 /f
    ruleid: 63
    rule_name: URL Keyed Anonymized Data Collection
    description: This rule disables URL keyed anonymized data collection in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Data Collection
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L900
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.125
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "BlockThirdPartyCookies" /t REG_DWORD /d 1 /f
    ruleid: 64
    rule_name: Block Third-Party Cookies
    description: This rule blocks third-party cookies in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Cookies
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L898
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "SavingBrowserHistoryDisabled" /t REG_DWORD /d "0" /f
    ruleid: 65
    rule_name: Saving Browser History
    description: This rule enables the saving of browser history in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Browser History
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L939
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.059
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "AllowOutdatedPlugins" /t REG_DWORD /d "0" /f
    ruleid: 66
    rule_name: Outdated Plugins
    description: This rule disables outdated plugins in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Outdated Plugins
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L931
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome\Recommended" /v "TranslateEnabled" /t REG_DWORD /d 0 /f
    ruleid: 67
    rule_name: Translation Feature
    description: This rule disables the translation feature in Google Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Translation
      - Google Chrome
      - security
      - configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L910
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "SitePerProcess" /t REG_DWORD /d 1 /f
    ruleid: 68
    rule_name: SitePerProcess Policy
    description: This rule sets the Chrome SitePerProcess policy to enable running each site in its own process.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - SitePerProcess
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L111
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L870
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L917
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome\ExtensionInstallForcelist" /v "1" /t REG_SZ /d "cjpalhdlnbpafiamejdnhcphjbkeiagm" /f
    ruleid: 69
    rule_name: Extension Install Force List
    description: This rule sets the Chrome Extension Install Force List policy to enforce the installation of a specific extension.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - ExtensionInstallForcelist
      - Registry
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L957
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.043
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AllowOutdatedPlugins" /t REG_DWORD /d 0 /f
    ruleid: 70
    rule_name: Allow Outdated Plugins Policy
    description: This rule sets the Chrome Allow Outdated Plugins policy to disallow the use of outdated plugins.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - AllowOutdatedPlugins
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L883
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L896
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome\Recommended" /v "DefaultDownloadDirectory" /t REG_SZ /d "C:\Users\vibrio\Desktop" /f
    ruleid: 71
    rule_name: Download Directory Policy
    description: This rule sets the Chrome Default Download Directory policy to specify the default download directory.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - DefaultDownloadDirectory
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L911
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "CloudPrintSubmitEnabled" /t REG_DWORD /d 0 /f
    ruleid: 72
    rule_name: Cloud Print
    description: This rule sets the Chrome CloudPrintSubmitEnabled policy to disable submitting documents to Google Cloud Print.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - CloudPrintSubmitEnabled
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L881
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "SSLVersionMin" /t REG_SZ /d tls1.1 /f
    ruleid: 73
    rule_name: SSL Version Min Policy
    description: This rule sets the Chrome SSLVersionMin policy to specify the minimum SSL/TLS version to be used.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - SSLVersionMin
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L868
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.093
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "MetricsReportingEnabled" /t REG_DWORD /d "0" /f
    ruleid: 74
    rule_name: Metrics Reporting Enabled Policy
    description: This rule sets the Chrome MetricsReportingEnabled policy to disable metrics reporting to Google.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - MetricsReportingEnabled
      - Registry
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L934
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "SSLVersionMin" /t REG_SZ /d tls1 /f
    ruleid: 75
    rule_name: SSL Version Min Policy
    description: This rule sets the Chrome SSLVersionMin policy to specify the minimum SSL/TLS version to be used.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - SSLVersionMin
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L109
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AlwaysOpenPdfExternally" /t REG_DWORD /d 0 /f
    ruleid: 76
    rule_name: Always Open PDF Externally Policy
    description: This rule sets the Chrome AlwaysOpenPdfExternally policy to prevent Chrome from opening PDF files internally.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - AlwaysOpenPdfExternally
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L863
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L874
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L911
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "BlockExternalExtensions" /t REG_DWORD /d 1 /f
    ruleid: 77
    rule_name: Block External Extensions Policy
    description: This rule sets the Chrome BlockExternalExtensions policy to prevent the installation of external extensions.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - BlockExternalExtensions
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L107
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L867
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.042
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "AutoplayAllowed" /t REG_DWORD /d "0" /f
    ruleid: 78
    rule_name: Autoplay Allowed Policy
    description: This rule sets the Chrome AutoplayAllowed policy to disable autoplay of media content in Chrome.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Chrome
      - Policy
      - AutoplayAllowed
      - Registry
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L944
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "EnableOnlineRevocationChecks" /t REG_DWORD /d "16777216" /f
    ruleid: 79
    rule_name: Online Revocation Checks
    description: Enable online revocation checks in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - Online Revocation Checks
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L938
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome\Recommended" /v "SafeBrowsingProtectionLevel" /t REG_DWORD /d "2" /f
    ruleid: 80
    rule_name: Safe Browsing Protection Level
    description: Set the Safe Browsing protection level in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - Safe Browsing
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L960
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "WebRtcEventLogCollectionAllowed" /t REG_DWORD /d 0 /f
    ruleid: 81
    rule_name: WebRTC Event Log Collection
    description: Disable WebRTC event log collection in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - WebRTC
      - Privacy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L901
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "SSLVersionMin" /t REG_SZ /d "tls1.1" /f
    ruleid: 82
    rule_name: Minimum SSL Version
    description: Set the minimum SSL/TLS version in Google Chrome via Windows Registry to TLS 1.1.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - SSL/TLS
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L950
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "CloudPrintProxyEnabled" /t REG_DWORD /d "0" /f
    ruleid: 83
    rule_name: Cloud Print Proxy
    description: Disable Cloud Print Proxy in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - Cloud Print
      - Privacy
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L933
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.029
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "VideoCaptureAllowed" /t REG_DWORD /d 1 /f
    ruleid: 84
    rule_name: Video Capture
    description: Enable video capture in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - Video Capture
      - Features
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L872
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L919
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "AutofillCreditCardEnabled" /t REG_DWORD /d 0 /f
    ruleid: 85
    rule_name: Autofill Credit Card
    description: Disable autofill of credit card information in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - Autofill
      - Privacy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L877
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome\URLBlacklist" /v "1" /t REG_SZ /d "javascript://*" /f
    ruleid: 86
    rule_name: URL Blacklist
    description: Add a URL to the blacklist in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - URL Blacklist
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L958
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "AllowOutdatedPlugins" /t REG_DWORD /d 0 /f
    ruleid: 87
    rule_name: Allow Outdated Plugins
    description: Disallow outdated plugins in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - Plugins
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L883
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L896
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "EnableMediaRouter" /t REG_DWORD /d "0" /f
    ruleid: 88
    rule_name: Media Router
    description: Disable the media router feature in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - Media Router
      - Features
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L949
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "RemoteDebuggingAllowed" /t REG_DWORD /d 0 /f
    ruleid: 89
    rule_name: Remote Debugging
    description: Disable remote debugging in Google Chrome via Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Registry
      - Remote Debugging
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L905
    comments:
      - This setting affects certain Data Loss Prevention (DLP) Software
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "ImportAutofillFormData" /t REG_DWORD /d 0 /f
    ruleid: 90
    rule_name: Autofill Form Data Import
    description: This rule disables the import of autofill form data in Google Chrome by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - autofill
      - security
      - Windows Registry
      - policy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L899
    comments:
      - This setting affects certain Data Loss Prevention (DLP) Software
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "AdvancedProtectionAllowed" /t REG_DWORD /d "1" /f
    ruleid: 91
    rule_name: Advanced Protection in Chrome
    description: This rule enables Advanced Protection in Google Chrome by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Advanced Protection
      - security
      - Windows Registry
      - policy
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L924
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "DownloadRestrictions" /t REG_DWORD /d "33554432" /f
    ruleid: 92
    rule_name: Download Restrictions
    description: This rule sets download restrictions in Google Chrome by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - download restrictions
      - security
      - Windows Registry
      - policy
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L943
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.092
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "BackgroundModeEnabled" /t REG_DWORD /d 0 /f
    ruleid: 93
    rule_name: Background Mode
    description: This rule disables background mode in Google Chrome by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - background mode
      - security
      - Windows Registry
      - policy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L903
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "BrowserGuestModeEnabled" /t REG_DWORD /d "0" /f
    ruleid: 94
    rule_name: Browser GuestMode
    description: This rule disables guest mode in Google Chrome by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - guest mode
      - security
      - Windows Registry
      - policy
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L954
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "AlternateErrorPagesEnabled" /t REG_DWORD /d 0 /f
    ruleid: 95
    rule_name: Alternate Error Pages in Chrome
    description: This rule disables alternate error pages in Google Chrome by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - alternate error pages
      - security
      - Windows Registry
      - policy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L884
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L897
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L908
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
      - This setting affects certain Data Loss Prevention (DLP) Software
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Google\Chrome" /v "ChromeCleanupEnabled" /t REG_DWORD /d "0" /f
    ruleid: 96
    rule_name: Cleanup
    description: This rule disables Chrome Cleanup in Google Chrome by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - Chrome Cleanup
      - security
      - Windows Registry
      - policy
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L947
    comments:
      - Chrome hardening settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Google\Chrome" /v "ScreenCaptureAllowed" /t REG_DWORD /d 1 /f
    ruleid: 97
    rule_name: Screen Capture
    description: This rule enables screen capture in Google Chrome by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Chrome Policy
    category_id: 9
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Google Chrome
      - screen capture
      - security
      - Windows Registry
      - policy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L869
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L916
    comments:
      - Enable and Configure Google Chrome Internet Browser Settings
      - https://admx.help/?Category=Chrome&Policy=Google.Policies.Chrome
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v NoDriveTypeAutoRun /t REG_DWORD /d 0xff /f
    ruleid: 98
    rule_name: NoDriveTypeAutoRun
    description: Disable No Drive AutoRun in Policies Explorer
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - AutoRun
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L539
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L586
    comments:
      - Disable AutoRun
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v NoDriveTypeAutoRun /t REG_DWORD /d 0xff /f
    ruleid: 99
    rule_name: HKCU NoDriveTypeAutoRun
    description: Disable No Drive AutoRun in Policies Explorer
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - AutoRun
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L540
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L587
    comments:
      - Disable AutoRun
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v4.0.30319" /v SystemDefaultTlsVersions /t REG_DWORD /d 1 /f
    ruleid: 100
    rule_name: SystemDefaultTlsVersions
    description: Enabling Strong Authentication for SystemDefaultTlsVersions in .NET Framework 4.0.30319
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SystemDefaultTlsVersions
      - Strong Authentication
      - .NET Framework
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L810
    comments:
      - Enabling Strong Authentication for .NET Framework
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\.NETFramework\v2.0.50727" /v SchUseStrongCrypto /t REG_DWORD /d 1 /f
    ruleid: 101
    rule_name: SchUseStrongCrypto for .NET Framework 2.0.50727
    description: Enabling SchUseStrongCrypto for .NET Framework 2.0.50727
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SchUseStrongCrypto
      - .NET Framework
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L803
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L681
    comments:
      - Enabling Strong Authentication for .NET Framework 3.5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" /v SchUseStrongCrypto /t REG_DWORD /d 1 /f
    ruleid: 102
    rule_name: SchUseStrongCrypto for .NET Framework 4.0.30319
    description: Enabling SchUseStrongCrypto for .NET Framework 4.0.30319
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SchUseStrongCrypto
      - .NET Framework
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L807
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L684
    comments:
      - Enabling Strong Authentication for .NET Framework 3.5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\.NETFramework\v2.0.50727" /v SystemDefaultTlsVersions /t REG_DWORD /d 1 /f
    ruleid: 103
    rule_name: SystemDefaultTlsVersions for .NET Framework 2.0.50727
    description: Enabling SystemDefaultTlsVersions for .NET Framework 2.0.50727
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SystemDefaultTlsVersions
      - .NET Framework
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L804
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L682
    comments:
      - Enabling Strong Authentication for .NET Framework 3.5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v2.0.50727" /v SystemDefaultTlsVersions /t REG_DWORD /d 1 /f
    ruleid: 104
    rule_name: SystemDefaultTlsVersions for Wow6432Node .NET Framework 2.0.50727
    description: Enabling SystemDefaultTlsVersions for Wow6432Node .NET Framework 2.0.50727
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SystemDefaultTlsVersions
      - .NET Framework
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L806
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L680
    comments:
      - Enabling Strong Authentication for .NET Framework 3.5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\.NETFramework\v4.0.30319" /v SystemDefaultTlsVersions /t REG_DWORD /d 1 /f
    ruleid: 105
    rule_name: SystemDefaultTlsVersions for .NET Framework 4.0.30319
    description: Enabling SystemDefaultTlsVersions for .NET Framework 4.0.30319
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SystemDefaultTlsVersions
      - .NET Framework
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L808
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L685
    comments:
      - Enabling Strong Authentication for .NET Framework 3.5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v2.0.50727" /v SchUseStrongCrypto /t REG_DWORD /d 1 /f
    ruleid: 106
    rule_name: SchUseStrongCrypto for Wow6432Node .NET Framework 2.0.50727
    description: Enabling SchUseStrongCrypto for Wow6432Node .NET Framework 2.0.50727
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SchUseStrongCrypto
      - .NET Framework
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L805
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L679
    comments:
      - Enabling Strong Authentication for .NET Framework
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\WOW6432Node\Microsoft\.NETFramework\v4.0.30319" /v SchUseStrongCrypto /t REG_DWORD /d 1 /f
    ruleid: 107
    rule_name: SchUseStrongCrypto for .NET Framework 4.0.30319 in WOW6432Node
    description: Enabling SchUseStrongCrypto for .NET Framework 4.0.30319 in WOW6432Node
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SchUseStrongCrypto
      - .NET Framework
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L809
    comments:
      - Enabling Strong Authentication for .NET Framework
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"SAM" /success:disable /failure:disable
    ruleid: 108
    rule_name: SAM auditing
    description: Disable auditing for the Security Accounts Manager (SAM) subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: SAM
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - SAM
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L367
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L987
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L765
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.242
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Removable Storage" /success:enable /failure:enable
    ruleid: 109
    rule_name: Auditing for Removable Storage
    description: Enable auditing for the Removable Storage subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Removable Storage
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - Removable Storage
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L366
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L986
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L764
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
      - success: "True"
      - fail: ""
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Logoff" /success:enable /failure:disable
    ruleid: 110
    rule_name: Auditing for Logoff events
    description: Enable auditing for Logoff events in the Logoff subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Logoff
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - Logoff
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L363
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L983
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L761
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
      - success: "True"
      - fail: ""
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Logon" /success:enable /failure:enable
    ruleid: 111
    rule_name: Auditing for Logon events
    description: Enable auditing for Logon events in the Logon subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Logon
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - Logon
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L364
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L984
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L762
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.081
    output:
      - impact:
      - behavior:
      - success: "True"
      - fail: ""
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Filtering Platform Connection" /success:enable /failure:disable
    ruleid: 112
    rule_name: Auditing for Filtering Platform Connection
    description: Enable auditing for Filtering Platform Connection events.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Filtering Platform Connection
    sub_category_id:
    cmd: Auditpol /set /subcategory:"Filtering Platform Connection" /success:enable /failure:disable
    run: cmd
    keywords:
      - Filtering Platform Connection
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L365
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L985
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L763
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
      - success: "True"
      - fail: ""
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: wevtutil sl "Microsoft-Windows-PowerShell/Operational" /ms:1024000
    ruleid: 113
    rule_name: PowerShell Operational log retention
    description: Set the retention size for the PowerShell Operational log to 1024000 KB (1 GB).
    default:
      value: ''
      present: 'False'
    category: PowerShell
    category_id: 14
    sub_category: Operational log
    sub_category_id:
    cmd: wevtutil
    run: cmd
    keywords:
      - PowerShell
      - Operational
      - retention
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L348
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L968
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L746
    comments:
      - Enlarge Windows Event Security Log Size
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.062
    output:
      - impact:
      - behavior:
      - success: "True"
      - fail: ""
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Process Creation" /success:enable /failure:enable
    ruleid: 114
    rule_name: Auditing for Process Creation events
    description: Enable auditing for Process Creation events in the Process Creation subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Process Creation
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - Process
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L362
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L982
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L760
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: wevtutil sl Security /ms:1024000
    ruleid: 115
    rule_name: Security log retention
    description: Set the retention size for the Security log to 1024000 KB (1 GB).
    default:
      value: ''
      present: 'False'
    category: Security
    category_id: 15
    sub_category:
    sub_category_id:
    cmd: wevtutil
    run: cmd
    keywords:
      - Security log
      - retention
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L344
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L964
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L742
    comments:
      - Enlarge Windows Event Security Log Size
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.027
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v SCENoApplyLegacyAuditPolicy /t REG_DWORD /d 1 /f
    ruleid: 116
    rule_name: SCENoApplyLegacyAuditPolicy
    description: Enable the SCENoApplyLegacyAuditPolicy registry value to ensure that legacy auditing policy is not applied.
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCENoApplyLegacyAuditPolicy
      - SYSTEM
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L353
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L973
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L751
    comments:
      - Enabled Advanced Settings
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: wevtutil sl System /ms:1024000
    ruleid: 117
    rule_name: System log retention
    description: Set the retention size for the System log to 1024000 KB (1 GB).
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: wevtutil
    run: cmd
    keywords:
      - System
      - retention
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L346
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L966
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L744
    comments:
      - Enlarge Windows Event Security Log Size.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Filtering Platform Policy Change" /success:disable /failure:disable
    ruleid: 118
    rule_name: Auditing Filtering Platform
    description: Disable auditing for Filtering Platform Policy Change events.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Filtering Platform Policy Change
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - success
      - failure
      - Policy
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L368
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L988
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L766
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: wevtutil sl "Windows Powershell" /ms:1024000
    ruleid: 119
    rule_name: Windows PowerShell Event Log Size
    description: Set the maximum size of the Windows PowerShell event log to 1,024,000 KB (1 GB).
    default:
      value: ''
      present: 'False'
    category: PowerShell
    category_id: 14
    sub_category:
    sub_category_id:
    cmd: wevtutil
    run: cmd
    keywords:
      - Windows
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L347
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L967
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L745
    comments:
      - Enlarge Windows Event Security Log Size
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.082
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ModuleLogging" /v EnableModuleLogging /t REG_DWORD /d 1 /f
    ruleid: 120
    rule_name: PowerShell Module Logging
    description: Enable module logging for Windows PowerShell.
    default:
      value: ''
      present: 'False'
    category: PowerShell
    category_id: 14
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - PowerShell
      - Microsoft
      - Windows
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L355
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L975
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L753
    comments:
      - Enable PowerShell Logging
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"System Integrity" /success:enable /failure:enable
    ruleid: 121
    rule_name: Audit for System Integrity
    description: Enable auditing for the "System Integrity" subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: System Integrity
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - System
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L372
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L992
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L770
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.039
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Security System Extension" /success:enable /failure:enable
    ruleid: 122
    rule_name: Audit for Security System Extension
    description: Enable auditing for the "Security System Extension" subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Security System Extension
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - Security
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L371
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L991
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L769
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.046
    output:
      - impact:
      - behavior:
      - success: "True"
      - fail: ""
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Security Group Management" /success:enable /failure:enable
    ruleid: 123
    rule_name: Audit for Security Group Management
    description: Enable auditing for the "Security Group Management" subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Security Group Management
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - Security
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L361
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L981
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L759
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Audit" /v ProcessCreationIncludeCmdLine_Enabled /t REG_DWORD /d 1 /f
    ruleid: 124
    rule_name: Audit for Process Creation with Command Line
    description: Enable auditing for process creation events and include command line information.
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Process
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L350
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L970
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L748
    comments:
      - Record command line data in process creation events eventid 4688
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging" /v EnableScriptBlockLogging /t REG_DWORD /d 1 /f
    ruleid: 125
    rule_name: Script Block Logging
    description: Enable script block logging for Windows PowerShell.
    default:
      value: ''
      present: 'False'
    category: PowerShell
    category_id: 14
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Script
      - Logging
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L356
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L976
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L754
    comments:
      - Enable PowerShell Logging
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: wevtutil sl Application /ms:1024000
    ruleid: 126
    rule_name: Application Event Log Size
    description: Set the maximum size of the Application event log to 1,024,000 KB (1 GB).
    default:
      value: ''
      present: 'False'
    category: Application
    category_id: 17
    sub_category:
    sub_category_id:
    cmd: wevtutil
    run: cmd
    keywords:
      - Application
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L345
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L965
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L743
    comments:
      - Enlarge Windows Event Security Log Size
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.027
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"IPsec Driver" /success:enable /failure:enable
    ruleid: 127
    rule_name: Audit for IPsec Driver
    description: Enable auditing for the "IPsec Driver" subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: IPsec Driver
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - IPsec
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L369
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L989
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L767
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.075
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Auditpol /set /subcategory:"Security State Change" /success:enable /failure:enable
    ruleid: 128
    rule_name: Audit for Security State Change
    description: Enable auditing for the "Security State Change" subcategory.
    default:
      value: ''
      present: 'False'
    category: Event Logging
    category_id: 13
    sub_category: Security State Change
    sub_category_id:
    cmd: Auditpol
    run: cmd
    keywords:
      - Security
      - success
      - failure
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L373
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L993
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L771
    comments:
      - Enable Windows Event Detailed Logging
      - This is intentionally meant to be a subset of expected enterprise logging as this script may be used on consumer devices.
      - For more extensive Windows logging, I recommend https://www.malwarearchaeology.com/cheat-sheets
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.041
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The command was successfully executed.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: setx /M MP_FORCE_USE_SANDBOX 1
    ruleid: 129
    rule_name: Sandbox
    description: Enable the Windows Defender sandboxing feature.
    default:
      value: ''
      present: 'False'
    category: Windows Defender
    category_id: 18
    sub_category:
    sub_category_id:
    cmd: setx
    run:
    keywords:
      - Windows Defender
      - Sandbox
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L37
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L126
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L124
    comments:
      - Enable Windows Defender sandboxing
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.237
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\nSUCCESS- Specified value was saved.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 75668C1F-73B5-4CF0-BB93-3ECF5CB7CC84 -AttackSurfaceReductionRules_Actions enable
    ruleid: 130
    rule_name: Block Office Applications Code Injection
    description: Block Office applications from injecting code into other processes.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Office
      - Code Injection
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L149
    comments:
      - Block Office applications from injecting code into other processes
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.191
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids e6db77e5-3df2-4cf1-b95a-636979351e5b -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 131
    rule_name: Block WMI Event Subscription Persistence
    description: Block persistence through WMI event subscription.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - WMI
      - Event Subscription
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L77
    comments:
      - Block persistence through WMI event subscription
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.526
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -SubmitSamplesConsent SendAllSamples
    ruleid: 132
    rule_name: Enable Windows Defender Cloud Functionality
    description: Enable the Cloud functionality of Windows Defender.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Cloud
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L190
    comments:
      - Enable Cloud functionality of Windows Defender
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.610
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 92E97FA1-2EDF-4476-BDD6-9DD0B4DDDC7B -AttackSurfaceReductionRules_Actions enable
    ruleid: 133
    rule_name: Block Office Macro Win32 API Calls
    description: Block Win32 API calls from Office macros.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Office
      - Macro
      - Win32 API
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L152
    comments:
      - Block Win32 API calls from Office macro
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.545
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids E6DB77E5-3DF2-4CF1-B95A-636979351E5B -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 134
    rule_name: Block WMI Event Subscription Persistence
    description: Block persistence through WMI event subscription.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - WMI
      - Event Subscription
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L77
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L202
    comments:
      - Block persistence through WMI event subscription
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.531
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -CloudExtendedTimeout 50
    ruleid: 135
    rule_name: Set Windows Defender MAPS Reporting
    description: Set Cloud Extended Timeout for Windows Defender MAPS Reporting.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - MAPS Reporting
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L218
    comments:
      - Levels Default, Moderate, High, HighPlus, or ZeroTolerance
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.531
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SYSTEM\CurrentControlSet\Policies\EarlyLaunch" /v DriverLoadPolicy /t REG_DWORD /d 3 /f
    ruleid: 136
    rule_name: DriverLoadPolicy
    description: Enable early launch antimalware driver for scan of boot-start drivers.
    default:
      value: '0x00000003 (3)'
      present: 'True'
    category: Policies
    category_id: 19
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Early Launch
      - Antimalware
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L50
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L150
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L139
    comments:
      - Enable early launch antimalware driver for scan of boot-start drivers
      - 3 is the default which allows good, unknown and 'bad but critical'. Recommend trying 1 for 'good and unknown' or 8 which is 'good only'
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.062
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids d1e49aac-8f56-4280-b9ba-993a6d77406c -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 137
    rule_name: Block PSExec and WMI Process Creations
    description: Block process creations originating from PSExec and WMI commands.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PSExec
      - WMI
      - Process Creations
      - Security
      - Hardening
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L79
    comments:
      - Block process creations originating from PSExec and WMI commands
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.515
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -MAPSReporting Advanced
    ruleid: 138
    rule_name: Cloud Functionality of Windows Defender
    description: Enable the Cloud functionality of Windows Defender to enhance threat detection and reporting.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Cloud Functionality
      - Threat Detection
      - Reporting
    references:
      -
      - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L45
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L189
    comments:
      - Enable Cloud functionality of Windows Defender
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.562
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 56A863A9-875E-4185-98A7-B882C64B5CE5 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 139
    rule_name: Block Abuse of Exploited Vulnerable Signed Drivers
    description: Block the abuse of exploited vulnerable signed drivers to enhance system security.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Security
      - Vulnerable Drivers
      - Exploited Drivers
      - Block Abuse
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L208
    comments:
      - Block abuse of exploited vulnerable signed drivers
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.532
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 01443614-CD74-433A-B99E-2ECDC07BFC25 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 140
    rule_name: Block Execution of Untrusted Executable Files
    description: Block the execution of executable files unless they meet certain prevalence, age, or trusted list criteria.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Security
      - Executable Files
      - Block Execution
      - Trusted List
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L190
    comments:
      - Block executable files from running unless they meet a prevalence, age, or trusted list criteria
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.537
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 3B576869-A4EC-4529-8536-B80A7769E899 -AttackSurfaceReductionRules_Actions enable
    ruleid: 141
    rule_name: Block Office Applications from Creating Executable Content
    description: Block Office applications from creating executable content to prevent potential security risks.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Office Applications
      - Executable Content
      - Security
      - Block Creation
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L155
    comments:
      - Block Office applications from creating executable content
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.551
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 92E97FA1-2EDF-4476-BDD6-9DD0B4DDDC7B -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 142
    rule_name: Block Win32 API Calls from Office Macros
    description: Block Win32 API calls from Office macros to prevent potential security threats.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Win32 API Calls
      - Office Macros
      - Security
      - Block
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L61
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L169
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L173
    comments:
      - Block Win32 API calls from Office macros
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.639
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows Defender" /v PassiveMode /t REG_DWORD /d 2 /f
    ruleid: 143
    rule_name: Enable Windows Defender Periodic Scanning
    description: Enable Windows Defender periodic scanning to enhance system security.
    default:
      value: '0x00000002 (2)'
      present: 'True'
    category:
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows Defender
      - Periodic Scanning
      - Security
      - Enable
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L43
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L136
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L130
    comments:
      - Enable Defender periodic scanning
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 144
    rule_name: Block LSASS Credential Theft
    description: Block LSASS credential theft attempts to enhance system security.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - LSASS
      - Credential Theft
      - Security
      - Block
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L71
    comments:
      - Block LSASS cred theft
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.556
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -EnableNetworkProtection Enabled
    ruleid: 145
    rule_name: Enable Windows Defender Network Protection
    description: Enable Windows Defender Network Protection to block malicious IP addresses and domains.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Network Protection
      - Security
      - Enable
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L286
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L241
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L211
    comments:
      - Enable Windows Defender Network Protection
      - Enable Network protection
      - Enabled - Users will not be able to access malicious IP addresses and domains
      - Disable (Default) - The Network protection feature will not work. Users will not be blocked from accessing malicious domains
      - AuditMode - If a user visits a malicious IP address or domain, an event will be recorded in the Windows event log but the user will not be blocked from visiting the address.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.520
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 3B576869-A4EC-4529-8536-B80A7769E899 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 146
    rule_name: Block Office Executables
    description: Block Office applications from creating executable content
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
      - Office
      - Executables
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L63
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L172
    comments:
      - Block Office applications from creating executable content
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.544
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 7674ba52-37eb-4a4f-a9a1-f0f9a1619a2c -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 147
    rule_name: Block Adobe Reader Child Processes
    description: Block Adobe Reader from creating child processes
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
      - Adobe Reader
      - Child Processes
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L75
    comments:
      - Block Adobe Reader from creating child processes
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.580
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 26190899-1602-49E8-8B27-EB1D0A1CE869 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 148
    rule_name: Block Office Communication Child Processes
    description: Block Office communication application from creating child processes
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
      - Office Communication
      - Child Processes
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L175
    comments:
      - Block Office communication application from creating child processes
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.562
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 7674BA52-37EB-4A4F-A9A1-F0F9A1619A2C -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 149
    rule_name: Block Adobe Reader Child Processes
    description: Block Adobe Reader from creating child processes
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
      - Adobe Reader
      - Child Processes
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L178
    comments:
      - Block Adobe Reader from creating child processes
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.531
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids D1E49AAC-8F56-4280-B9BA-993A6D77406C -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 150
    rule_name: Block PSExec and WMI Command Process Creations
    description: Block process creations originating from PSExec and WMI commands
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
      - PSExec
      - WMI
      - Process Creations
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L205
    comments:
      - Block process creations originating from PSExec and WMI commands
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.593
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids b2b3f03d-6a65-4f7b-a9c7-1c7ef74a9ba4 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 151
    rule_name: Block Untrusted and Unsigned USB Processes
    description: Block untrusted and unsigned processes that run from USB
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
      - Untrusted
      - Unsigned
      - USB Processes
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L73
    comments:
      - Block untrusted and unsigned processes that run from USB
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.546
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -CheckForSignaturesBeforeRunningScan 1
    ruleid: 152
    rule_name: Force Update Signatures Before Scan
    description: Force update new signatures before each scan starts
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
      - Signatures
      - Scan
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L146
    comments:
      - Force update new signatures before each scan starts
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.592
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids C1DB55AB-C21A-4637-BB3F-A12568109D35 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 153
    rule_name: Use Advanced Ransomware Protection
    description: Use advanced protection against ransomware
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
      - Ransomware
      - Advanced Protection
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L193
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L170
    comments:
      - Use advanced protection against ransomware
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.611
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: sc start WinDefend
    ruleid: 154
    rule_name: Start Windows Defender Service
    description: Start Defender Service
    default:
      value: ''
      present: 'False'
    category: Service Management
    category_id: 20
    sub_category:
    sub_category_id:
    cmd: sc
    run:
      - Windows Defender
      - Service
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L35
    comments:
      - Start Defender Service
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.056
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'[SC] StartService FAILED 1056:\r\n\r\nAn instance of the service is already running.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 75668C1F-73B5-4CF0-BB93-3ECF5CB7CC84 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 155
    rule_name: Block Office Code Injection
    description: Block Office applications from injecting code into other processes
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Office
      - Code Injection
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L59
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L166
    comments:
      - Block Office applications from injecting code into other processes
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.140
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -AttackSurfaceReductionRules_Ids D1E49AAC-8F56-4280-B9BA-993A6D -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 156
    rule_name: Block SMB Lateral Movement Techniques
    description: Stop some of the most common SMB based lateral movement techniques dead in their tracks
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - SMB
      - Lateral Movement
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L143
    comments:
      - Stop some of the most common SMB based lateral movement techniques dead in their tracks
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.697
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: '"%ProgramFiles%"\"Windows Defender"\MpCmdRun.exe -SignatureUpdate'
    ruleid: 157
    rule_name: Update Windows Defender Signatures
    description: Update signatures for Windows Defender
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Signature Update
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L39
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L128
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L126
    comments:
      - Update signatures for Windows Defender
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 26.806
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Signature update started . . .\r\nSignature update finished.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -PUAProtection enable
    ruleid: 158
    rule_name: Enable PUA Protection
    description: Enable Defender signatures for Potentially Unwanted Applications (PUA)
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Defender
      - PUA
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L41
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L130
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L128
    comments:
      - Enable Defender signatures for Potentially Unwanted Applications (PUA)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.235
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids D4F940AB-401B-4EFC-AADC-AD5F3C50688A -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 159
    rule_name: Block Office Child Process Creation
    description: Block Office applications from creating child processes
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Office
      - Child Process
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L57
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L163
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L146
    comments:
      - Block Office applications from creating child processes
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.719
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-ProcessMitigation -PolicyFilePath ProcessMitigation.xml
    ruleid: 160
    rule_name: Enable Exploit Protection (EMET on Windows 10)
    description: Enable exploit protection (EMET on Windows 10)
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Exploit Protection
      - EMET
      - Security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L233
    comments:
      - Enable exploit protection (EMET on Windows 10)
      - Sources->
      - https://www.wilderssecurity.com/threads/process-mitigation-management-tool.393096/
      - https://blogs.windows.com/windowsexperience/2018/03/20/announcing-windows-server-vnext-ltsc-build-17623/
      - https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-atp/exploit-protection-reference
      - https://gunnarhaslinger.github.io/Windows-Defender-Exploit-Guard-Configuration/
      - https://github.com/gunnarhaslinger/Windows-Defender-Exploit-Guard-Configuration/find/master
      - Windows10-v1709_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1709 Machine
      - Windows10-v1803_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1803 Machine
      - Windows10-v1809_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1809 Machine
      - Windows10-v1903_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1903 Machine
      - Windows10-v1909_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1909 Machine (but no Changes to v1903)
      - Windows10-v1709_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1709 Baseline
      - Windows10-v1803_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1803 Baseline
      - Windows10-v1809_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1809 Baseline
      - Windows10-v1903_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1903 Baseline
      - Windows10-v1909_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1909 Baseline
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.717
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'Set-ProcessMitigation - Failed to import.\r\nAt line:1 char:1\r\n+ Set-ProcessMitigation -PolicyFilePath ProcessMitigation.xml\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  + CategoryInfo - InvalidOperation- (C:\\python\\ProcessMitigation.xml:String) [Set-ProcessMitigation], InvalidOperationException\r\n    + FullyQualifiedErrorId - Error importing- -2147024894,Microsoft.Samples.PowerShell.Commands.SetProcessMitigationsCommand\r\n \r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: del ProcessMitigation.xml
    ruleid: 161
    rule_name: Delete ProcessMitigation.xml
    description: Delete the ProcessMitigation.xml file as part of Windows hardening.
    default:
      value: ''
      present: 'False'
    category: Windows Hardening
    category_id: 21
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows
      - Hardening
      - ProcessMitigation.xml
      - Exploit Protection
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L255
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L234
    comments:
      - Enable exploit protection (EMET on Windows 10)
      - Sources->
      - https://www.wilderssecurity.com/threads/process-mitigation-management-tool.393096/
      - https://blogs.windows.com/windowsexperience/2018/03/20/announcing-windows-server-vnext-ltsc-build-17623/
      - https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-atp/exploit-protection-reference
      - https://gunnarhaslinger.github.io/Windows-Defender-Exploit-Guard-Configuration/
      - https://github.com/gunnarhaslinger/Windows-Defender-Exploit-Guard-Configuration/find/master
      - Windows10-v1709_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1709 Machine
      - Windows10-v1803_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1803 Machine
      - Windows10-v1809_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1809 Machine
      - Windows10-v1903_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1903 Machine
      - Windows10-v1909_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1909 Machine (but no Changes to v1903)
      - Windows10-v1709_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1709 Baseline
      - Windows10-v1803_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1803 Baseline
      - Windows10-v1809_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1809 Baseline
      - Windows10-v1903_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1903 Baseline
      - Windows10-v1909_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1909 Baseline
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.112
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'Could Not Find C:\\python\\ProcessMitigation.xml\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -CloudBlockLevel ZeroTolerance
    ruleid: 162
    rule_name: Set Windows Defender Cloud Block Level to ZeroTolerance
    description: Set the Cloud Block Level for Windows Defender to ZeroTolerance using PowerShell.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Cloud Block Level
      - PowerShell
      - ZeroTolerance
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L217
    comments:
      - Levels Default, Moderate, High, HighPlus, or ZeroTolerance
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.730
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -SubmitSamplesConsent 0
    ruleid: 163
    rule_name: Disable Windows Defender Sample Submission Consent
    description: Disable sample submission consent for Windows Defender using PowerShell.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Sample Submission Consent
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L46
    comments:
      - Enable Cloud functionality of Windows Defender
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.875
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 5BEB7EFE-FD9A-4556-801D-275E5FFC04CC -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 164
    rule_name: Attack Surface Reduction Rules
    description: Enable Attack Surface Reduction Rules for Windows Defender using PowerShell.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Attack Surface Reduction Rules
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L65
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L181
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L158
    comments:
      - Block execution of potentially obfuscated scripts
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.796
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -SignatureUpdateInterval 4
    ruleid: 165
    rule_name: Set Windows Defender Signature Update Interval
    description: Set the Windows Defender Signature Update Interval to every 4 hours using PowerShell.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Signature Update Interval
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L144
    comments:
      - Signature Update Interval to every 4 hours.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.876
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids B2B3F03D-6A65-4F7B-A9C7-1C7EF74A9BA4 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 166
    rule_name: Enable USB Attack Surface Reduction
    description: Enable Attack Surface Reduction for untrusted and unsigned processes that run from USB using PowerShell.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Attack Surface Reduction
      - PowerShell
      - USB
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L199
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L179
    comments:
      - Block untrusted and unsigned processes that run from USB
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.654
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 9E6C4E1F-7D60-472F-BA1A-A39EF669E4B2 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 167
    rule_name: Windows Defender Credential Guard
    description: Enable Windows Defender Credential Guard to protect against lsass.exe credential stealing.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Credential Guard
      - Security Hardening
      - lsass.exe
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L196
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L176
    comments:
      - Block credential stealing from the Windows local security authority subsystem (lsass.exe)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.671
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -SubmitSamplesConsent 3
    ruleid: 168
    rule_name: Enable Windows Defender Cloud Functionality
    description: Enable the Cloud functionality of Windows Defender for enhanced threat protection.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Cloud Functionality
      - Security Hardening
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L215
    comments:
      - Enable Cloud functionality of Windows Defender
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.627
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Invoke-WebRequest -Uri https://demo.wd.microsoft.com/Content/ProcessMitigation.xml -OutFile ProcessMitigation.xml
    ruleid: 169
    rule_name: Enable Windows Exploit Protection
    description: Enable Windows Exploit Protection (EMET) for enhanced security against known vulnerabilities.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Exploit Protection
      - Security Hardening
      - EMET
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L252
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L232
    comments:
      - Enable exploit protection (EMET on Windows 10)
      - Sources-> https://www.wilderssecurity.com/threads/process-mitigation-management-tool.393096/
      - https://blogs.windows.com/windowsexperience/2018/03/20/announcing-windows-server-vnext-ltsc-build-17623/
      - https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-atp/exploit-protection-reference
      - https://gunnarhaslinger.github.io/Windows-Defender-Exploit-Guard-Configuration/
      - https://github.com/gunnarhaslinger/Windows-Defender-Exploit-Guard-Configuration/find/master
      - Windows10-v1709_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1709 Machine
      - Windows10-v1803_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1803 Machine
      - Windows10-v1809_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1809 Machine
      - Windows10-v1903_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1903 Machine
      - Windows10-v1909_ExploitGuard-DefaultSettings.xml is taken from a fresh Windows 10 v1909 Machine (but no Changes to v1903)
      - Windows10-v1709_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1709 Baseline
      - Windows10-v1803_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1803 Baseline
      - Windows10-v1809_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1809 Baseline
      - Windows10-v1903_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1903 Baseline
      - Windows10-v1909_ExploitGuard-Security-Baseline.xml is taken from the official Microsoft v1909 Baseline
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.990
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -EnableControlledFolderAccess Enabled
    ruleid: 170
    rule_name: Enable Controlled Folder Access
    description: Enable Controlled Folder Access for enhanced protection against unauthorized access to files and folders.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Controlled Folder Access
      - Security Hardening
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L211
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L185
    comments:
      - Enable Controlled Folder
      - EDIT-> Enable Controlled Folder Access - enable with caution. Application installations may be blocked - admin elevation
      - required to approve an app install through CFA. This is an extremely valuable setting but only for machines which are already fully configured.
      - In environments where you can whitelist CFA apps through Group Policy your life will be easier.
      - Read and follow this guide before enabling-> https://www.prajwaldesai.com/enable-controlled-folder-access-using-group-policy/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.616
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids BE9BA2D9-53EA-4CDC-84E5-9B1EEEE46550 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 171
    rule_name: Block Executable Content from Email and Webmail
    description: Block executable content from email client and webmail for enhanced security.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Security Hardening
      - Email Client
      - Webmail
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L67
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L184
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L161
    comments:
      - Block executable content from email client and webmail
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.609
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids 01443614-cd74-433a-b99e-2ecdc07bfc25 -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 172
    rule_name: Block Untrusted Executable Files
    description: Block executable files from running unless they meet a prevalence, age, or trusted list criteria for enhanced security.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Security Hardening
      - Executable Files
    references:
      -
      - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L459
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L167
    comments:
      - Block executable files from running unless they meet a prevalence, age, or trusted list criteria
      - This one is commented out for now as I need to research and test more to determine potential impact (repo1)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.750
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -MAPSReporting 2
    ruleid: 173
    rule_name: Enable Cloud Functionality of Windows Defender
    description: Enable Cloud functionality of Windows Defender to improve threat detection and protection.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - Cloud functionality
      - MAPSReporting
      - security configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L214
    comments:
      - Enable Cloud functionality of Windows Defender
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.669
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Add-MpPreference -AttackSurfaceReductionRules_Ids D3E037E1-3EB8-44C8-A917-57927947596D -AttackSurfaceReductionRules_Actions Enabled
    ruleid: 174
    rule_name: Block JavaScript or VBScript in Downloaded Executables
    description: Block JavaScript or VBScript from launching downloaded executable content to enhance security.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - security configuration
      - Attack Surface Reduction
      - JavaScript
      - VBScript
      - executable content
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L69
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L187
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L164
    comments:
      - Block JavaScript or VBScript from launching downloaded executable content
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.596
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-Processmitigation -System -Enable DEP,EmulateAtlThunks,BottomUp,HighEntropy,SEHOP,SEHOPTelemetry,TerminateOnError
    ruleid: 175
    rule_name: Enable Defender Exploit Protection
    description: Enable Defender exploit system-wide protection to enhance system security.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - security configuration
      - exploit protection
      - DEP
      - EmulateAtlThunks
      - BottomUp
      - HighEntropy
      - SEHOP
      - SEHOPTelemetry
      - TerminateOnError
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L84
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L223
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L195
    comments:
      - Enable Defender exploit system-wide protection
      - The commented line includes CFG which can cause issues with apps like Discord & Mouse Without Borders
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.526
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -ScanAvgCPULoadFactor 25
    ruleid: 176
    rule_name: CPU Load Factor
    description: Reduce Windows Defender CPU usage by setting the average CPU load factor to 25%.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows Defender
      - security configuration
      - CPU usage
      - ScanAvgCPULoadFactor
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L134
    comments:
      - https://docs.microsoft.com/en-us/powershell/module/defender/set-mppreference?view=win10-ps
      - Reduce Defender CPU Fingerprint
      - Windows Defender does not exceed the percentage of CPU usage that you specify. The default value is 50%.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.613
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .prn=txtfile
    ruleid: 177
    rule_name: File Association for .prn Files
    description: This rule updates the file association for .prn files to open them as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Text File
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - .prn
      - Text File
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L81
    comments:
      - https://rinseandrepeatanalysis.blogspot.com/2018/09/dde-downloaders-excel-abuse-and.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.045
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.prn=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype jsefile="%SystemRoot%\system32\NOTEPAD.EXE" "%1"
    ruleid: 178
    rule_name: File Type Association for .jse Files
    description: This rule updates the file type association for .jse files to open them with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Custom File Type
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Association
      - .jse
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L21
    comments:
      Change file associations to protect against common ransomware attacks
      Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.015
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'jsefile="C:\\Windows\\system32\\NOTEPAD.EXE" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .vbs=txtfile
    ruleid: 179
    rule_name: File Association for .vbs Files
    description: This rule updates the file association for .vbs files to open them as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Text File
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - .vbs
      - Text File
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L56
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.vbs=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg delete HKLM\SOFTWARE\Classes\.devicemetadata-ms" /f
    ruleid: 180
    rule_name: Delete Registry Key for .devicemetadata-ms Files
    description: This rule deletes a registry key associated with .devicemetadata-ms files.
    default:
      value: ''
      present: 'False'
    category: devicemetadata-ms
    category_id: 45
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry Modification
      - .devicemetadata-ms
      - Delete Registry Key
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L77
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L84
    comments:
      - https://posts.specterops.io/remote-code-execution-via-path-traversal-in-the-device-metadata-authoring-wizard-a0d5839fc54f
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'ERROR- The system was unable to find the specified registry key or value.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .bat=txtfile
    ruleid: 181
    rule_name: File Association for .bat Files
    description: This rule updates the file association for .bat files to open them as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Text File
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - .bat
      - Text File
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L49
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.bat=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .ws=txtfile
    ruleid: 182
    rule_name: File Association for .ws Files
    description: This rule updates the file association for .ws files to open them as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Text File
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - .ws
      - Text File
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L59
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.ws=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v DontDisplayNetworkSelectionUI /t REG_DWORD /d 1 /f
    ruleid: 183
    rule_name: Add Registry Key for Network Selection UI
    description: This rule adds a registry key to disable the display of the Network Selection UI.
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category: Add Registry Key
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry Modification
      - Network Selection UI
      - Registry Key
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L89
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L96
    comments:
      - Prevent Local windows wireless exploitation -> the Airstrike attack https://shenaniganslabs.io/2021/04/13/Airstrike.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype batfile="%SystemRoot%\system32\NOTEPAD.EXE" "%1"
    ruleid: 184
    rule_name: File Type Association for .bat Files
    description: This rule updates the file type association for .bat files to open them with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Custom File Type
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Association
      - .bat
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L19
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.058
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'batfile="C:\\Windows\\system32\\NOTEPAD.EXE" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype vbefile="%SystemRoot%\system32\NOTEPAD.EXE" "%1"
    ruleid: 185
    rule_name: File Type Association for .vbe Files
    description: This rule updates the file type association for .vbe files to open them with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Custom File Type
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Association
      - .vbe
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L22
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'vbefile="C:\\Windows\\system32\\NOTEPAD.EXE" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .wsh=txtfile
    ruleid: 186
    rule_name: File Association for .wsh Files
    description: This rule updates the file association for .wsh files to open them as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Text File
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - .wsh
      - Text File
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L60
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.wsh=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype vbsfile="%SystemRoot%\system32\NOTEPAD.EXE" "%1"
    ruleid: 187
    rule_name: File Type Association for .vbs Files
    description: This rule updates the file type association for .vbs files to open them with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Association
      - .vbs
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L23
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.014
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'vbsfile="C:\\Windows\\system32\\NOTEPAD.EXE" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .vbe=txtfile
    ruleid: 188
    rule_name: File Association for .vbe Files
    description: This rule updates the file association for .vbe files to be treated as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category: Text File
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .vbe
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L55
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.vbe=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype wshfile="%SystemRoot%\system32\NOTEPAD.EXE" "%1"
    ruleid: 189
    rule_name: File Type Association for .wsh Files
    description: This rule updates the file type association for .wsh files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - file type association
      - .wsh
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L17
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.012
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'wshfile="C:\\Windows\\system32\\NOTEPAD.EXE" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg delete HKLM\SOFTWARE\Classes\.devicemanifest-ms" /f
    ruleid: 190
    rule_name: Delete Registry Key for .devicemanifest-ms
    description: This rule deletes a specific registry key for .devicemanifest-ms file type.
    default:
      value: ''
      present: 'False'
    category: devicemanifest-ms
    category_id: 47
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - registry key
      - .devicemanifest-ms
      - delete
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L55
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L78
    comments:
      - https://posts.specterops.io/remote-code-execution-via-path-traversal-in-the-device-metadata-authoring-wizard-a0d5839fc54f
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'ERROR- The system was unable to find the specified registry key or value.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .slk=txtfile
    ruleid: 191
    rule_name: File Association for .slk Files
    description: This rule updates the file association for .slk files to be treated as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .slk
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L79
    comments:
      - https://rinseandrepeatanalysis.blogspot.com/2018/09/dde-downloaders-excel-abuse-and.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.slk=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .chm=txtfile
    ruleid: 192
    rule_name: File Association for .chm Files
    description: This rule updates the file association for .chm files to be treated as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .chm
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L51
    comments:
      - https://www.trustwave.com/Resources/SpiderLabs-Blog/Firework--Leveraging-Microsoft-Workspaces-in-a-Penetration-Test/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.chm=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" DisableCompression -Type DWORD -Value 1 -Force
    ruleid: 193
    rule_name: SMB Compression
    description: This rule disables SMB compression by setting a registry key.
    default:
      value: ''
      present: 'False'
    category: Parameters
    category_id: 25
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: Set-ItemProperty
    keywords:
      - SMB compression
      - registry key
      - DisableCompression
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L104
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L98
    comments:
      - Workarround for CoronaBlue/SMBGhost Worm exploiting CVE-2020-0796
      - https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/ADV200005
      - Active Directory Administrative Templates
      - https://github.com/technion/DisableSMBCompression
      - Disable SMBv3 compression
      - You can disable compression to block unauthenticated attackers from exploiting the vulnerability against an SMBv3 Server with the PowerShell command below.
      - No reboot is needed after making the change. This workaround does not prevent exploitation of SMB clients.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.809
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .iqy=txtfile
    ruleid: 194
    rule_name: File Association for .iqy Files
    description: This rule updates the file association for .iqy files to be treated as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .iqy
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L80
    comments:
      - https://rinseandrepeatanalysis.blogspot.com/2018/09/dde-downloaders-excel-abuse-and.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.045
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.iqy=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype wsffile="%SystemRoot%\system32\NOTEPAD.EXE" "%1"
    ruleid: 195
    rule_name: File Type Association for .wsffile Files
    description: This rule updates the file type association for .wsffile files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - file type association
      - .wsffile
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L18
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.029
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'wsffile="C:\\Windows\\system32\\NOTEPAD.EXE" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype jsfile="%SystemRoot%\system32\NOTEPAD.EXE" "%1"
    ruleid: 196
    rule_name: File Type Association for .jsfile Files
    description: This rule updates the file type association for .jsfile files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - file type association
      - .jsfile
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L20
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.069
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'jsfile="C:\\Windows\\system32\\NOTEPAD.EXE" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .wcx=txtfile
    ruleid: 197
    rule_name: File Association for .wcx Files
    description: This rule updates the file association for .wcx files to be treated as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .wcx
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L68
    comments:
      - https://www.trustwave.com/Resources/SpiderLabs-Blog/Firework--Leveraging-Microsoft-Workspaces-in-a-Penetration-Test/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.154
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'wcx=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .hta=txtfile
    ruleid: 198
    rule_name: File Association for .hta Files
    description: This rule updates the file association for .hta files to be treated as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .hta
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L52
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.195
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.hta=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .wsf=txtfile
    ruleid: 199
    rule_name: Windows File Scripting (WSF) Association
    description: Associate .wsf files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - Windows Script File
      - .wsf
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L58
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.wsf=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .js=txtfile
    ruleid: 200
    rule_name: JavaScript File Association
    description: Associate .js files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - JavaScript
      - .js
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L54
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.039
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.js=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .scr=txtfile
    ruleid: 201
    rule_name: Screen Saver File Association
    description: Associate .scr files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - Screen Saver
      - .scr
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L61
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.045
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.src=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .cmd=txtfile
    ruleid: 202
    rule_name: Command File Association
    description: Associate .cmd files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - Command Script
      - .cmd
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L50
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.cmd=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .ps1=txtfile
    ruleid: 203
    rule_name: PowerShell Script File Association
    description: Associate .ps1 files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - PowerShell Script
      - .ps1
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L63
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.ps1=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .rdg=txtfile
    ruleid: 204
    rule_name: Remote Desktop Connection Manager Configuration File Association
    description: Associate .rdg files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - RDG File
      - .rdg
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L87
    comments:
      - CVE-2020-0765 impacting Remote Desktop Connection Manager (RDCMan) configuration files - MS won't fix
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.rdf=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .diff=txtfile
    ruleid: 205
    rule_name: Diff File Association
    description: Associate .diff files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - Diff File
      - .diff
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L82
    comments:
      - https://rinseandrepeatanalysis.blogspot.com/2018/09/dde-downloaders-excel-abuse-and.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.diff=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .wsc=txtfile
    ruleid: 206
    rule_name: Windows Script Component File Association
    description: Associate .wsc files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - Windows Script Component
      - .wsc
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L57
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.wsc=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .iso=txtfile
    ruleid: 207
    rule_name: ISO Image File Association
    description: Associate .iso files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - ISO Image
      - .iso
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L64
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.iso=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .deploy=txtfile
    ruleid: 208
    rule_name: Deployment Package File Association
    description: Associate .deploy files with text files
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - File Association
      - Deployment Package
      - .deploy
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L91
    comments:
      - Mitigate ClickOnce .application and .deploy files vector
      - https://blog.redxorblue.com/2020/07/one-click-to-compromise-fun-with.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.041
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.deploy=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype htafile="%SystemRoot%\system32\NOTEPAD.EXE" "%1"
    ruleid: 209
    rule_name: HTA File Association
    description: Associate .hta files with Notepad
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Association
      - HTML Application
      - .hta
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L16
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'htafile="C:\\Windows\\system32\\NOTEPAD.EXE" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .reg=txtfile
    ruleid: 210
    rule_name: File Association .reg to txtfile
    description: Configure file association for .reg files to open as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .reg
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L66
    comments:
      - https://seclists.org/fulldisclosure/2019/Mar/27
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.048
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.reg=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .jse=txtfile
    ruleid: 211
    rule_name: File Association .jse to txtfile
    description: Configure file association for .jse files to open as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .jse
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L53
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.135
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.jse=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: assoc .url=txtfile
    ruleid: 212
    rule_name: File Association .url to txtfile
    description: Configure file association for .url files to open as text files.
    default:
      value: ''
      present: 'False'
    category: File Association
    category_id: 22
    sub_category:
    sub_category_id:
    cmd: assoc
    run: cmd
    keywords:
      - file association
      - .url
      - txtfile
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L62
    comments:
      - Change file associations to protect against common ransomware and social engineering attacks. These are for regular users. Technicallly savvy
      - users know how to mount an iso or run a script even if they are associated with notepad.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'.url=txtfile\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableWindowsConsumerFeatures /t REG_DWORD /d 1 /f
    ruleid: 213
    rule_name: Windows Consumer Features
    description: Disable Windows Consumer Features
    default:
      value: ''
      present: 'False'
    category: CloudContent
    category_id: 26
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Consumer Features
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L329
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L949
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L727
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection" /v AllowTelemetry /t REG_DWORD /d 0 /f
    ruleid: 214
    rule_name: Allow Telemetry
    description: Disable Windows Telemetry
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 26
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Telemetry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L310
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L930
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L708
    comments:
      - Set Windows Telemetry to security only
      - If you intend to use Enhanced for Windows Analytics then set this to "2" instead
      - Note my understanding is W10 Home edition will do a minimum of "Basic"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore" /v Location /t REG_SZ /d Deny /f
    ruleid: 215
    rule_name: Consent Store Location
    description: Deny Location Access
    default:
      value: 'Deny'
      present: 'True'
    category: CapabilityAccessManager
    category_id: 27
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Location Access
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L314
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L934
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L712
    comments:
      - Disable location data
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection" /v LimitEnhancedDiagnosticDataWindowsAnalytics /t REG_DWORD /d 1 /f
    ruleid: 216
    rule_name: Limit Enhanced Diagnostic Data
    description: Limit Enhanced Diagnostic Data for Windows Analytics
    default:
      value: ''
      present: 'False'
    category: DataCollection
    category_id: 28
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Diagnostic Data
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L306
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L926
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L704
    comments:
      - Set Windows Analytics to limited enhanced if enhanced is enabled
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Control Panel\International\User Profile" /v HttpAcceptLanguageOptOut /t REG_DWORD /d 1 /f
    ruleid: 217
    rule_name: Http Accept LanguageOptOut
    description: Opt Out of Accepting HTTP Language Headers
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: User Profile
    category_id: 29
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - HTTP Language
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L335
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L955
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L733
    comments:
      - Disable websites accessing local language list
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v SystemPaneSuggestionsEnabled /t REG_DWORD /d 0 /f
    ruleid: 218
    rule_name: System Pane Suggestions
    description: Disable System Pane Suggestions
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: ContentDeliveryManager
    category_id: 30
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - System Pane Suggestions
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L330
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L950
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L728
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection" /v MaxTelemetryAllowed /t REG_DWORD /d 1 /f
    ruleid: 219
    rule_name: Max Telemetry Allowed
    description: Set Maximum Telemetry Allowed
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 10
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Telemetry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L311
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L931
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L709
    comments:
      - Set Windows Telemetry to security only
      - If you intend to use Enhanced for Windows Analytics then set this to "2" instead
      - Note my understanding is W10 Home edition will do a minimum of "Basic"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Diagnostics\DiagTrack" /v ShowedToastAtLevel /t REG_DWORD /d 1 /f
    ruleid: 220
    rule_name: Showed Toast At Level
    description: Set Showed Toast At Level
    default:
      value: ''
      present: 'False'
    category: Diagnostics
    category_id: 31
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Diagnostics
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L312
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L932
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L710
    comments:
      - Set Windows Telemetry to security only
      - If you intend to use Enhanced for Windows Analytics then set this to "2" instead
      - Note my understanding is W10 Home edition will do a minimum of "Basic"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.052
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" /v BingSearchEnabled /t REG_DWORD /d 0 /f
    ruleid: 221
    rule_name: BingSearchEnabled
    description: Disable Bing Search
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Search
    category_id: 32
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Bing Search
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L316
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L936
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L714
    comments:
      - Prevent the Start Menu Search from providing internet results and using your location
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" /v DisabledByGroupPolicy /t REG_DWORD /d 1 /f
    ruleid: 222
    rule_name: DisabledByGroupPolicy
    description: Disable Advertising Info by Group Policy
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 10
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Advertising Info
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L324
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L944
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L722
    comments:
      - Disable the advertising ID
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" /v CortanaConsent /t REG_DWORD /d 0 /f
    ruleid: 223
    rule_name: CortanaConsent
    description: Disable Cortana Consent
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Search
    category_id: 32
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Configuration
      - Cortana Consent
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L318
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L938
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L716
    comments:
      - Prevent the Start Menu Search from providing internet results and using your location
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\SettingSync" /v DisableSettingSync /t REG_DWORD /d 2 /f
    ruleid: 224
    rule_name: Windows Setting Sync
    description: Disable Windows Setting Sync by modifying the Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 10
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows Setting Sync
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L322
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L942
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L720
    comments:
      - Disable Win10 settings sync to cloud
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" /v NoToastApplicationNotificationOnLockScreen /t REG_DWORD /d 1 /f
    ruleid: 225
    rule_name: Lock Screen Notifications
    description: Disable application notifications on the lock screen in Windows.
    default:
      value: ''
      present: 'False'
    category: PushNotifications
    category_id: 33
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Lock Screen
      - Notifications
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L337
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L957
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L735
    comments:
      - Prevent toast notifications from appearing on lock screen
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" /v AllowSearchToUseLocation /t REG_DWORD /d 0 /f
    ruleid: 226
    rule_name: Location-Based Search
    description: Disable the use of location for search in Windows.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Search
    category_id: 32
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Location-Based Search
      - Microsoft
      - Windows
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L317
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L937
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L715
    comments:
      - Prevent the Start Menu Search from providing internet results and using your location
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\GameDVR" /v AllowGameDVR /t REG_DWORD /d 0 /f
    ruleid: 227
    rule_name: Game DVR
    description: Disable Game DVR in Windows.
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 10
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Game DVR
      - Policies
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L327
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L947
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L725
    comments:
      - Disable Windows GameDVR (Broadcasting and Recording)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v SilentInstalledAppsEnabled /t REG_DWORD /d 0 /f
    ruleid: 228
    rule_name: Silent Installed Apps
    description: Disable the installation of silent apps in Windows.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: ContentDeliveryManager
    category_id: 30
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Silent Installed Apps
      - Windows
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L331
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L951
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L729
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v OemPreInstalledAppsEnabled /t REG_DWORD /d 0 /f
    ruleid: 229
    rule_name: OEM Pre-Installed Apps
    description: Disable pre-installed apps from OEMs in Windows.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: ContentDeliveryManager
    category_id: 30
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - OEM Pre-Installed Apps
      - Windows
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L333
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L953
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L731
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v PublishUserActivities /t REG_DWORD /d 1 /f
    ruleid: 230
    rule_name: User Activity Publishing
    description: Enable the publishing of user activities in Windows.
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - User Activity Publishing
      - Windows
      - Policies
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L320
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L940
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L718
    comments:
      - Disable publishing of Win10 user activity
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: True
      - fail:
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v PreInstalledAppsEnabled /t REG_DWORD /d 0 /f
    ruleid: 231
    rule_name: Pre-Installed Apps
    description: Disable pre-installed apps in Windows.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: ContentDeliveryManager
    category_id: 30
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Pre-Installed Apps
      - Windows Registry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L332
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L952
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L730
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.068
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.ZuneVideo* -AllUsers | Remove-AppxPackage"
    ruleid: 232
    rule_name: Microsoft Zune Video Appx Package
    description: Remove the Microsoft Zune Video Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - Zune Video
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1080
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1111
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1132
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L813
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.600
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.XboxGamingOverlay* -AllUsers | Remove-AppxPackage"
    ruleid: 233
    rule_name: Microsoft Xbox Gaming Overlay Appx Package
    description: Remove the Microsoft Xbox Gaming Overlay Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - Xbox Gaming Overlay
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1074
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1106
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1127
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L808
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.475
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Microsoft3DViewer'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 234
    rule_name: Microsoft 3D Viewer Appx Provisioned Package
    description: Remove the Microsoft 3D Viewer Appx provisioned package.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - 3D Viewer
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1144
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 4.292
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Facebook* -AllUsers | Remove-AppxPackage"
    ruleid: 235
    rule_name: Facebook Appx Package
    description: Remove the Facebook Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Facebook
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1029
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.494
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.WindowsSoundRecorder* -AllUsers | Remove-AppxPackage"
    ruleid: 236
    rule_name: Microsoft Windows Sound Recorder Appx Package
    description: Remove the Microsoft Windows Sound Recorder Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - Windows Sound Recorder
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L396
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1070
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L804
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.979
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *king.com.* -AllUsers | Remove-AppxPackage"
    ruleid: 237
    rule_name: King.com Appx Package
    description: Remove the King.com Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - King.com
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L409
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1031
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L826
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.476
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*ActiproSoftwareLLC*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 238
    rule_name: Actipro Software LLC Appx Provisioned Package
    description: Remove the Actipro Software LLC Appx provisioned package.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Actipro Software LLC
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1178
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.862
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Duolingo* -AllUsers | Remove-AppxPackage"
    ruleid: 239
    rule_name: Duolingo Appx Package
    description: Remove the Duolingo Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Duolingo
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L402
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1026
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L818
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.437
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*CandyCrush*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 240
    rule_name: CandyCrush Appx Provisioned Package
    description: Remove the CandyCrush Appx provisioned package.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - CandyCrush
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1181
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.862
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Microsoft.BingWeather**'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 241
    rule_name: Microsoft Bing Weather Appx Provisioned Package
    description: Remove the Microsoft Bing Weather Appx provisioned package from the system.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Bing Weather
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1189
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.491
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 242
    rule_name: Microsoft Advertising XAML Appx Provisioned Package
    description: Remove the Microsoft Advertising XAML Appx provisioned package from the system.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Advertising XAML
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1187
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.069
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *AdobeSystemsIncorporated.AdobePhotoshopExpress* -AllUsers | Remove-AppxPackage"
    ruleid: 243
    rule_name: Adobe Photoshop Express Appx Package
    description: Remove the Adobe Photoshop Express Appx package from all users on the system.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Adobe Photoshop Express
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1022
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.418
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-ScheduledTask DmClientOnScenarioDownload | Disable-ScheduledTask"
    ruleid: 244
    rule_name: DmClientOnScenarioDownload Scheduled Task
    description: Disable the DmClientOnScenarioDownload scheduled task.
    default:
      value: ''
      present: 'False'
    category: ScheduledTask
    category_id: 36
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - DmClientOnScenarioDownload
      - Scheduled Task
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1236
    comments:
      - Disables scheduled tasks that are considered unnecessary
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.958
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\nTaskPath   TaskName  State     \r\n--------  --------   -----   \r\n\\Microsoft\\Windows\\Feedback\\Siuf\\  DmClientOnScenarioDownload  Disabled  \r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Flipboard*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 245
    rule_name: Flipboard Appx Provisioned Package
    description: Remove the Flipboard Appx provisioned package from the system.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Flipboard
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1186
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.958
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Speed Test*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 246
    rule_name: Speed Test Appx Provisioned Package
    description: Remove the Speed Test Appx provisioned package from the system.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Speed Test
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1193
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.939
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.XboxIdentityProvider'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 247
    rule_name: Microsoft Xbox Identity Provider Appx Provisioned Package
    description: Remove the Microsoft Xbox Identity Provider Appx provisioned package from the system.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Xbox Identity Provider
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1172
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L848
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.610
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.WindowsCamera* -AllUsers | Remove-AppxPackage"
    ruleid: 248
    rule_name: Microsoft Windows Camera Appx Package
    description: Remove the Microsoft Windows Camera Appx package from all users on the system.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Windows Camera
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L393
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1065
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L800
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.96
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-ScheduledTask XblGameSaveTask | Disable-ScheduledTask"
    ruleid: 249
    rule_name: XblGameSaveTask Scheduled Task
    description: Disable the XblGameSaveTask scheduled task.
    default:
      value: ''
      present: 'False'
    category: ScheduledTask
    category_id: 36
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - XblGameSaveTask
      - Scheduled Task
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1232
    comments:
      - Disables scheduled tasks that are considered unnecessary
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.266
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\nTaskPath  TaskName State  \r\n--------   --------   -----     \r\n\\Microsoft\\XblGameSave\\   XblGameSaveTask   Disabled  \r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.ZuneVideo'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 250
    rule_name: Microsoft Zune Video Appx Provisioned Package
    description: Remove the Microsoft Zune Video Appx provisioned package from the system.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Zune Video
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1177
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L851
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.934
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Getstarted* -AllUsers | Remove-AppxPackage"
    ruleid: 251
    rule_name: Microsoft Get Started Appx Package
    description: Remove the Microsoft Get Started Appx Package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Get Started
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L386
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1039
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L785
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.962
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe* -AllUsers | Remove-AppxPackage"
    ruleid: 252
    rule_name: Microsoft Advertising XAML Appx Package (x86)
    description: Remove the Microsoft Advertising XAML Appx Package (x86) from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Advertising XAML
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1034
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.466
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Office* -AllUsers | Remove-AppxPackage"
    ruleid: 253
    rule_name: Office Appx Package
    description: Remove the Office Appx Package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Office
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1113
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.544
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Advertising.Xaml_10.1712.5.0_x64__8wekyb3d8bbwe* -AllUsers | Remove-AppxPackage"
    ruleid: 254
    rule_name: Microsoft Advertising XAML Appx Package (x64)
    description: Remove the Microsoft Advertising XAML Appx Package (x64) from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Advertising XAML
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1033
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.524
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.WindowsSoundRecorder'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 255
    rule_name: Microsoft Windows Sound Recorder Appx Provisioned Package
    description: Remove the Microsoft Windows Sound Recorder Appx Provisioned Package from online provisioned packages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Windows Sound Recorder
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1167
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L843
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.WebpImageExtension* -AllUsers | Remove-AppxPackage"
    ruleid: 256
    rule_name: Microsoft Webp Image Extension Appx Package
    description: Remove the Microsoft Webp Image Extension Appx Package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Webp Image Extension
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1062
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L798
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.834
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Speed Test* -AllUsers | Remove-AppxPackage"
    ruleid: 257
    rule_name: Speed Test Appx Package
    description: Remove the Speed Test Appx Package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Speed Test
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1085
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.399
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *SpotifyAB.SpotifyMusic* -AllUsers | Remove-AppxPackage"
    ruleid: 258
    rule_name: Spotify Music Appx Package
    description: Remove the Spotify Music Appx Package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Spotify Music
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L408
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1087
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L825
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.454
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Xbox.TCUI'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 259
    rule_name: Microsoft Xbox TCUI Appx Provisioned Package
    description: Remove the Microsoft Xbox TCUI Appx Provisioned Package from online provisioned packages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Xbox TCUI
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1168
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.295
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Whiteboard'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 260
    rule_name: Microsoft Whiteboard Appx Provisioned Package
    description: Remove the Microsoft Whiteboard Appx Provisioned Package from online provisioned packages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Whiteboard
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1161
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.273
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.OneConnect* -AllUsers | Remove-AppxPackage"
    ruleid: 261
    rule_name: Microsoft.OneConnect Appx Package
    description: Remove the Microsoft.OneConnect Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.OneConnect
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L388
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1053
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L793
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.430
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.RemoteDesktop'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 262
    rule_name: Microsoft.RemoteDesktop Appx Provisioned Package
    description: Remove the Microsoft.RemoteDesktop Appx provisioned package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.RemoteDesktop
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1158
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.279
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.WindowsAlarms* -AllUsers | Remove-AppxPackage"
    ruleid: 263
    rule_name: Microsoft.WindowsAlarms Appx Package
    description: Remove the Microsoft.WindowsAlarms Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.WindowsAlarms
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L392
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1064
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L799
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.922
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.XboxGameOverlay* -AllUsers | Remove-AppxPackage"
    ruleid: 264
    rule_name: Microsoft.XboxGameOverlay Appx Package
    description: Remove the Microsoft.XboxGameOverlay Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.XboxGameOverlay
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1073
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1105
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1126
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L807
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.840
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Minecraft*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 265
    rule_name: Minecraft Appx Provisioned Package
    description: Remove the Minecraft Appx provisioned package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Minecraft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1190
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.438
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-ScheduledTask UsbCeip | Disable-ScheduledTask"
    ruleid: 266
    rule_name: UsbCeip Scheduled Task
    description: Disable the UsbCeip scheduled task.
    default:
      value: ''
      present: 'False'
    category: ScheduledTask
    category_id: 36
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - UsbCeip
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1234
    comments:
      - Disables scheduled tasks that are considered unnecessary
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.296
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\nTaskPath   TaskName    State     \r\n--------   -------- -----     \r\n\\Microsoft\\Windows\\Customer Experience Impr... UsbCeip  Disabled  \r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.GetHelp* -AllUsers | Remove-AppxPackage"
    ruleid: 267
    rule_name: Microsoft.GetHelp Appx Package
    description: Remove the Microsoft.GetHelp Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.GetHelp
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L385
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1038
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L784
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.870
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Set-WinLanguageBarOption -UseLegacyLanguageBar"
    ruleid: 268
    rule_name: Set WinLanguageBarOption to Use Legacy Language Bar
    description: Set the WinLanguageBarOption to Use the Legacy Language Bar.
    default:
      value: ''
      present: 'False'
    category: LanguageBar
    category_id: 37
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - WinLanguageBarOption
    references:
    github:
      repos:
        -
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1242
    comments:
      - Check "Use the desktop language bar when it's available" and uncheck "Let me use a different input method for each app window".
      - This hides the taskbar language bar selector
      - https://social.technet.microsoft.com/Forums/windows/en-US/c436b33d-7864-43b4-8e29-2b6fdcb9b3d3/disabling-language-bar-via-registry?forum=w7itproinstall
      - https://www.elevenforum.com/t/show-language-bar-on-desktop-or-taskbar-in-windows-11.4107/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.692
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.YourPhone'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 269
    rule_name: Microsoft.YourPhone Appx Provisioned Package
    description: Remove the Microsoft.YourPhone Appx provisioned package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.YourPhone
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L422
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1175
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L849
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.187
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Minecraft* -AllUsers | Remove-AppxPackage"
    ruleid: 270
    rule_name: Minecraft Appx Package
    description: Remove the Minecraft Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Minecraft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1081
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.406
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Windows.ContactSupport* -AllUsers | Remove-AppxPackage"
    ruleid: 271
    rule_name: Windows Contact Support Appx Package
    description: Remove the Windows Contact Support Appx package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Windows
      - Contact Support
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L399
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1090
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L815
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.453
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.MicrosoftStickyNotes'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 272
    rule_name: Microsoft Sticky Notes Appx Provisioned Package
    description: Remove the Microsoft Sticky Notes Appx provisioned package from the online image.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - Sticky Notes
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1147
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.187
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *PandoraMedia* -AllUsers | Remove-AppxPackage"
    ruleid: 273
    rule_name: PandoraMedia Appx Package
    description: Remove the PandoraMedia Appx package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PandoraMedia
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L400
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1082
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L816
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.437
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Services.Store.Engagement* -AllUsers | Remove-AppxPackage"
    ruleid: 274
    rule_name: Microsoft Store Engagement Service Appx Package
    description: Remove the Microsoft Store Engagement Service Appx package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - Store Engagement Service
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1057
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L822
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.835
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info:
          b'Remove-AppxPackage - Deployment failed with HRESULT- 0x80073CF3, Package failed updates, dependency or conflict validation.
          \r\nWindows cannot remove framework Microsoft.Services.Store.Engagement_10.0.18101.0_x64__8wekyb3d8bbwe because package(s) Microsoft.MicrosoftStickyNotes \r\ncurrently depends on the framework.
          Removing all packages that depend on the framework automatically removes the framework.\r\nNOTE- For additional information, look for [ActivityId] 050b3827-d706-0001-6a89-855b841bda01 in the
          Event Log or use the command line Get-AppPackageLog \r\n-ActivityID 050b3827-d706-0001-6a89-855b841bda01\r\nAt line:1 char:67\r\n+ ...  *Microsoft.Services.Store.Engagement* -AllUsers | Remove-AppxPackage\r\n+  ~~~~~~~~~~~~~~~~~~\r\n
          + CategoryInfo - WriteError- (Microsoft.Servi...__8wekyb3d8bbwe:String) [Remove-AppxPackage], IOException\r\n    + FullyQualifiedErrorId - DeploymentError,
          Microsoft.Windows.Appx.PackageManager.Commands.RemoveAppxPackageCommand\r\n \r\nRemove-AppxPackage - Deployment failed with HRESULT- 0x80073CF3, Package failed updates, dependency or conflict validation.
          \r\nWindows cannot remove framework Microsoft.Services.Store.Engagement_10.0.18101.0_x86__8wekyb3d8bbwe because package(s) Microsoft.MicrosoftStickyNotes \r\ncurrently depends on the framework. Removing all packages that depend on the
          framework automatically removes the framework.\r\nNOTE- For additional information, look for [ActivityId] 050b3827-d706-0002-9c94-855b841bda01 in the Event
          Log or use the command line Get-AppPackageLog \r\n-ActivityID 050b3827-d706-0002-9c94-855b841bda01\r\nAt line:1 char:67\r\n+ ...  *Microsoft.Services.Store.Engagement* -AllUsers | Remove-AppxPackage\r\n+ ~~~~~~~~~~~~~~~~~~\r\n    +
          CategoryInfo - WriteError- (Microsoft.Servi...__8wekyb3d8bbwe:String) [Remove-AppxPackage], IOException\r\n    + FullyQualifiedErrorId - DeploymentError,Microsoft.Windows.Appx.PackageManager.Commands.RemoveAppxPackageCommand\r\n \r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Messaging'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 275
    rule_name: Microsoft Messaging Appx Provisioned Package
    description: Remove the Microsoft Messaging Appx provisioned package from the online image.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - Messaging
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1143
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.318
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.ZuneMusic* -AllUsers | Remove-AppxPackage"
    ruleid: 276
    rule_name: Microsoft ZuneMusic Appx Package
    description: Remove the Microsoft ZuneMusic Appx package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - ZuneMusic
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1079
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1110
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1131
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L812
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.945
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Advertising.Xaml'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 277
    rule_name: Microsoft Advertising Xaml Appx Provisioned Package
    description: Remove the Microsoft Advertising Xaml Appx provisioned package from the online image.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - Advertising Xaml
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1198
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.538
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.ZuneMusic'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 278
    rule_name: Microsoft ZuneMusic Appx Provisioned Package
    description: Remove the Microsoft ZuneMusic Appx provisioned package from the online image.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - ZuneMusic
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1176
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L850
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.515
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.XboxSpeechToTextOverlay* -AllUsers | Remove-AppxPackage"
    ruleid: 279
    rule_name: Microsoft Xbox Speech To Text Overlay Appx Package
    description: Remove the Microsoft Xbox Speech To Text Overlay Appx package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft
      - Xbox Speech To Text Overlay
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1076
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1108
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1129
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L810
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.947
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Dolby* -AllUsers | Remove-AppxPackage"
    ruleid: 280
    rule_name: Dolby Appx Package
    description: Remove the Dolby Appx package from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Dolby
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1025
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.491
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.MicrosoftOfficeHub'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 281
    rule_name: Microsoft Office Hub Appx Package
    description: Remove the Microsoft Office Hub Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Office Hub
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1145
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L836
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.342
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.NET.Native.Framework.1.* -AllUsers | Remove-AppxPackage"
    ruleid: 282
    rule_name: Microsoft .NET Native Framework 1.x Appx Package
    description: Remove Microsoft .NET Native Framework 1.x Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft .NET Native Framework 1.x
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1046
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L827
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.691
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info:
          b'Remove-AppxPackage - Deployment failed with HRESULT- 0x80073CF3, Package failed updates, dependency or conflict validation.
          \r\nWindows cannot remove framework Microsoft.NET.Native.Framework.1.7_1.7.25531.0_x64__8wekyb3d8bbwe because package(s) Microsoft.StorePurchaseApp \r\nMicrosoft.
          XboxApp currently depends on the framework. Removing all packages that depend on the framework automatically removes the framework.\r\nNOTE- For additional information,
          look for [ActivityId] 050b3827-d706-0001-b789-855b841bda01 in the Event Log or use the command line Get-AppPackageLog \r\n-ActivityID 050b3827-d706-0001-b789-855b841bda01\r\nAt
          line:1 char:65\r\n+ ... ge *Microsoft.NET.Native.Framework.1.* -AllUsers | Remove-AppxPackage\r\n+ ~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo - WriteError-
          (Microsoft.NET.N...__8wekyb3d8bbwe:String) [Remove-AppxPackage], IOException\r\n    + FullyQualifiedErrorId - DeploymentError,Microsoft.Windows.Appx.PackageManager.Commands.RemoveAppxPackageCommand\r\n \r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Wallet* -AllUsers | Remove-AppxPackage"
    ruleid: 283
    rule_name: Microsoft Wallet Appx Package
    description: Remove the Microsoft Wallet Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Wallet
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L391
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1060
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L796
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.916
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Royal Revolt*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 284
    rule_name: Royal Revolt Appx Provisioned Package
    description: Remove the Royal Revolt Appx provisioned package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Royal Revolt
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1192
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.453
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.XboxIdentityProvider* -AllUsers | Remove-AppxPackage"
    ruleid: 285
    rule_name: Microsoft Xbox Identity Provider Appx Package
    description: Remove the Microsoft Xbox Identity Provider Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Xbox Identity Provider
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1075
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1107
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1128
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L809
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.120
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.People'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 286
    rule_name: Microsoft People Appx Provisioned Package
    description: Remove the Microsoft People Appx provisioned package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft People
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1156
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.583
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.OneConnect'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 287
    rule_name: Microsoft OneConnect Appx Provisioned Package
    description: Remove the Microsoft OneConnect Appx provisioned package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft OneConnect
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1155
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.543
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.MicrosoftSolitaireCollection'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 288
    rule_name: Microsoft Solitaire Collection Appx Provisioned Package
    description: Remove the Microsoft Solitaire Collection Appx provisioned package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Solitaire Collection
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1146
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L837
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.803
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Dolby*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 289
    rule_name: Dolby Appx Provisioned Package
    description: Remove Dolby Appx provisioned package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Dolby
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1182
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.371
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Whiteboard* -AllUsers | Remove-AppxPackage"
    ruleid: 290
    rule_name: Microsoft Whiteboard Appx Package
    description: Remove the Microsoft Whiteboard Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Whiteboard
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1063
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.452
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: taskkill /f /im OneDrive.exe
    ruleid: 291
    rule_name: Terminate OneDrive Process
    description: Terminate the OneDrive process forcefully.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - OneDrive
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1219
    comments:
      - completely uninstall onedrive
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.166
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'SUCCESS- The process "OneDrive.exe" with PID 5200 has been terminated.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Messaging* -AllUsers | Remove-AppxPackage"
    ruleid: 292
    rule_name: Microsoft Messaging App
    description: Remove the Microsoft Messaging App using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Messaging
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L387
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1040
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L786
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.427
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Spotify*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 293
    rule_name: Spotify Appx Package
    description: Remove the Spotify Appx package using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Spotify
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1194
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.391
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Advertising.Xaml* -AllUsers | Remove-AppxPackage"
    ruleid: 294
    rule_name: Microsoft Advertising Xaml App
    description: Remove the Microsoft Advertising Xaml App using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Advertising Xaml
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L405
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1032
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1093
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1115
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L821
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.659
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info:
          b'Remove-AppxPackage - Deployment failed with HRESULT- 0x80073CF3, Package failed updates,
          dependency or conflict validation.\r\nWindows cannot remove framework Microsoft.Advertising.Xaml_10.1808.3.0_x64__8wekyb3d8bbwe because package(s) Microsoft.BingWeather \r\nmicrosoft.windowscommunicationsapps currently depends on the framework.
          Removing all packages that depend on the framework automatically removes the \r\nframework.\r\nNOTE- For additional information, look for [ActivityId] 050b3827-d706-0001-0e8a-855b841bda01 in the Event Log or use the command line Get-AppPackageLog
          \r\n-ActivityID 050b3827-d706-0001-0e8a-855b841bda01\r\nAt line:1 char:58\r\n+ ... pxPackage *Microsoft.Advertising.Xaml* -AllUsers | Remove-AppxPackage\r\n+ ~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo - WriteError- (Microsoft.Adver...__8wekyb3d8bbwe:String)
          [Remove-AppxPackage], IOException\r\n    + FullyQualifiedErrorId - DeploymentError,Microsoft.Windows.Appx.PackageManager.Commands.RemoveAppxPackageCommand\r\n \r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.BingNews'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 295
    rule_name: Microsoft Bing News Appx Package
    description: Remove the Microsoft Bing News Appx package using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Bing News
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1139
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.447
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.XboxTCUI'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 296
    rule_name: Microsoft XboxTCUI Appx Package
    description: Remove the Microsoft XboxTCUI Appx package using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft XboxTCUI
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1174
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L845
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.687
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Getstarted'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 297
    rule_name: Microsoft Getstarted Appx Package
    description: Remove the Microsoft Getstarted Appx package using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Getstarted
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L416
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1142
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L835
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.292
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Twitter* -AllUsers | Remove-AppxPackage"
    ruleid: 298
    rule_name: Twitter Appx Package
    description: Remove the Twitter Appx package using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Twitter
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1089
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.515
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Disney* -AllUsers | Remove-AppxPackage"
    ruleid: 299
    rule_name: Disney Appx Package
    description: Remove the Disney Appx package using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Disney
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1112
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1133
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.426
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Print3D* -AllUsers | Remove-AppxPackage"
    ruleid: 300
    rule_name: Microsoft Print3D Appx Package
    description: Remove the Microsoft Print3D Appx package using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Print3D
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L389
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1055
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L794
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.421
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *netflix* | Remove-AppxPackage"
    ruleid: 301
    rule_name: Netflix Appx Packages
    description: Remove Appx packages related to Netflix.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Netflix
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L828
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.453
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *EclipseManager* -AllUsers | Remove-AppxPackage"
    ruleid: 302
    rule_name: Eclipse Manager Appx Packages
    description: Remove Appx packages related to Eclipse Manager.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - EclipseManager
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L407
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1028
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L824
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.421
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.MicrosoftStickyNotes* -AllUsers | Remove-AppxPackage"
    ruleid: 303
    rule_name: Microsoft Sticky Notes Appx Packages
    description: Remove Appx packages related to Microsoft Sticky Notes.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.MicrosoftStickyNotes
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1044
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1097
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1119
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.719
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Microsoft3DViewer* -AllUsers | Remove-AppxPackage"
    ruleid: 304
    rule_name: Microsoft 3D Viewer Appx Packages
    description: Remove Appx packages related to Microsoft 3D Viewer.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.Microsoft3DViewer
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1041
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L787
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.639
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.WindowsFeedbackHub'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 305
    rule_name: Microsoft Windows Feedback Hub Appx Provisioned Packages
    description: Remove Appx provisioned packages related to Microsoft Windows Feedback Hub.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.WindowsFeedbackHub
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L421
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1165
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L841
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.904
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.SkypeApp'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 306
    rule_name: Microsoft Skype Appx Provisioned Packages
    description: Remove Appx provisioned packages related to Microsoft Skype.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.SkypeApp
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L417
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1159
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.875
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.WindowsCamera'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 307
    rule_name: Microsoft Windows Camera Appx Provisioned Packages
    description: Remove Appx provisioned packages related to Microsoft Windows Camera.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.WindowsCamera
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L419
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1163
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.734
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*BubbleWitch3Saga*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 308
    rule_name: Bubble Witch 3 Saga Appx Provisioned Packages
    description: Remove Appx provisioned packages related to Bubble Witch 3 Saga.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - BubbleWitch3Saga
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1180
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.515
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.XboxGamingOverlay'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 309
    rule_name: Microsoft Xbox Gaming Overlay Appx Provisioned Packages
    description: Remove Appx provisioned packages related to Microsoft Xbox Gaming Overlay.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.XboxGamingOverlay
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1171
        - 847
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.595
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "$env:SystemRoot\SysWOW64\OneDriveSetup.exe /uninstall"
    ruleid: 310
    rule_name: Uninstall OneDrive
    description: Uninstall OneDrive using PowerShell command.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - OneDrive
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1220
    comments:
      - completely uninstall onedrive
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.204
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b"At line:1 char:16\r\n+ $env:SystemRoot\\SysWOW64\\OneDriveSetup.exe /uninstall\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nUnexpected token '\\SysWOW64\\OneDriveSetup.exe' in expression or statement.\r\n    + CategoryInfo - ParserError- (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId - UnexpectedToken\r\n \r\n"
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *CandyCrush* -AllUsers | Remove-AppxPackage"
    ruleid: 311
    rule_name: CandyCrush Appx Packages
    description: Uninstalls CandyCrush Appx packages for all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - CandyCrush
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1024
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.408
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Office.Lens* -AllUsers | Remove-AppxPackage"
    ruleid: 312
    rule_name: Microsoft Office Lens Appx Packages
    description: Uninstalls Microsoft Office Lens Appx packages for all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Office Lens
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1049
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.408
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Royal Revolt* -AllUsers | Remove-AppxPackage"
    ruleid: 313
    rule_name: Royal Revolt Appx Packages
    description: Uninstalls Royal Revolt Appx packages for all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Royal Revolt
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1084
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.408
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-ScheduledTask Consolidator | Disable-ScheduledTask"
    ruleid: 314
    rule_name: Scheduled Task Consolidator
    description: Disables the scheduled task named 'Consolidator' using PowerShell.
    default:
      value: ''
      present: 'False'
    category: ScheduledTask
    category_id: 36
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Scheduled Task
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1233
    comments:
      - Disables scheduled tasks that are considered unnecessary
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.982
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\nTaskPath  TaskName  State     \r\n--------   --------  -----     \r\n\\Microsoft\\Windows\\Customer Experience Impr... Consolidator   Disabled  \r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.MixedReality.Portal* -AllUsers | Remove-AppxPackage"
    ruleid: 315
    rule_name: Microsoft Mixed Reality Portal Appx Packages
    description: Uninstalls Microsoft Mixed Reality Portal Appx packages for all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Mixed Reality Portal
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1045
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L791
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.982
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Disney'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 316
    rule_name: Disney Appx Provisioned Package
    description: Removes the Disney Appx provisioned package from an online Windows image using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Disney
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1216
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.597
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Sway* -AllUsers | Remove-AppxPackage"
    ruleid: 317
    rule_name: Sway Appx Packages
    description: Uninstalls Sway Appx packages for all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Sway
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1088
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.437
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.StorePurchaseApp'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 318
    rule_name: Microsoft Store Purchase Appx Provisioned Package
    description: Removes the Microsoft Store Purchase Appx provisioned package from an online Windows image using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Store Purchase
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1160
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.687
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *AdobeSystemIncorporated. AdobePhotoshop* -AllUsers | Remove-AppxPackage"
    ruleid: 319
    rule_name: Adobe Photoshop Appx Packages
    description: Uninstalls Adobe Photoshop Appx packages for all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Adobe Photoshop
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L401
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1021
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L817
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.470
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Spotify* -AllUsers | Remove-AppxPackage"
    ruleid: 320
    rule_name: Spotify Appx Packages
    description: Uninstalls Spotify Appx packages for all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Spotify
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1086
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.447
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.XboxApp'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 321
    rule_name: Microsoft.XboxApp
    description: Remove the Microsoft Xbox App from AppxProvisionedPackages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.XboxApp
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1169
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L844
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.958
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*PandoraMediaInc*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 322
    rule_name: PandoraMediaInc Apps
    description: Remove AppxProvisionedPackages with DisplayName containing 'PandoraMediaInc'.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PandoraMediaInc
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1191
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.546
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.GetHelp'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 323
    rule_name: Microsoft.GetHelp
    description: Remove the Microsoft Get Help App from AppxProvisionedPackages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.GetHelp
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L415
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1141
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L834
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.553
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *microsoft.windowscommunicationsapps* -AllUsers | Remove-AppxPackage"
    ruleid: 324
    rule_name: Microsoft Windows Communications Apps
    description: Remove Microsoft Windows Communications Apps from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - microsoft.windowscommunicationsapps
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L394
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1066
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L801
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.005
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *ActiproSoftware* -AllUsers | Remove-AppxPackage"
    ruleid: 325
    rule_name: ActiproSoftware Apps
    description: Remove AppxPackages with 'ActiproSoftware' in their names from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - ActiproSoftware
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L406
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1019
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L823
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.433
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Office.OneNote'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 326
    rule_name: Microsoft Office OneNote
    description: Remove the Microsoft Office OneNote App from AppxProvisionedPackages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.Office.OneNote
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1152
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.486
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-ScheduledTask DmClient | Disable-ScheduledTask"
    ruleid: 327
    rule_name: DmClient Scheduled Task
    description: Disable the DmClient Scheduled Task using PowerShell.
    default:
      value: ''
      present: 'False'
    category: ScheduledTask
    category_id: 36
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1235
    comments:
      - Disables scheduled tasks that are considered unnecessary
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.332
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\nTaskPath  TaskName    State     \r\n--------    --------        -----     \r\n\\Microsoft\\Windows\\Feedback\\Siuf\\              DmClient Disabled  \r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.News* -AllUsers | Remove-AppxPackage"
    ruleid: 328
    rule_name: Microsoft News App
    description: Remove the Microsoft News App from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.News
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1048
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.452
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.XboxGameOverlay'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 329
    rule_name: Microsoft Xbox Game Overlay
    description: Remove the Microsoft Xbox Game Overlay App from AppxProvisionedPackages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.XboxGameOverlay
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1170
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L846
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.577
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.People* -AllUsers | Remove-AppxPackage"
    ruleid: 330
    rule_name: Microsoft People App
    description: Remove the Microsoft People App from all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.People
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1054
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1099
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1121
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.473
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.WindowsFeedback* -AllUsers | Remove-AppxPackage"
    ruleid: 331
    rule_name: Microsoft.WindowsFeedback Appx Package
    description: Remove the Microsoft.WindowsFeedback Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.WindowsFeedback
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L398
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1067
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L814
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.304
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.WindowsFeedbackHub* -AllUsers | Remove-AppxPackage"
    ruleid: 332
    rule_name: Microsoft.WindowsFeedbackHub Appx Package
    description: Remove the Microsoft.WindowsFeedbackHub Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.WindowsFeedbackHub
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L395
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1068
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L802
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.420
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.DesktopAppInstaller* -AllUsers | Remove-AppxPackage"
    ruleid: 333
    rule_name: Microsoft.DesktopAppInstaller Appx Package
    description: Remove the Microsoft.DesktopAppInstaller Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.DesktopAppInstaller
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - 384
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1037
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.949
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Wunderlist*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 334
    rule_name: Wunderlist Appx Provisioned Package
    description: Remove the Wunderlist Appx provisioned package for all users online.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Wunderlist
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1197
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.508
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.WindowsAlarms'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 335
    rule_name: Microsoft.WindowsAlarms Appx Provisioned Package
    description: Remove the Microsoft.WindowsAlarms Appx provisioned package for all users online.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.WindowsAlarms
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L418
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1162
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L839
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.749
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.BingWeather'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 336
    rule_name: Microsoft.BingWeather Appx Provisioned Package
    description: Remove the Microsoft.BingWeather Appx provisioned package for all users online.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.BingWeather
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L414
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1140
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L833
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.563
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *PandoraMediaInc* -AllUsers | Remove-AppxPackage"
    ruleid: 337
    rule_name: PandoraMediaInc Appx Package
    description: Remove the PandoraMediaInc Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PandoraMediaInc
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1083
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.436
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *ZuneVideo* -AllUsers | Remove-AppxPackage"
    ruleid: 338
    rule_name: ZuneVideo Appx Package
    description: Remove the ZuneVideo Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - ZuneVideo
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1114
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.421
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.MixedReality.Portal'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 339
    rule_name: Microsoft.MixedReality.Portal Appx Provisioned Package
    description: Remove the Microsoft.MixedReality.Portal Appx provisioned package for all users online.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.MixedReality.Portal
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1148
        - 838
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.704
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Office.OneNote* -AllUsers | Remove-AppxPackage"
    ruleid: 340
    rule_name: Microsoft.Office.OneNote Appx Package
    description: Remove the Microsoft.Office.OneNote Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.Office.OneNote
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1050
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1098
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1120
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L792
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.437
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *ActiproSoftwareLLC* -AllUsers | Remove-AppxPackage"
    ruleid: 341
    rule_name: ActiproSoftwareLLC Appx Package
    description: Remove the ActiproSoftwareLLC Appx Package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - ActiproSoftwareLLC
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1020
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.405
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.XboxSpeechToTextOverlay'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 342
    rule_name: XboxSpeechToTextOverlay Appx Provisioned Package
    description: Remove the XboxSpeechToTextOverlay Appx Provisioned Package from online provisioned packages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - XboxSpeechToTextOverlay
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1173
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 3.536
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*AdobeSystemsIncorporated.AdobePhotoshopExpress*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 343
    rule_name: Adobe Photoshop Express Appx Provisioned Package
    description: Remove the Adobe Photoshop Express Appx Provisioned Package from online provisioned packages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Adobe Photoshop Express
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1179
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.744
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Duolingo-LearnLanguagesforFree*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 344
    rule_name: Duolingo Learn Languages for Free Appx Provisioned Package
    description: Remove the Duolingo Learn Languages for Free Appx Provisioned Package from online provisioned packages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Duolingo Learn Languages for Free
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1183
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.633
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Office.Todo.List'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 345
    rule_name: Microsoft Office To-Do List Appx Provisioned Package
    description: Remove the Microsoft Office To-Do List Appx Provisioned Package from online provisioned packages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Office To-Do List
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1154
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.706
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.WebMediaExtensions* -AllUsers | Remove-AppxPackage"
    ruleid: 346
    rule_name: Microsoft Web Media Extensions Appx Package
    description: Remove the Microsoft Web Media Extensions Appx Package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Web Media Extensions
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1061
        - 797
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.922
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.RemoteDesktop* -AllUsers | Remove-AppxPackage"
    ruleid: 347
    rule_name: Microsoft Remote Desktop Appx Package
    description: Remove the Microsoft Remote Desktop Appx Package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Remote Desktop
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1056
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.491
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Wunderlist* -AllUsers | Remove-AppxPackage"
    ruleid: 348
    rule_name: Wunderlist Appx Package
    description: Remove the Wunderlist Appx Package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Wunderlist
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1091
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.418
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*EclipseManager*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 349
    rule_name: Eclipse Manager Appx Provisioned Package
    description: Remove the Eclipse Manager Appx Provisioned Package from online provisioned packages.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Eclipse Manager
      - Appx Provisioned Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1184
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.640
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.WindowsMaps* -AllUsers | Remove-AppxPackage"
    ruleid: 350
    rule_name: Microsoft Windows Maps Appx Package
    description: Remove the Microsoft Windows Maps Appx Package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Windows Maps
      - Appx Package
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1069
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1102
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1123
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L803
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.885
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *BubbleWitch3Saga* -AllUsers | Remove-AppxPackage"
    ruleid: 351
    rule_name: BubbleWitch3Saga Appx Package
    description: Uninstalls the BubbleWitch3Saga Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - BubbleWitch3Saga
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1023
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.426
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'microsoft.windowscommunicationsapps'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 352
    rule_name: Microsoft Windows Communications Apps Provisioned Package
    description: Removes the provisioned package for Microsoft Windows Communications Apps.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Windows Communications Apps
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L420
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1164
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L840
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 4.250
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Duolingo-LearnLanguagesforFree* -AllUsers | Remove-AppxPackage"
    ruleid: 353
    rule_name: Duolingo Learn Languages for Free Appx Package
    description: Uninstalls the Duolingo Learn Languages for Free Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Duolingo Learn Languages for Free
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1027
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.453
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Office.Todo.List* -AllUsers | Remove-AppxPackage"
    ruleid: 354
    rule_name: Microsoft Office Todo List Appx Package
    description: Uninstalls the Microsoft Office Todo List Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Office Todo List
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1052
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.405
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.MicrosoftOfficeHub* -AllUsers | Remove-AppxPackage"
    ruleid: 355
    rule_name: Microsoft Office Hub Appx Package
    description: Uninstalls the Microsoft Office Hub Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Office Hub
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1042
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1095
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1117
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L788
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.406
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Office.Sway'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 356
    rule_name: Microsoft Office Sway Provisioned Package
    description: Removes the provisioned package for Microsoft Office Sway.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Office Sway
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1153
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.609
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.WindowsMaps'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 357
    rule_name: Microsoft Windows Maps Provisioned
    description: Removes the provisioned package for Microsoft Windows Maps.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Windows Maps
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1166
        - 842
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 4.000
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath  - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Xbox.TCUI* -AllUsers | Remove-AppxPackage"
    ruleid: 358
    rule_name: Microsoft Xbox TCUI Appx
    description: Uninstalls the Microsoft Xbox TCUI Appx package for all users.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Xbox TCUI
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1071
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1103
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1124
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L805
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.199
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Microsoft.Advertising.Xaml_10.1712.5.0_x86__8wekyb3d8bbwe*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 359
    rule_name: Microsoft Advertising Xaml
    description: Removes the provisioned package for Microsoft Advertising Xaml.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Advertising Xaml
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1188
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.675
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.NetworkSpeedTest'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 360
    rule_name: Microsoft Network Speed Test Provisioned Package
    description: Removes the provisioned package for Microsoft Network Speed Test.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft Network Speed Test
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1149
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.662
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Office.Lens'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 361
    rule_name: Microsoft.Office.Lens Provisioned Package
    description: Remove the Microsoft.Office.Lens provisioned package from the system using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.Office.Lens
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1151
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.674
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.Office.Sway* -AllUsers | Remove-AppxPackage"
    ruleid: 362
    rule_name: Microsoft.Office.Sway Appx Package
    description: Remove the Microsoft.Office.Sway Appx package from all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.Office.Sway
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L404
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1051
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L820
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.411
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.XboxApp* -AllUsers | Remove-AppxPackage"
    ruleid: 363
    rule_name: Microsoft.XboxApp Appx Package
    description: Remove the Microsoft.XboxApp Appx package from all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.XboxApp
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1072
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1104
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1125
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L806
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.369
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-ScheduledTask XblGameSaveTaskLogon | Disable-ScheduledTask"
    ruleid: 364
    rule_name: XblGameSaveTaskLogon Scheduled Task
    description: Disable the XblGameSaveTaskLogon scheduled task using PowerShell.
    default:
      value: ''
      present: 'False'
    category: ScheduledTask
    category_id: 36
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - XblGameSaveTaskLogon
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1231
    comments:
      - Disables scheduled tasks that are considered unnecessary
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.271
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b"Get-ScheduledTask- No MSFT_ScheduledTask objects found with property 'TaskName' equal to 'XblGameSaveTaskLogon'.  Verify the value of the property and \r\nretry.\r\nAt line:1 char:1\r\n+ Get-ScheduledTask XblGameSaveTaskLogon | Disable-ScheduledTask\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo - ObjectNotFound- (XblGameSaveTaskLogon:String) [Get-ScheduledTask], CimJobException\r\n    + FullyQualifiedErrorId- CmdletizationQuery_NotFound_TaskName,Get-ScheduledTask\r\n \r\n"
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage Microsoft.549981C3F5F10 -AllUsers | Remove-AppxPackage"
    ruleid: 365
    rule_name: Microsoft.549981C3F5F10 Appx Package
    description: Remove the Microsoft.549981C3F5F10 Appx package from all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.549981C3F5F10
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1092
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.072
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.StorePurchaseApp* -AllUsers | Remove-AppxPackage"
    ruleid: 366
    rule_name: Microsoft.StorePurchaseApp Appx Package
    description: Remove the Microsoft.StorePurchaseApp Appx package from all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.StorePurchaseApp
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1059
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.351
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.Print3D'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 367
    rule_name: Microsoft.Print3D Provisioned Package
    description: Remove the Microsoft.Print3D provisioned package from the system using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.Print3D
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1157
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.733
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Facebook*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 368
    rule_name: Facebook Provisioned Package
    description: Remove provisioned packages with a DisplayName containing 'Facebook' from the system using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Facebook
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1185
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.655
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Sway*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 369
    rule_name: Sway Provisioned Package
    description: Remove provisioned packages with a DisplayName containing 'Sway' from the system using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Sway
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1195
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.672
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.NetworkSpeedTest* -AllUsers | Remove-AppxPackage"
    ruleid: 370
    rule_name: Microsoft.NetworkSpeedTest Appx Package
    description: Remove the Microsoft.NetworkSpeedTest Appx package from all users using PowerShell.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - Microsoft.NetworkSpeedTest
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1047
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.405
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.BingWeather* -AllUsers | Remove-AppxPackage"
    ruleid: 371
    rule_name: Microsoft Bing Weather App
    description: Remove the Microsoft Bing Weather app using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Bing Weather
      - Remove App
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L383
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1036
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1094
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1116
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L783
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.466
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.MicrosoftSolitaireCollection* -AllUsers | Remove-AppxPackage"
    ruleid: 372
    rule_name: Microsoft Solitaire Collection App
    description: Remove the Microsoft Solitaire Collection app using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Solitaire Collection
      - Remove App
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1043
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1096
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1118
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L789
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.175
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.SkypeApp* -AllUsers | Remove-AppxPackage"
    ruleid: 373
    rule_name: Microsoft Skype App
    description: Remove the Microsoft Skype app using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Skype
      - Remove App
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L390
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1058
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1100
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1101
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1122
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L795
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.264
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.YourPhone* -AllUsers | Remove-AppxPackage"
    ruleid: 374
    rule_name: Microsoft Your Phone App
    description: Remove the Microsoft Your Phone app using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Your Phone
      - Remove App
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L397
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1078
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1109
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1130
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L811
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.195
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -eq 'Microsoft.News'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 375
    rule_name: Microsoft News Appx Pro Package
    description: Remove the Microsoft News Appx Pro Package using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft News
      - Remove AppxProvisionedPackage
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1150
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.740
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxProvisionedPackage -Online | Where-Object {$_.DisplayName -like '*Twitter*'} | Remove-AppxProvisionedPackage -Online"
    ruleid: 376
    rule_name: Twitter Appx Pro Package
    description: Remove the Twitter Appx Pro Package using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxProvisionedPackage
    category_id: 35
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Twitter
      - Remove AppxProvisionedPackage
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1196
    comments:
      - Removed Provisioned Apps
      - This will prevent these apps from being reinstalled on new user first logon
      - Obviously I manually chose this list. If you truly want to nuke all the provisioned apps, you can use the below commented command in PowerShell
      - Get-AppXProvisionedPackage -Online | Remove-AppxProvisionedPackage -Online
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.687
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.XboxTCUI* -AllUsers | Remove-AppxPackage"
    ruleid: 377
    rule_name: Microsoft XboxTCUI App
    description: Remove the Microsoft XboxTCUI app using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft XboxTCUI
      - Remove App
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1077
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.374
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Flipboard* -AllUsers | Remove-AppxPackage"
    ruleid: 378
    rule_name: Flipboard App
    description: Remove the Flipboard app using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Flipboard
      - Remove App
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1030
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.406
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -command "Get-AppxPackage *Microsoft.BingNews* -AllUsers | Remove-AppxPackage"
    ruleid: 379
    rule_name: Microsoft Bing News App
    description: Remove the Microsoft Bing News app using PowerShell command.
    default:
      value: ''
      present: 'False'
    category: AppxPackage
    category_id: 34
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - PowerShell
      - Microsoft Bing News
      - Remove App
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L403
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L1035
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L819
    comments:
      - Uninstall common extra apps found on a lot of Win10 installs
      - Obviously do a quick review to ensure it isn't removing any apps you or your user need to use.
      - https://docs.microsoft.com/en-us/windows/application-management/apps-in-windows-10
      - PowerShell command to reinstall all pre-installed apps below
      - Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.390
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\14.0\Onenote\options" /v disableembeddedfiles /t REG_DWORD /d 1 /f
    ruleid: 380
    rule_name: Embedded Files in OneNote
    description: This rule disables embedded files in Microsoft OneNote.
    default:
      value: ''
      present: 'False'
    category: Onenote
    category_id: 38
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - OneNote
      - embedded files
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L302
    comments:
      - Block OneNote malware
      - https://www.huntress.com/blog/addressing-initial-access
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.015
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\Excel\Security" /v blockcontentexecutionfrominternet /t REG_DWORD /d 1 /f
    ruleid: 381
    rule_name: Block Content Execution in Excel
    description: This rule blocks content execution from the internet in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - content execution
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L134
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L293
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\Onenote\options\embeddedfileopenoptions" /v blockedextensions /t REG_SZ /d ".js;.exe;.bat;.vbs;.com;.scr;.cmd;.ps" /f
    ruleid: 382
    rule_name: Block Certain File Extensions
    description: This rule blocks certain file extensions in Microsoft OneNote.
    default:
      value: ''
      present: 'False'
    category: Onenote
    category_id: 38
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - OneNote
      - file extensions
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L308
    comments:
      - Block OneNote malware
      - https://www.huntress.com/blog/addressing-initial-access
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\15.0\PowerPoint\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 383
    rule_name: Packager Prompt
    description: This rule enables the Packager Prompt in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L281
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\Outlook\Security" /v markinternalasunsafe /t REG_DWORD /d 0 /f
    ruleid: 384
    rule_name: Mark Internal Emails as Unsafe
    description: This rule marks internal emails as unsafe in Microsoft Outlook.
    default:
      value: ''
      present: 'False'
    category: Outlook
    category_id: 41
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Outlook
      - internal emails
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L132
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L291
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\14.0\Word\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 385
    rule_name: Packager Prompt
    description: This rule enables the Packager Prompt in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L274
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.016
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\15.0\Publisher\Security" /v vbawarnings /t REG_DWORD /d 4 /f
    ruleid: 386
    rule_name: VBA Warnings in Publisher
    description: This rule sets VBA warnings in Microsoft Publisher.
    default:
      value: ''
      present: 'False'
    category: Security
    category_id: 15
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Publisher
      - VBA warnings
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L131
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L290
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources -> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\16.0\Common\Security" /v MacroRuntimeScanScope /t REG_DWORD /d 2 /f
    ruleid: 387
    rule_name: Macro Runtime Scan Scope
    description: This rule sets the Macro Runtime Scan Scope in Microsoft Office.
    default:
      value: ''
      present: 'False'
    category: Security
    category_id: 15
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Macro Runtime Scan Scope
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L313
    comments:
      - Enable AMSI for all documents by setting the following registry key - Office 2016 or Office 365 installed
      - https://getadmx.com/?Category=Office2016&Policy=office16.Office.Microsoft.Policies.Windows::L_MacroRuntimeScanScope
      - https://malwaretips.com/threads/office-365-and-amsi-support-for-vba-macros.87281/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\15.0\PowerPoint\Security" /v blockcontentexecutionfrominternet /t REG_DWORD /d 1 /f
    ruleid: 388
    rule_name: Block Content Execution from Internet in PowerPoint
    description: This rule blocks content execution from the internet in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - content execution
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L129
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L288
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources -> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\Excel\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 389
    rule_name: VBA Warnings in Excel
    description: This rule sets VBA warnings in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L288
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\16.0\Word\Security\FileBlock" /v OpenInProtectedView /t REG_DWORD /d 00000000 /f
    ruleid: 390
    rule_name: Opening in Protected View in Word
    description: This rule disables opening files in Protected View in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Protected View
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L334
    comments:
      - File Block policy to prevent Office from opening RTF documents
      - CVE-2023-21716 and CVE-2022-30190
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\PowerPoint\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 391
    rule_name: Packager Prompt in PowerPoint
    description: This rule enables the Packager Prompt in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L290
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.073
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\12.0\Onenote\options" /v disableembeddedfiles /t REG_DWORD /d 1 /f
    ruleid: 392
    rule_name: Embedded Files in OneNote
    description: This rule disables embedded files in Microsoft OneNote.
    default:
      value: ''
      present: 'False'
    category: Onenote
    category_id: 38
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - OneNote
      - embedded files
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L301
    comments:
      - Block OneNote malware
      - https://www.huntress.com/blog/addressing-initial-access
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\12.0\Word\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 393
    rule_name: VBA Warnings in Word
    description: This rule sets VBA warnings in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L267
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\15.0\Word\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 394
    rule_name: VBA Warnings in Word
    description: This rule sets VBA warnings in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L284
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\PowerPoint\Security" /v blockcontentexecutionfrominternet /t REG_DWORD /d 1 /f
    ruleid: 395
    rule_name: Block Content Execution from Internet
    description: This rule blocks content execution from the internet in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - content execution
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L135
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L294
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\Word\Security" /v blockcontentexecutionfrominternet /t REG_DWORD /d 1 /f
    ruleid: 396
    rule_name: Block Content Execution from Internet
    description: This rule blocks content execution from the internet in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - content execution
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L133
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L292
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\12.0\Word\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 397
    rule_name: Packager Prompt
    description: This rule enables the Packager Prompt in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L266
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\14.0\Excel\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 398
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L270
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\Excel\Options\DontUpdateLinks" /t REG_DWORD /d 1 /f
    ruleid: 399
    rule_name: Automatic Link Updates
    description: This rule disables automatic link updates in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - automatic link updates
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L286
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\Common\Security" /v MacroRuntimeScanScope /t REG_DWORD /d 2 /f
    ruleid: 400
    rule_name: Macro Runtime Scan Scope
    description: This rule sets the Macro Runtime Scan Scope in Microsoft Office.
    default:
      value: ''
      present: 'False'
    category: Security
    category_id: 15
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Macro Runtime Scan Scope
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L314
    comments:
      - Enable AMSI for all documents by setting the following registry key - Office 2016 or Office 365 installed
      - https://getadmx.com/?Category=Office2016&Policy=office16.Office.Microsoft.Policies.Windows::L_MacroRuntimeScanScope
      - https://malwaretips.com/threads/office-365-and-amsi-support-for-vba-macros.87281/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\16.0\Word\Options" /v DontUpdateLinks /t REG_DWORD /d 00000001 /f
    ruleid: 401
    rule_name: Updating Links
    description: This rule disables the automatic updating of links in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - links
      - updating
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L147
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L322
    comments:
      - Harden all version of MS Office itself against DDE malspam attacks
      - Disables Macros, enables ProtectedView
      - Source-> https://gist.github.com/wdormann/732bb88d9b5dd5a66c9f1e1498f31a1b
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.086
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\Word\Security" /v vbawarnings /t REG_DWORD /d 4 /f
    ruleid: 402
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - VBA warnings
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L136
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L295
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\15.0\Excel\Security" /v WorkbookLinkWarnings /t REG_DWORD /d 2 /f
    ruleid: 403
    rule_name: Workbook Link Warnings
    description: This rule sets Workbook Link Warnings in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - Workbook Link Warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L280
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\15.0\Word\Options" /v DontUpdateLinks /t REG_DWORD /d 00000001 /f
    ruleid: 404
    rule_name: Updating Links
    description: This rule disables the automatic updating of links in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - links
      - updating
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L145
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L320
    comments:
      - Harden all version of MS Office itself against DDE malspam attacks
      - Disables Macros, enables ProtectedView
      - Source-> https://gist.github.com/wdormann/732bb88d9b5dd5a66c9f1e1498f31a1b
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\12.0\Excel\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 405
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L261
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\Publisher\Security" /v vbawarnings /t REG_DWORD /d 4 /f
    ruleid: 406
    rule_name: VBA Warnings in Publisher
    description: This rule sets VBA warnings in Microsoft Publisher.
    default:
      value: ''
      present: 'False'
    category: Security
    category_id: 15
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Publisher
      - VBA warnings
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L137
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L296
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\Excel\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 407
    rule_name: Packager Prompt
    description: This rule sets the Packager Prompt in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L287
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\14.0\Word\Security" /v AllowDDE /t REG_DWORD /d 0 /f
    ruleid: 408
    rule_name: AllowDDE
    description: This rule disables AllowDDE in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - AllowDDE
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L276
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\12.0\Excel\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 409
    rule_name: Packager Prompt
    description: This rule sets the Packager Prompt in Microsoft Excel 2010.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel 2010
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L260
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\15.0\Word\Security" /v blockcontentexecutionfrominternet /t REG_DWORD /d 1 /f
    ruleid: 410
    rule_name: Block Content Execution from Internet
    description: This rule blocks content execution from the internet in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - content execution
      - internet
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L127
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L286
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\Word\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 411
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L293
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.074
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\15.0\Word\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 412
    rule_name: Packager Prompt
    description: This rule enables the Packager Prompt in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L283
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.029
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\15.0\Onenote\options" /v disableembeddedfiles /t REG_DWORD /d 1 /f
    ruleid: 413
    rule_name: Embedded Files
    description: This rule disables embedded files in Microsoft OneNote.
    default:
      value: ''
      present: 'False'
    category: OneNote
    category_id: 38
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - OneNote
      - embedded files
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L303
    comments:
      - Block OneNote malware
      - https://www.huntress.com/blog/addressing-initial-access
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\15.0\PowerPoint\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 414
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L282
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\14.0\Word\Security" /v vbawarnings /t REG_DWORD /d 4 /f
    ruleid: 415
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - VBA warnings
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L125
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L284
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\14.0\Word\Security\FileBlock" /v OpenInProtectedView /t REG_DWORD /d 00000000 /f
    ruleid: 416
    rule_name: Opening in Protected View
    description: This rule disables opening files in Protected View in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Protected View
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L332
    comments:
      - File Block policy to prevent Office from opening RTF documents
      - CVE-2023-21716 and CVE-2022-30190
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\12.0\Word\Security" /v vbawarnings /t REG_DWORD /d 4 /f
    ruleid: 417
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Word for Office 2012.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - VBA warnings
      - Office 2012
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L123
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L282
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\15.0\Excel\Options\DontUpdateLinks" /t REG_DWORD /d 1 /f
    ruleid: 418
    rule_name: Automatic Link Updates
    description: This rule disables automatic link updates in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - automatic link updates
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L277
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\16.0\Word\Options\WordMail" /v DontUpdateLinks /t REG_DWORD /d 00000001 /f
    ruleid: 419
    rule_name: Automatic Link Updates in WordMail
    description: This rule disables automatic link updates in WordMail in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - WordMail
      - automatic link updates
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L148
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L323
    comments:
      - Harden all version of MS Office itself against DDE malspam attacks
      - Disables Macros, enables ProtectedView
      - Source-> https://gist.github.com/wdormann/732bb88d9b5dd5a66c9f1e1498f31a1b
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.082
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\14.0\Word\Options" /v DontUpdateLinks /t REG_DWORD /d 00000001 /f
    ruleid: 420
    rule_name: Automatic Link Updates
    description: This rule disables automatic link updates in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - automatic link updates
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L143
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L318
    comments:
      - Harden all version of MS Office itself against DDE malspam attacks
      - Disables Macros, enables ProtectedView
      - Source-> https://gist.github.com/wdormann/732bb88d9b5dd5a66c9f1e1498f31a1b
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\Common\Security" /v DisableAllActiveX /t REG_DWORD /d 1 /f
    ruleid: 421
    rule_name: ActiveX in Office
    description: This rule disables all ActiveX controls in Microsoft Office.
    default:
      value: ''
      present: 'False'
    category: Security
    category_id: 15
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - ActiveX
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L295
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\12.0\PowerPoint\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 422
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L264
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\14.0\PowerPoint\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 423
    rule_name: Packager Prompt
    description: This rule enables the Packager Prompt in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L272
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\14.0\Excel\Options\DontUpdateLinks" /t REG_DWORD /d 1 /f
    ruleid: 424
    rule_name: Update Links
    description: This rule disables updating links in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - Update Links
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L268
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\14.0\PowerPoint\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 425
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L273
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\14.0\Word\Options\WordMail" /v DontUpdateLinks /t REG_DWORD /d 00000001 /f
    ruleid: 426
    rule_name: Update Links in WordMail
    description: This rule disables updating links in WordMail in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - WordMail
      - Update Links
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L144
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L319
    comments:
      - Harden all version of MS Office itself against DDE malspam attacks
      - Disables Macros, enables ProtectedView
      - Source-> https://gist.github.com/wdormann/732bb88d9b5dd5a66c9f1e1498f31a1b
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\14.0\Publisher\Security" /v vbawarnings /t REG_DWORD /d 4 /f
    ruleid: 427
    rule_name: VBA Warnings in Publisher
    description: This rule sets VBA warnings in Microsoft Publisher.
    default:
      value: ''
      present: 'False'
    category: Security
    category_id: 15
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Publisher
      - VBA warnings
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L124
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L283
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.027
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\12.0\Excel\Security" /v WorkbookLinkWarnings /t REG_DWORD /d 2 /f
    ruleid: 428
    rule_name: Workbook Link Warnings
    description: This rule sets Workbook Link warnings in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - Workbook Link Warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L262
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\14.0\Word\Security\FileBlock" /v RtfFiles /t REG_DWORD /d 00000002 /f
    ruleid: 429
    rule_name: Rtf Files
    description: This rule blocks Rtf files in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Rtf files
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L329
    comments:
      - File Block policy to prevent Office from opening RTF documents
      - CVE-2023-21716 and CVE-2022-30190
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\15.0\Excel\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 430
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L279
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\14.0\Onenote\options\embeddedfileopenoptions" /v blockedextensions /t REG_SZ /d ".js;.exe;.bat;.vbs;.com;.scr;.cmd;.ps" /f
    ruleid: 431
    rule_name: Blocked Extensions
    description: This rule sets blocked file extensions in Microsoft OneNote.
    default:
      value: ''
      present: 'False'
    category: OneNote
    category_id: 38
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - OneNote
      - blocked extensions
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L306
    comments:
      - Block OneNote malware
      - https://www.huntress.com/blog/addressing-initial-access
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\15.0\Word\Security" /v AllowDDE /t REG_DWORD /d 0 /f
    ruleid: 432
    rule_name: Dynamic Data Exchange (DDE)
    description: This rule disables Dynamic Data Exchange (DDE) in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - DDE
      - security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L285
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\Word\Security" /v AllowDDE /t REG_DWORD /d 0 /f
    ruleid: 433
    rule_name: Dynamic Data Exchange (DDE)
    description: This rule disables Dynamic Data Exchange (DDE) in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - DDE
      - security
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L294
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\Excel\Security" /v WorkbookLinkWarnings /t REG_DWORD /d 2 /f
    ruleid: 434
    rule_name: Workbook Link Warnings
    description: This rule sets Workbook Link Warnings in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - Workbook Link Warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L289
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\PowerPoint\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 435
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L291
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\15.0\Word\Security\FileBlock" /v OpenInProtectedView /t REG_DWORD /d 00000000 /f
    ruleid: 436
    rule_name: Opening in Protected View
    description: This rule disables opening files in Protected View in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Protected View
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L333
    comments:
      - File Block policy to prevent Office from opening RTF documents
      - CVE-2023-21716 and CVE-2022-30190
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\16.0\Word\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 437
    rule_name: Packager Prompt
    description: This rule sets the Packager Prompt setting in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L292
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\12.0\Onenote\options\embeddedfileopenoptions" /v blockedextensions /t REG_SZ /d ".js;.exe;.bat;.vbs;.com;.scr;.cmd;.ps" /f
    ruleid: 438
    rule_name: Blocked Extensions
    description: This rule sets blocked file extensions in Microsoft OneNote.
    default:
      value: ''
      present: 'False'
    category: OneNote
    category_id: 38
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - OneNote
      - blocked extensions
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L305
    comments:
      - Block OneNote malware
      - https://www.huntress.com/blog/addressing-initial-access
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\15.0\Word\Options\WordMail" /v DontUpdateLinks /t REG_DWORD /d 00000001 /f
    ruleid: 439
    rule_name: Dont Update Links in WordMail
    description: This rule disables link updates in Microsoft WordMail.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - WordMail
      - link updates
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L146
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L321
    comments:
      - Harden all version of MS Office itself against DDE malspam attacks
      - Disables Macros, enables ProtectedView
      - Source-> https://gist.github.com/wdormann/732bb88d9b5dd5a66c9f1e1498f31a1b
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\16.0\Onenote\options" /v disableembeddedfiles /t REG_DWORD /d 1 /f
    ruleid: 440
    rule_name: Embedded Files
    description: This rule disables embedded files in Microsoft OneNote.
    default:
      value: ''
      present: 'False'
    category: OneNote
    category_id: 38
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - OneNote
      - embedded files
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L304
    comments:
      - Block OneNote malware
      - https://www.huntress.com/blog/addressing-initial-access
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\14.0\Word\Security" /v VBAWarnings /t REG_DWORD /d 4 /f
    ruleid: 441
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - VBA warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L275
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\12.0\PowerPoint\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 442
    rule_name: Packager Prompt
    description: This rule sets the Packager Prompt setting in Microsoft PowerPoint.
    default:
      value: ''
      present: 'False'
    category: PowerPoint
    category_id: 40
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - PowerPoint
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L263
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\16.0\Word\Security\FileBlock" /v RtfFiles /t REG_DWORD /d 00000002 /f
    ruleid: 443
    rule_name: Rtf File Block
    description: This rule sets the Rtf File Block setting in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Rtf File Block
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L331
    comments:
      - File Block policy to prevent Office from opening RTF documents
      - E-2023-21716 and CVE-2022-30190
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.069
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\14.0\Excel\Security" /v WorkbookLinkWarnings /t REG_DWORD /d 2 /f
    ruleid: 444
    rule_name: Workbook Link Warnings
    description: This rule sets Workbook Link Warnings in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - Workbook Link Warnings
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L271
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\15.0\Word\Security\FileBlock" /v RtfFiles /t REG_DWORD /d 00000002 /f
    ruleid: 445
    rule_name: Rtf File Block
    description: This rule sets the Rtf File Block setting in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - Rtf File Block
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L330
    comments:
      - File Block policy to prevent Office from opening RTF documents
      - E-2023-21716 and CVE-2022-30190
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\15.0\Excel\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 446
    rule_name: Packager Prompt
    description: This rule sets the Packager Prompt setting in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L278
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Office\12.0\Word\Options\vpref\fNoCalclinksOnopen_90_1" /t REG_DWORD /d 1 /f
    ruleid: 447
    rule_name: No Calculate Links On Open
    description: This rule sets the No Calculate Links On Open setting in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - No Calculate Links On Open
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L265
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\15.0\Excel\Security" /v blockcontentexecutionfrominternet /t REG_DWORD /d 1 /f
    ruleid: 448
    rule_name: Block Content Execution from Internet
    description: This rule blocks content execution from the internet in Microsoft Excel.
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - content execution
      - internet
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L128
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L287
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office itself against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\15.0\Word\Security" /v vbawarnings /t REG_DWORD /d 4 /f
    ruleid: 449
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Word.
    default:
      value: ''
      present: 'False'
    category: Word
    category_id: 42
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Word
      - VBA warnings
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L130
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L289
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office itself against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\15.0\Outlook\Security" /v markinternalasunsafe /t REG_DWORD /d 0 /f
    ruleid: 450
    rule_name: Marking Internal Emails as Unsafe
    description: This rule disables marking internal emails as unsafe in Microsoft Outlook.
    default:
      value: ''
      present: 'False'
    category: Outlook
    category_id: 41
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Outlook
      - internal emails
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L126
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L285
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office itself against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\12.0\Publisher\Security" /v vbawarnings /t REG_DWORD /d 4 /f
    ruleid: 451
    rule_name: VBA Warnings
    description: This rule sets VBA warnings in Microsoft Publisher (Office 2012).
    default:
      value: ''
      present: 'False'
    category: Security
    category_id: 15
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Publisher
      - VBA warnings
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L122
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L281
    comments:
      - Enable and Configure Microsoft Office Security Settings
      - Harden all version of MS Office itself against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Sources-> https://decentsecurity.com/block-office-macros/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Office\14.0\Excel\Security" /v PackagerPrompt /t REG_DWORD /d 2 /f
    ruleid: 452
    rule_name: Packager Prompt
    description: This rule enables the Packager Prompt in Microsoft Excel (Office 2010).
    default:
      value: ''
      present: 'False'
    category: Excel
    category_id: 39
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - Excel
      - Packager Prompt
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L269
    comments:
      - Harden all version of MS Office against common malspam attacks
      - Disables Macros, enables ProtectedView
      - Extracted via regsnapshot from what Hardentools does
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Policies\Microsoft\Office\15.0\Onenote\options\embeddedfileopenoptions" /v blockedextensions /t REG_SZ /d ".js;.exe;.bat;.vbs;.com;.scr;.cmd;.ps" /f
    ruleid: 453
    rule_name: File Extensions
    description: This rule blocks certain file extensions in Microsoft OneNote.
    default:
      value: ''
      present: 'False'
    category: Onenote
    category_id: 38
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Office
      - OneNote
      - file extensions
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L307
    comments:
      - Block OneNote malware
      - https://www.huntress.com/blog/addressing-initial-access
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype wscfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 454
    rule_name: ftype wscfile
    description: Define the file type association for .wsc files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type Association
      - .wsc
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L48
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'wscfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype sctfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 455
    rule_name: ftype sctfile
    description: Define the file type association for .sct files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type Association
      - .sct
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L52
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.015
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'sctfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype cmdfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 456
    rule_name: ftype cmdfile
    description: Define the file type association for .cmd files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type Association
      - .cmd
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L42
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'cmdfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg delete "HKLM\SOFTWARE\Classes\.devicemetadata-ms" /f
    ruleid: 457
    rule_name: Devicemetadata-ms
    description: Delete the registry key associated with .devicemetadata-ms files.
    default:
      value: ''
      present: 'False'
    category: devicemetadata-ms
    category_id: 45
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry Modification
      - .devicemetadata-ms
      - Delete
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L77
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L84
    comments:
      - https://posts.specterops.io/remote-code-execution-via-path-traversal-in-the-device-metadata-authoring-wizard-a0d5839fc54f
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'ERROR- The system was unable to find the specified registry key or value.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype slkfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 458
    rule_name: ftype slkfile
    description: Define the file type association for .slk files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type Association
      - .slk
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L72
    comments:
      - https://rinseandrepeatanalysis.blogspot.com/2018/09/dde-downloaders-excel-abuse-and.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.011
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'slkfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype vbsfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 459
    rule_name: ftype vbsfile
    description: Define the file type association for .vbs files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type Association
      - .vbs
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L23
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L47
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.012
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'vbsfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg delete "HKCR\SettingContent\Shell\Open\Command" /v DelegateExecute /f
    ruleid: 460
    rule_name: DelegateExecute
    description: Delete the registry value DelegateExecute associated with Shell\Open\Command key.
    default:
      value: ''
      present: 'False'
    category: SettingContent
    category_id: 46
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry Modification
      - Delete
      - Shell\Open\Command
      - DelegateExecute
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L69
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L76
    comments:
      - Changing back
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype deployfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 461
    rule_name: ftype deployfile
    description: Define the file type association for .deploy files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type Association
      - .deploy
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L84
    comments:
      - Mitigate ClickOnce .application and .deploy files vector
      - https://blog.redxorblue.com/2020/07/one-click-to-compromise-fun-with.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.013
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'deployfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v DontDisplayNetworkSelectionUI /t REG_DWORD /d 1 /f
    ruleid: 462
    rule_name: DisplayNetworkSelectionUI
    description: Add or modify the registry value "DontDisplayNetworkSelectionUI" to 1 under HKLM\SOFTWARE\Policies\Microsoft\Windows\System.
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry Modification
      - HKLM\SOFTWARE\Policies\Microsoft\Windows\System
      - DontDisplayNetworkSelectionUI
      - Add
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L89
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L96
    comments:
      - Prevent Local windows wireless exploitation-> the Airstrike attack https://shenaniganslabs.io/2021/04/13/Airstrike.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.074
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype chmfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 463
    rule_name: ftype chmfile
    description: Define the file type association for .chm files to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type Association
      - .chm
      - Notepad
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L41
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'chmfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCR\SettingContent\Shell\Open\Command" /v DelegateExecute /t REG_SZ /d "" /f
    ruleid: 464
    rule_name: DelegateExecute
    description: Add or modify the registry value "DelegateExecute" to "\" (empty string) under HKCR\SettingContent\Shell\Open\Command.
    default:
      value: '{0c194cb2-2959-4d14-8964-37fd3ee48c32d}'
      present: 'True'
    category: SettingContent
    category_id: 46
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry Modification
      - HKCR\SettingContent\Shell\Open\Command
      - DelegateExecute
      - Add
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L70
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L77
    comments:
      - Changing back
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype prnfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 465
    rule_name: Ftype Prnfile
    description: Set the file type association for prnfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L74
    comments:
      - https://rinseandrepeatanalysis.blogspot.com/2018/09/dde-downloaders-excel-abuse-and.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'prnfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg delete "HKLM\SOFTWARE\Classes\.devicemanifest-ms" /f
    ruleid: 466
    rule_name: Registry Delete
    description: Delete the registry key associated with .devicemanifest-ms file extension.
    default:
      value: ''
      present: 'False'
    category: devicemanifest-ms
    category_id: 47
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Delete
      - File Extension
      - .devicemanifest-ms
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L78
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L85
    comments:
      - https://posts.specterops.io/remote-code-execution-via-path-traversal-in-the-device-metadata-authoring-wizard-a0d5839fc54f
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'ERROR - The system was unable to find the specified registry key or value.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype wshfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 467
    rule_name: Ftype Wshfile
    description: Set the file type association for wshfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L17
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L51
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.009
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'wshfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype vbefile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 468
    rule_name: Ftype Vbefile
    description: Set the file type association for vbefile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L22
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L46
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.009
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'vbefile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype iqyfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 469
    rule_name: Ftype Iqyfile
    description: Set the file type association for iqyfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L73
    comments:
      - https://rinseandrepeatanalysis.blogspot.com/2018/09/dde-downloaders-excel-abuse-and.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.010
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'iqyfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype wsffile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 470
    rule_name: Ftype Wsffile
    description: Set the file type association for wsffile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L18
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L49
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.010
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'wsffile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype urlfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 471
    rule_name: Ftype Urlfile
    description: Set the file type association for urlfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L53
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.011
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'urlfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype htafile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 472
    rule_name: Ftype Htafile
    description: Set the file type association for htafile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L16
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L43
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.011
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'htafile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype mscfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 473
    rule_name: Ftype Mscfile
    description: Set the file type association for mscfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L61
    comments:
      - https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.009
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'mscfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype wsfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 474
    rule_name: Ftype Wsfile
    description: Set the file type association for wsfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L50
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.009
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'wsfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype jsfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 475
    rule_name: Ftype Jsfile
    description: Set the file type association for jsfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L20
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L45
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.010
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'jsfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype diffile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 476
    rule_name: Ftype Diffile
    description: Set the file type association for diffile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L75
    comments:
      - https://rinseandrepeatanalysis.blogspot.com/2018/09/dde-downloaders-excel-abuse-and.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.010
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'diffile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype wcxfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 477
    rule_name: Ftype Wcxfile
    description: Set the file type association for wcxfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L59
    comments:
      - https://www.trustwave.com/Resources/SpiderLabs-Blog/Firework--Leveraging-Microsoft-Workspaces-in-a-Penetration-Test/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.012
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'wcxfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype applicationfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 478
    rule_name: Ftype Applicationfile
    description: Set the file type association for applicationfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L83
    comments:
      - Mitigate ClickOnce .application and .deploy files vector
      - https://blog.redxorblue.com/2020/07/one-click-to-compromise-fun-with.html
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'applicationfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype jsefile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 479
    rule_name: Ftype Jsefile
    description: Set the file type association for jsefile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L21
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L44
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'jsefile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype rdgfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 480
    rule_name: Ftype Rdgfile
    description: Set the file type association for rdgfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L80
    comments:
      - CVE-2020-0765 impacting Remote Desktop Connection Manager (RDCMan) configuration files - MS won't fix
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'rdgfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype regfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 481
    rule_name: Ftype Regfile
    description: Set the file type association for regfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L57
    comments:
      - https://seclists.org/fulldisclosure/2019/Mar/27
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.011
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'regfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: ftype batfile="%systemroot%\system32\notepad.exe" "%1"
    ruleid: 482
    rule_name: Ftype Batfile
    description: Set the file type association for batfile to open with Notepad.
    default:
      value: ''
      present: 'False'
    category: File Type Association
    category_id: 44
    sub_category:
    sub_category_id:
    cmd: ftype
    run: cmd
    keywords:
      - File Type
      - Notepad
      - Association
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L19
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L40
    comments:
      - Change file associations to protect against common ransomware attacks
      - Note that if you legitimately use these extensions, like .bat, you will now need to execute them manually from cmd or powershel
      - Alternatively, you can right-click on them and hit 'Run as Administrator' but ensure it's a script you want to run :)
      - https://support.microsoft.com/en-us/help/883260/information-about-the-attachment-manager-in-microsoft-windows
      - Changing back example (x64)
      - ftype htafile=C:\Windows\SysWOW64\mshta.exe "%1" {1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}%U{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5} %*
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.011
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'batfile="C:\\Windows\\system32\\notepad.exe" "%1"\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\MICROSOFT\.NETFramework\Security\TrustManager\PromptingLevel" /v UntrustedSites /t REG_SZ /d "Disabled" /f
    ruleid: 483
    rule_name: Untrusted Sites
    description: Disable the Untrusted Sites Prompting in .NET Framework Security Trust Manager.
    default:
      value: ''
      present: 'False'
    category: TrustManager
    category_id: 48
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L617
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L500
    comments:
      - Disable the ClickOnce trust promp
      - this only partially mitigates the risk of malicious ClickOnce Appps - the ability to run the manifest is disabled, but hash retrieval is still possible
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.046
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "ShowStatusBar" /t REG_DWORD /d 1 /f
    ruleid: 484
    rule_name: Show Status Bar
    description: Enable the Status Bar in Windows Explorer.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L563
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.029
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager" /v ProtectionMode /t REG_DWORD /d 1 /f
    ruleid: 485
    rule_name: Protection Mode
    description: Enable Protection Mode in Session Manager.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Control
    category_id: 49
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Control
      - SYSTEM
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L168
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L499
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L418
    comments:
      - Prevent (remote) DLL Hijacking
      - Sources -> https://www.greyhathacker.net/?p=235
      - https://www.verifyit.nl/wp/?p=175464
      - https://support.microsoft.com/en-us/help/2264107/a-new-cwdillegalindllsearch-registry-entry-is-available-to-control-the
      - The value data can be 0x1, 0x2 or 0xFFFFFFFF. If the value name CWDIllegalInDllSearch does not exist or the value data is 0 then the machine will still be vulnerable to attack.
      - Please be aware that the value 0xFFFFFFFF could break certain applications (also blocks dll loading from USB).
      - Blocks a DLL Load from the current working directory if the current working directory is set to a WebDAV folder  (set it to 0x1)
      - Blocks a DLL Load from the current working directory if the current working directory is set to a remote folder (such as a WebDAV or UNC location) (set it to 0x2)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\MICROSOFT\.NETFramework\Security\TrustManager\PromptingLevel" /v TrustedSites /t REG_SZ /d "Disabled" /f
    ruleid: 486
    rule_name: Trusted Sites Prompting
    description: Disable the Trusted Sites Prompting in .NET Framework Security Trust Manager.
    default:
      value: ''
      present: 'False'
    category: TrustManager
    category_id: 48
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - MICROSOFT
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L616
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L499
    comments:
      - Disable the ClickOnce trust promp
      - this only partially mitigates the risk of malicious ClickOnce Appps - the ability to run the manifest is disabled, but hash retrieval is still possible
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" /v SCRemoveOption /t REG_DWORD /d 2 /f
    ruleid: 487
    rule_name: SCRemoveOption in Winlogon
    description: Set the SCRemoveOption in Windows NT Winlogon to 2.
    default:
      value: ''
      present: 'False'
    category: CurrentVersion
    category_id: 50
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Winlogon
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L477
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L439
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L362
    comments:
      - Force logoff if smart card removed
      - Set to "2" for logoff, set to "1" for lock
      - Commented out as consumers don't typically use smart cards
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v EnableSmartScreen /t REG_DWORD /d 1 /f
    ruleid: 488
    rule_name: SmartScreen in Windows Policies
    description: Enable SmartScreen in Microsoft Windows System Policies.
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Policies
      - Microsoft
      - Windows
      - System
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L191
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L471
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L391
    comments:
      - Enable SmartScreen
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v EnableVirtualization /t REG_DWORD /d 1 /f
    ruleid: 489
    rule_name: Virtualization in Windows Policies
    description: Enable Virtualization in Microsoft Windows System Policies.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L165
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L389
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L326
    comments:
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters" /v RequireSecuritySignature /t REG_DWORD /d 1 /f
    ruleid: 490
    rule_name: Security Signature
    description: Require Security Signature in LanMan Server Parameters.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: LanManServer
    category_id: 51
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L240
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L442
    comments:
      - Force SMB server signing
      - This could cause impact if the Windows computer this is run on is hosting a file share and the other computers connecting to it do not have SMB client signing enabled.
      - This is commented out by default as it could impact access to consumer-grade file shares but it's a recommended setting
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\LanmanWorkStation\Parameters" /v "EnableSecuritySignature" /t REG_DWORD /d 1 /f
    ruleid: 491
    rule_name: Security Signature in Lanman Workstation
    description: Enable Security Signature in Lanman Workstation Parameters.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: LanmanWorkStation
    category_id: 52
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - System
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L237
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L457
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L377
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - Enable SMB/LDAP Signing
      - Sources ->
      - http://eddiejackson.net/wp/?p=15812
      - https://en.hackndo.com/ntlm-relay/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows Script Host\Settings" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 492
    rule_name: Windows Script Host
    description: Disable Windows Script Host in Current User settings.
    default:
      value: ''
      present: 'False'
    category: Settings
    category_id: 53
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SOFTWARE
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L503
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L422
    comments:
      - Disable (c|w)script.exe to prevent the system from running VBS scripts
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" /v DisableSmartNameResolution /t REG_DWORD /d 1 /f
    ruleid: 493
    rule_name: Smart Name Resolution in DNS Client
    description: Disable Smart Name Resolution in Microsoft Windows DNS Client Policies.
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SOFTWARE
      - Microsoft
      - Policies
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L157
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L380
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L315
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers" /v DisableWebPnPDownload /t REG_DWORD /d 1 /f
    ruleid: 494
    rule_name: WebPnPDownload
    description: DisableWebPnPDownload in Windows Registry
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - Printers
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L173
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L394
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.064
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 0 /f
    ruleid: 495
    rule_name: LocalAccountTokenFilterPolicy
    description: Set LocalAccountTokenFilterPolicy in Windows Registry
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - System
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L481
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L424
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L353
    comments:
      - Restrict privileged local admin tokens being used from network
      - Commented out as it only works on domain-joined assets
      - https://www.harmj0y.net/blog/redteaming/pass-the-hash-is-dead-long-live-localaccounttokenfilterpolicy/
      - https://en.hackndo.com/pass-the-hash/
      - Affects Windows Remoting (WinRM) deployments
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation" /v AllowInsecureGuestAuth /t REG_DWORD /d 0 /f
    ruleid: 496
    rule_name: AllowInsecureGuestAuth
    description: Disable AllowInsecureGuestAuth in Windows Registry
    default:
      value: ''
      present: 'False'
    category: LanmanWorkstation
    category_id: 55
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - LanmanWorkstation
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L438
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L485
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L404
    comments:
      - Prevent guest logons to SMB servers
      - This is commented out by default as it could impact access to consumer-grade file shares but it's a recommended setting
      - Can impact access to consumer-grade file shares / NAS but it's a recommended setting
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "ShowRecent" /t REG_DWORD /d 0 /f
    ruleid: 497
    rule_name: ShowRecent
    description: Disable ShowRecent in Windows Registry
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - Windows Explorer
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L569
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0" /v NTLMMinServerSec /t REG_DWORD /d 537395200 /f
    ruleid: 498
    rule_name: NTLMMinServerSec
    description: Set NTLMMinServerSec in Windows Registry
    default:
      value: '0x20000000 (536870912)'
      present: 'True'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - MSV1_0
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L411
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L338
    comments:
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - THIS BREAKS RDP (outgoing to other domain machines) & SHARES
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" /v EnablePlainTextPassword /t REG_DWORD /d 0 /f
    ruleid: 499
    rule_name: PlainTextPassword
    description: Disable EnablePlainTextPassword in Windows Registry
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: LanmanWorkstation
    category_id: 55
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - LanmanWorkstation
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L434
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L481
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L400
    comments:
      - Prevent unencrypted passwords being sent to third-party SMB servers
      - This is commented out by default as it could impact access to consumer-grade file shares but it's a recommended setting
      - Can impact access to consumer-grade file shares / NAS but it's a recommended setting
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation" /v AllowProtectedCreds /t REG_DWORD /d 1 /f
    ruleid: 500
    rule_name: AllowProtectedCreds
    description: Enable AllowProtectedCreds in Windows Registry
    default:
      value: ''
      present: 'False'
    category: CredentialsDelegation
    category_id: 56
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - CredentialsDelegation
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L249
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L608
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L491
    comments:
      - Harden lsass to help protect against credential dumping (Mimikatz)
      - Configures lsass.exe as a protected process and disables wdigest
      - Enables delegation of non-exported credentials which enables support for Restricted Admin Mode or Remote Credential Guard
      - https://technet.microsoft.com/en-us/library/dn408187(v=ws.11).aspx
      - https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v ShellSmartScreenLevel /t REG_SZ /d Block /f
    ruleid: 501
    rule_name: ShellSmartScreenLevel
    description: Set ShellSmartScreenLevel in Windows Registry
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - System
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L192
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L472
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L392
    comments:
      - Enable SmartScreen
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\MICROSOFT\.NETFramework\Security\TrustManager\PromptingLevel" /v LocalIntranet /t REG_SZ /d "Disabled" /f
    ruleid: 502
    rule_name: LocalIntranet
    description: Set LocalIntranet in Windows Registry
    default:
      value: ''
      present: 'False'
    category: TrustManager
    category_id: 48
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - .NETFramework\Security\TrustManager\PromptingLevel
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L614
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L497
    comments:
      - Disable the ClickOnce trust promp
      - this only partially mitigates the risk of malicious ClickOnce Appps - the ability to run the manifest is disabled, but hash retrieval is still possible
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v RestrictRemoteSAM /t REG_SZ /d "O:BAG:BAD:(A;;RC;;;BA)" /f
    ruleid: 503
    rule_name: RestrictRemoteSAM
    description: Set RestrictRemoteSAM in Windows Registry
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - Control\Lsa
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L233
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L417
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L346
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer" /v AlwaysInstallElevated /t REG_DWORD /d 0 /f
    ruleid: 504
    rule_name: AlwaysInstallElevated
    description: Disable AlwaysInstallElevated in Windows Registry
    default:
      value: ''
      present: 'False'
    category: Windows Installer
    category_id: 57
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Registry
      - Windows
      - Windows Installer
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L309
    comments:
      - Forces Installer to NOT use elevated privileges during installs by default, which prevents escalation of privileges vulnerabilities and attacks
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.065
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v LmCompatibilityLevel /t REG_DWORD /d 5 /f
    ruleid: 505
    rule_name: LmCompatibilityLevel
    description: Configure LmCompatibilityLevel to improve security.
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - LmCompatibilityLevel
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L430
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L477
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L342
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L396
    comments:
      - Enforce NTLMv2 and LM authentication
      - This is commented out by default as it could impact access to consumer-grade file shares but it's a recommended setting
      - Enforce NTLMv2 and refuse NTLM and LM authentication
      - Can impact access to consumer-grade file shares / NAS but it's a recommended setting
      - http://systemmanager.ru/win2k_regestry.en/76052.htm
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: net start WinRM
    ruleid: 506
    rule_name: Start WinRM Service
    description: Ensure the WinRM service is running.
    default:
      value: ''
      present: 'False'
    category: WinRM
    category_id: 58
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - WinRM
      - Service
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L462
    comments:
      - Disable WinRM Client Digiest authentication
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.254
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The Windows Remote Management (WS-Management) service is starting.\r\nThe Windows Remote Management (WS-Management) service was started successfully.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v LimitBlankPasswordUse /t REG_DWORD /d 1 /f
    ruleid: 507
    rule_name: Limit Blank Password Use
    description: Restrict the use of blank passwords.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - LimitBlankPasswordUse
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L235
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L419
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L348
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\Wpad" /v WpadOverride /t REG_DWORD /d 1 /f
    ruleid: 508
    rule_name: WpadOverride
    description: Configure WpadOverride for improved security.
    default:
      value: ''
      present: 'False'
    category: Internet Settings
    category_id: 1
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - WpadOverride
      - Security
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L420
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L349
    comments:
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v NoHeapTerminationOnCorruption /t REG_DWORD /d 0 /f
    ruleid: 509
    rule_name: Heap Termination on Corruption
    description: Disable heap termination on corruption for enhanced stability.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - NoHeapTerminationOnCorruption
      - Stability
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L171
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L393
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L330
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows Script Host\Settings" /v ActiveDebugging /t REG_SZ /d 1 /f
    ruleid: 510
    rule_name: Active Debugging
    description: Enable active debugging in Windows Script Host.
    default:
      value: ''
      present: 'False'
    category: Windows Script Host
    category_id: 59
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SOFTWARE
      - Microsoft
      - Windows
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L504
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L423
    comments:
      - Disable (c|w)script.exe to prevent the system from running VBS scripts
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v NoAutoplayfornonVolume /t REG_DWORD /d 1 /f
    ruleid: 511
    rule_name: Autoplay for Non-Volume Devices
    description: Disable autoplay for non-volume devices in Windows Explorer.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Policies
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L219
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L538
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L453
    comments:
      - Removal Media Settings
      - Disable autorun/autoplay on all drives
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Disable-WindowsOptionalFeature -Online -FeatureName MicrosoftWindowsPowerShellV2Root
    ruleid: 512
    rule_name: Windows PowerShell V2 Root
    description: Disable the Windows PowerShell V2 Root feature.
    default:
      value: ''
      present: 'False'
    category: PowerShellV2
    category_id: 60
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: cmd
    keywords:
      - PowerShell V2
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L180
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L593
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L476
    comments:
      - Disable Powershellv2
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 18.215
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager" /v CWDIllegalInDllSearch /t REG_DWORD /d 0x2 /f
    ruleid: 513
    rule_name: CWD Illegal In Dll Search
    description: Set the CWDIllegalInDllSearch registry key to 0x2 in Session Manager.
    default:
      value: ''
      present: 'False'
    category: Session Manager
    category_id: 61
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SYSTEM
      - Control
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L497
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L416
    comments:
      - Prevent (remote) DLL Hijacking
      - Sources->
      - https://www.greyhathacker.net/?p=235
      - https://www.verifyit.nl/wp/?p=175464
      - https://support.microsoft.com/en-us/help/2264107/a-new-cwdillegalindllsearch-registry-entry-is-available-to-control-the
      - The value data can be 0x1, 0x2 or 0xFFFFFFFF. If the value name CWDIllegalInDllSearch does not exist or the value data is 0 then the machine will still be vulnerable to attack.
      - Please be aware that the value 0xFFFFFFFF could break certain applications (also blocks dll loading from USB).
      - Blocks a DLL Load from the current working directory if the current working directory is set to a WebDAV folder  (set it to 0x1)
      - Blocks a DLL Load from the current working directory if the current working directory is set to a remote folder (such as a WebDAV or UNC location) (set it to 0x2)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v DisableRestrictedAdminOutboundCreds /t REG_DWORD /d 00000001 /f
    ruleid: 514
    rule_name: Restricted Admin Outbound Credentials
    description: Disable outbound credentials for Restricted Admin in Lsa.
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SYSTEM
      - Control
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L605
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L488
    comments:
      - Harden lsass to help protect against credential dumping (Mimikatz)
      - Configures lsass.exe as a protected process and disables wdigest
      - Enables delegation of non-exported credentials which enables support for Restricted Admin Mode or Remote Credential Guard
      - https://technet.microsoft.com/en-us/library/dn408187(v=ws.11).aspx
      - https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\Dnscache\Parameters" /v DisableParallelAandAAAA /t REG_DWORD /d 1 /f
    ruleid: 515
    rule_name: Parallel A and AAAA Queries
    description: Disable parallel A and AAAA queries in Dnscache.
    default:
      value: ''
      present: 'False'
    category: Dnscache
    category_id: 62
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L158
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L381
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L316
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Print\Providers\LanMan Print Services\Servers" /v AddPrinterDrivers /t REG_DWORD /d 1 /f
    ruleid: 516
    rule_name: Adding Printer Drivers in Servers
    description: Enable adding printer drivers in LanMan Print Services.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: LanMan Print Services
    category_id: 63
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Control
      - Print
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L305
    comments:
      - Enforce the Administrator role for adding printer drivers. This is a frequent exploit attack vector.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" /v EnableMulticast /t REG_DWORD /d 0 /f
    ruleid: 517
    rule_name: DNSClient Multicast
    description: Disable DNSClient multicast in Windows.
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows NT
      - Microsoft
      - Policies
    references:
      -
      - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L156
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L314
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - Prevent Kerberos from using DES or RC4
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v RestrictAnonymousSAM /t REG_DWORD /d 1 /f
    ruleid: 518
    rule_name: Restrict Anonymous SAM
    description: Restrict anonymous SAM access in Lsa.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SYSTEM
      - Control
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L230
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L414
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L343
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" /v IGMPLevel /t REG_DWORD /d 0 /f
    ruleid: 519
    rule_name: IGMP Level
    description: Disable IGMP level in Tcpip settings.
    default:
      value: ''
      present: 'False'
    category: Tcpip
    category_id: 64
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L160
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L382
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L319
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\Netlogon\Parameters" /v RequireSignOrSeal /t REG_DWORD /d 1 /f
    ruleid: 520
    rule_name: Require Sign or Seal
    description: Require signing or sealing in Netlogon parameters.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Netlogon
    category_id: 65
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - System
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L485
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L465
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L385
    comments:
      - Ensure outgoing secure channel traffic is encrytped
      - Commented out as it only works on domain-joined assets
      - Ensure 'Domain member'-> Digitally encrypt or sign secure channel data (always)' is set to 'Enabled'
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.027
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control" /v DisableRemoteScmEndpoints /t REG_DWORD /d 1 /f
    ruleid: 521
    rule_name: Remote Scm Endpoints
    description: Disable Remote Scm Endpoints via Windows Registry
    default:
      value: ''
      present: 'False'
    category: CurrentControlSet
    category_id: 66
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - System
      - Control
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L260
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L583
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L466
    comments:
      - Disabling RPC usage from a remote asset interacting with services
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v MinEncryptionLevel /t REG_DWORD /d 00000003 /f
    ruleid: 522
    rule_name: RDP Minimum Encryption Level
    description: Set the Minimum Encryption Level for RDP via Windows Registry
    default:
      value: '0x00000002 (2)'
      present: 'True'
    category: WinStations
    category_id: 67
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Control
      - SYSTEM
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L405
    comments:
      - Requiring Strong Remote Desktop Encryption if enabled and forcing TLS Authentication"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\Netbt\Parameters" /v NoNameReleaseOnDemand /t REG_DWORD /d 1 /f
    ruleid: 523
    rule_name: No Name Release on Demand
    description: Enable No Name Release on Demand via Windows Registry
    default:
      value: ''
      present: 'False'
    category: Services
    category_id: 68
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Services
      - System
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L177
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L398
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L333
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.067
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest" /v UseLogonCredential /t REG_DWORD /d 0 /f
    ruleid: 524
    rule_name: Use Logon Credential
    description: Disable WDigest Authentication via Windows Registry
    default: 
      value: ''
      present: 'False'
    category: SecurityProviders
    category_id: 69
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SYSTEM
      - Control
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L248
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L606
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L489
    comments:
      - Harden lsass to help protect against credential dumping (mimikatz) and audit lsass access requests
      - Configures lsass.exe as a protected process and disables wdigest
      - Enables delegation of non-exported credentials which enables support for Restricted Admin Mode or Remote Credential Guard
      - https://technet.microsoft.com/en-us/library/dn408187(v=ws.11).aspx
      - https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" /v ShowFrequent /t REG_DWORD /d 0 /f
    ruleid: 525
    rule_name: Show Frequent Programs
    description: Disable Show Frequent Programs via Windows Registry
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
      - Explorer
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L555
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'ERROR- Invalid key name.\r\nType "REG ADD /?" for usage.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v NoDriveTypeAutoRun /t REG_DWORD /d 0xff /f
    ruleid: 526
    rule_name: No AutoRun for Drive Types
    description: Disable AutoRun for Drive Types via Windows Registry
    default:
      value: '0x000000ff (255)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
      - Explorer
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L540
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L587
    comments:
      - Removal Media Settings - Disable Autorun/Autoplay on all drives
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v AlwaysShowMenus /t REG_DWORD /d 1 /f
    ruleid: 527
    rule_name: Always Show Menus
    description: Always Show Menus in Explorer via Windows Registry
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
      - Explorer
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L567
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client" /v AllowDigest /t REG_DWORD /d 0 /f
    ruleid: 528
    rule_name: Digest Authentication for WinRM Client
    description: Disable Digest Authentication for WinRM Client via Windows Registry
    default:
      value: ''
      present: 'False'
    category: WinRM
    category_id: 58
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L256
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L579
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L461
    comments:
      - Disable WinRM Client Digiest authentication
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters" /v RestrictNullSessAccess /t REG_DWORD /d 1 /f
    ruleid: 529
    rule_name: Restrict Null Session Access
    description: Restrict Null Session Access via Windows Registry
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: LanManServer
    category_id: 51
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Services
      - Parameters
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L229
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L387
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L324
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v UseMachineId /t REG_DWORD /d 1 /f
    ruleid: 530
    rule_name: UseMachineId
    description: Enable UseMachineId for LSA via Windows Registry
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Control
      - SYSTEM
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L234
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L418
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L347
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" /v ShowRecent /t REG_DWORD /d 0 /f
    ruleid: 531
    rule_name: Show Recent Items
    description: Disable Show Recent Items via Windows Registry
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
      - Explorer
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L556
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info: b'ERROR- Invalid key name.\r\nType "REG ADD /?" for usage.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v FilterAdministratorToken /t REG_DWORD /d 1 /f
    ruleid: 532
    rule_name: FilterAdministratorToken Registry Value
    description: This rule sets the FilterAdministratorToken registry value to 1 in the key.
    default:
      value: 
      present: 'True'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - FilterAdministratorToken
      - Windows
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L425
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L354
    comments:
      - https://www.harmj0y.net/blog/redteaming/pass-the-hash-is-dead-long-live-localaccounttokenfilterpolicy/
      - https://en.hackndo.com/pass-the-hash/
      - Affects Windows Remoting (WinRM) deployments
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager" /v SafeDLLSearchMode /t REG_DWORD /d 1 /f
    ruleid: 533
    rule_name: SafeDLLSearchMode Registry Value
    description: This rule sets the SafeDLLSearchMode registry value to 1 in the key.
    default:
      value: ''
      present: 'False'
    category: Session Manager
    category_id: 61
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SafeDLLSearchMode
      - Windows Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L167
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L498
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L417
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - Prevent (remote) DLL Hijacking
      - Sources ->
      - https://www.greyhathacker.net/?p=235
      - https://www.verifyit.nl/wp/?p=175464
      - https://support.microsoft.com/en-us/help/2264107/a-new-cwdillegalindllsearch-registry-entry-is-available-to-control-the
      - The value data can be 0x1, 0x2 or 0xFFFFFFFF. If the value name CWDIllegalInDllSearch does not exist or the value data is 0 then the machine will still be vulnerable to attack.
      - Please be aware that the value 0xFFFFFFFF could break certain applications (also blocks dll loading from USB).
      - Blocks a DLL Load from the current working directory if the current working directory is set to a WebDAV folder  (set it to 0x1)
      - Blocks a DLL Load from the current working directory if the current working directory is set to a remote folder (such as a WebDAV or UNC location) (set it to 0x2)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: net stop WinRM
    ruleid: 534
    rule_name: Stop WinRM Service
    description: This rule stops the WinRM (Windows Remote Management) service.
    default:
      value: ''
      present: 'False'
    category: WinRM
    category_id: 58
    sub_category:
    sub_category_id:
    cmd: net
    run: cmd
    keywords:
      - WinRM
      - Service
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L253
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L576
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L458
    comments:
      - Windows RPC and WinRM settings
      - Stop WinRM Service
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.587
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The Windows Remote Management (WS-Management) service is stopping.\r\nThe Windows Remote Management (WS-Management) service was stopped successfully.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Disable-WindowsOptionalFeature -Online -FeatureName MicrosoftWindowsPowerShellV2
    ruleid: 535
    rule_name: Windows PowerShell Version 2
    description: This rule disables Windows PowerShell Version 2 using PowerShell.exe.
    default:
      value: ''
      present: 'False'
    category: PowerShellV2
    category_id: 60
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: cmd
    keywords:
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L179
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L592
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L475
    comments:
      - Disable Powershellv2
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.566
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath- \r\nOnline -True\r\nRestartNeeded- False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows Script Host\Settings" /v SilentTerminate /t REG_SZ /d 0 /f
    ruleid: 536
    rule_name: SilentTerminate
    description: This rule sets the SilentTerminate registry value to 0 in the HKCU\SOFTWARE\Microsoft\Windows Script Host\Settings key.
    default:
      value: ''
      present: 'False'
    category: Windows Script Host
    category_id: 59
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SilentTerminate
      - Windows Script Host
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L506
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L425
    comments:
      - Disable (c|w)script.exe to prevent the system from running VBS scripts
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\Netlogon\Parameters" /v SignSecureChannel /t REG_DWORD /d 1 /f
    ruleid: 537
    rule_name: SignSecureChannel
    description: This rule sets the SignSecureChannel registry value to 1 in the HKLM\System\CurrentControlSet\Services\Netlogon\Parameters key.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Netlogon
    category_id: 65
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SignSecureChannel
      - Windows Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L469
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L389
    comments:
      - Ensure 'Domain member-> Digitally sign secure channel data (when possible)' is set to 'Enabled'
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f
    ruleid: 538
    rule_name: DisableRestrictedAdmin
    description: This rule sets the DisableRestrictedAdmin registry value to 0 in the HKLM\SYSTEM\CurrentControlSet\Control\Lsa key.
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Control
      - DisableRestrictedAdmin
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L604
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L487
    comments:
      - Harden lsass to help protect against credential dumping (Mimikatz)
      - Configures lsass.exe as a protected process and disables wdigest
      - Enables delegation of non-exported credentials which enables support for Restricted Admin Mode or Remote Credential Guard
      - https://technet.microsoft.com/en-us/library/dn408187(v=ws.11).aspx
      - https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers" /v DisableHTTPPrinting /t REG_DWORD /d 1 /f
    ruleid: 539
    rule_name: DisableHTTPPrinting Registry Value
    description: This rule sets the DisableHTTPPrinting registry value to 1 in the HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers key.
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - DisableHTTPPrinting
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L174
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L395
    comments:
      - Enable and Configure General Windows Security Settings
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\LSA\MSV1_0" /v allownullsessionfallback /t REG_DWORD /d 0 /f
    ruleid: 540
    rule_name: allownullsessionfallback Registry Value
    description: This rule sets the allownullsessionfallback registry value to 0 in the key.
    default:
      value: ''
      present: 'False'
    category: LSA
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - allownullsessionfallback
      - Control
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L236
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L413
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L340
    comments:
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - THIS BREAKS RDP (outgoing to other domain machines) & SHARES
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.027
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Internet Explorer\Main" /v DisableFirstRunCustomize /t REG_DWORD /d 2 /f
    ruleid: 541
    rule_name: First Run Customize
    description: Disable First Run Customize in Internet Explorer
    default:
      value: ''
      present: 'False'
    category: Internet Explorer
    category_id: 72
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Internet Explorer
      - First Run
      - Customize
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L445
    comments:
      - Disable need to run Internet Explorer's first launch configuration
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKEY_CLASSES_ROOT\Windows.IsoFile\shell\mount" /v ProgrammaticAccessOnly /t REG_SZ /f
    ruleid: 542
    rule_name: Programmatic Access Only
    description: Set Programmatic Access Only for Windows ISO Files
    default:
      value: ''
      present: 'False'
    category: Windows ISO Files
    category_id: 73
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows ISO
      - Programmatic Access
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L511
    comments:
      - Block ISO based malware downloads
      - https://winaero.com/remove-mount-context-menu-windows-10/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeliveryOptimization" /v DODownloadMode /t REG_DWORD /d 0 /f
    ruleid: 543
    rule_name: Delivery Optimization Download Mode
    description: Disable Download Mode for Delivery Optimization in Windows
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 10
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Delivery Optimization
      - Download Mode
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L521
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L435
    comments:
      - Windows Update Settings
      - Prevent Delivery Optimization from downloading Updates from other computers across the internet
      - 1 will restrict to LAN only. 0 will disable the feature entirely
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters" /v EnableSecuritySignature /t REG_DWORD /d 1 /f
    ruleid: 544
    rule_name: Security Signature
    description: Enable Security Signature for LAN Manager Workstation
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: LanmanWorkstation
    category_id: 55
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - LAN Manager Workstation
      - Security Signature
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L237
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.065
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0" /v NTLMMinClientSec /t REG_DWORD /d 537395200 /f
    ruleid: 545
    rule_name: NTLM Minimum Client Security
    description: Set NTLM Minimum Client Security for MSV1_0 in LSA
    default:
      value: '0x20000000 (536870912)'
      present: 'True'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - NTLM
      - Minimum Client Security
      - MSV1_0
      - LSA
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L412
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L339
    comments:
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v fEncryptRPCTraffic /t REG_DWORD /d 1 /f
    ruleid: 546
    rule_name: Encrypt RCP Traffic for Terminal Services
    description: Enable encryption of RCP traffic for Terminal Services
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Terminal Services
      - Encrypt
      - RCP Traffic
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L213
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L533
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L447
    comments:
      - Require encrypted RPC connections to Remote Desktop
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0" /v RestrictReceivingNTLMTraffic /t REG_DWORD /d 2 /f
    ruleid: 547
    rule_name: Restrict Receiving NTLM Traffic for MSV1_0
    description: Restrict the receiving of NTLM traffic for MSV1_0 in LSA
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - NTLM
      - Restrict Receiving
      - MSV1_0
      - LSA
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L402
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L335
    comments:
      - May break RDP NLA see comments
      - the next setting could impact RDP connections to desktops from other domain users and machines. Enable it in environments where you don't use RDP to internal user machines or you don't allow users to share folders on their machines.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Schedule" /v DisableRpcOverTcp /t REG_DWORD /d 1 /f
    ruleid: 548
    rule_name: RPC Over TCP in Windows Task Scheduler
    description: Disable RPC over TCP for Windows Task Scheduler
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - RPC
      - TCP
      - Task Scheduler
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L258
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L581
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L464
    comments:
      - Disabling RPC usage from a remote asset interacting with scheduled tasks
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\LanmanWorkStation\Parameters" /v "RequireSecuritySignature" /t REG_DWORD /d 1 /f
    ruleid: 549
    rule_name: Require Security Signature
    description: Require Security Signature for LAN Manager Workstation
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: LanmanWorkStation
    category_id: 52
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - LAN Manager Workstation
      - Security Signature
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L456
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L376
    comments:
      - Enable SMB/LDAP Signing
      - Sources-> http://eddiejackson.net/wp/?p=15812
      - https://en.hackndo.com/ntlm-relay/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v RunAsPPL /t REG_DWORD /d 00000001 /f
    ruleid: 550
    rule_name: RunAsPPL
    description: Enable RunAsPPL in Local Security Authority (LSA)
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - RunAsPPL
      - LSA
      - Local Security Authority
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L247
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L603
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L486
    comments:
      - Harden lsass to help protect against credential dumping (Mimikatz)
      - Configures lsass.exe as a protected process and disables wdigest
      - Enables delegation of non-exported credentials which enables support for Restricted Admin Mode or Remote Credential Guard
      - https://technet.microsoft.com/en-us/library/dn408187(v=ws.11).aspx
      - https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: wmic /interactive:off nicconfig where TcpipNetbiosOptions=1 call SetTcpipNetbios 2
    ruleid: 551
    rule_name: NetBIOS over TCP/IP
    description: Disable NetBIOS over TCP/IP by using WMIC command.
    default:
      value: ''
      present: 'False'
    category: Tcpip
    category_id: 64
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - NetBIOS
      - TCP/IP
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L587
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L470
    comments:
      - Stop NetBIOS over TCP/IP
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.590
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'No Instance(s) Available.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v NoRecentDocsHistory /t REG_DWORD /d 1 /f
    ruleid: 552
    rule_name: Recent Documents History
    description: Disable recent documents history in the Windows Explorer by modifying the registry.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows Explorer
      - Registry
      - Recent Documents
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L542
    comments:
      - Removal Media Settings - Disable Autorun/Autoplay on all drives
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f
    ruleid: 553
    rule_name: WDigest Authentication
    description: Disable WDigest authentication by modifying the registry.
    default:
      value: ''
      present: 'False'
    category: SecurityProviders
    category_id: 69
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - WDigest
      - Authentication
      - Registry
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L311
    comments:
      - Disable storing password in memory in cleartext
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.016
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v ConsentPromptBehaviorAdmin /t REG_DWORD /d 2 /f
    ruleid: 554
    rule_name: Consent Prompt Behavior Admin
    description: Modify the User Account Control (UAC) consent prompt behavior by modifying the registry.
    default:
      value: '0x00000005 (5)'
      present: 'True'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - UAC
      - Consent Prompt
      - Registry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L166
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L390
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L327
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Disable-WindowsOptionalFeature -Online -FeatureName smb1protocol -norestart
    ruleid: 555
    rule_name: SMBv1 Protocol
    description: Disable the SMBv1 protocol using PowerShell.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: cmd
    keywords:
      - SMBv1
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L226
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.789
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath - \r\nOnline - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v SecurityLayer /t REG_DWORD /d 00000002 /f
    ruleid: 556
    rule_name: RDP Security Layer
    description: Set the RDP Security Layer to enhance security.
    default:
      value: '0x00000002 (2)'
      present: 'True'
    category: WinStations
    category_id: 67
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - RDP
      - Security Layer
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L406
    comments:
      - Requiring Strong Remote Desktop Encryption if enabled and forcing TLS Authentication"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.050
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0" /v RestrictSendingNTLMTraffic /t REG_DWORD /d 2 /f
    ruleid: 557
    rule_name: Restrict NTLM Traffic
    description: Restrict NTLM traffic by modifying the registry.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - NTLM
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L399
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L337
    comments:
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - THIS BREAKS RDP (outgoing to other domain machines) & SHARES
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" /v EnableICMPRedirect /t REG_DWORD /d 0 /f
    ruleid: 558
    rule_name: ICMP Redirect
    description: Disable ICMP Redirect by modifying the registry.
    default:
      value: ''
      present: 'False'
    category: Tcpip
    category_id: 64
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - ICMP Redirect
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L162
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L384
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L321
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters" /v DisableIPSourceRouting /t REG_DWORD /d 2 /f
    ruleid: 559
    rule_name: IP Source Routing
    description: Disable IP Source Routing by modifying the registry.
    default:
      value: ''
      present: 'False'
    category: Tcpip6
    category_id: 74
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - IP Source Routing
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L163
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L385
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L322
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config\" /v DODownloadMode /t REG_DWORD /d 1 /f
    ruleid: 560
    rule_name: DO Download Mode for Config
    description: Enable Windows Update Delivery Optimization by modifying the registry.
    default:
      value: ''
      present: 'False'
    category: DeliveryOptimization
    category_id: 75
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows Update
      - Delivery Optimization
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L201
    comments:
      - Windows Update Settings
      - Prevent Delivery Optimization from downloading Updates from other computers across the internet
      - 1 will restrict to LAN only. 0 will disable the feature entirely
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "DontPrettyPath" /t REG_DWORD /d 0 /f
    ruleid: 561
    rule_name: Dont Pretty Path
    description: Disable Pretty Path in Windows Explorer
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L562
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\Explorer" /v NoDriveTypeAutoRun /t REG_DWORD /d 255 /f
    ruleid: 562
    rule_name: No Drive Type AutoRun
    description: Disable AutoRun for all drives
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
    references:
      -
      - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L220
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L454
    comments:
      - Removal Media Settings
      - Disable autorun/autoplay on all drives
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\MICROSOFT\.NETFramework\Security\TrustManager\PromptingLevel" /v Internet /t REG_SZ /d "Disabled" /f
    ruleid: 563
    rule_name: Internet
    description: Set .NETFramework TrustManager PromptingLevel to Disabled
    default:
      value: ''
      present: 'False'
    category: NETFramework
    category_id: 12
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L615
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L498
    comments:
      - Disable the ClickOnce trust promp
      - this only partially mitigates the risk of malicious ClickOnce Appps - the ability to run the manifest is disabled, but hash retrieval is still possible
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced" /v "NavPaneShowAllFolders" /t REG_DWORD /d 1 /f
    ruleid: 564
    rule_name: NavPane Show All Folders
    description: Show all folders in Windows Explorer navigation pane
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L561
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced" /v "NavPaneShowAllFolders" /t REG_DWORD /d 0 /f
    ruleid: 565
    rule_name: Hide All Folders in Windows Explorer
    description: Hide all folders in Windows Explorer navigation pane
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L566
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa" /v EveryoneIncludesAnonymous /t REG_DWORD /d 0 /f
    ruleid: 566
    rule_name: Everyone Includes Anonymous in LSA
    description: Disable Everyone Includes Anonymous in Local Security Authority (LSA)
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - SYSTEM
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L232
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L416
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L345
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Disable-WindowsOptionalFeature -Online -FeatureName MicrosoftWindowsPowerShellV2Root -norestart
    ruleid: 567
    rule_name: Windows PowerShell v2 Root
    description: Disable Windows PowerShell v2 feature
    default:
      value: ''
      present: 'False'
    category: PowerShell
    category_id: 14
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: cmd
    keywords:
      - Windows
      - PowerShell
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L180
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.590
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath - \r\nOnline  - True\r\nRestartNeeded - False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" /v InactivityTimeoutSecs /t REG_DWORD /d 900 /f
    ruleid: 568
    rule_name: Inactivity Timeout
    description: Set the inactivity timeout in the Windows Registry
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L204
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L524
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L438
    comments:
      - Set screen saver inactivity timeout to 15 minutes
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\\SOFTWARE\\Policies\\Microsoft\\Power\\PowerSettings\\0e796bdb-100d-47d6-a2d5-f7d2daa51f51" /v ACSettingIndex /t REG_DWORD /d 1 /f
    ruleid: 569
    rule_name: AC Setting Index
    description: Set AC Power Settings in Windows Registry
    default:
      value: ''
      present: 'False'
    category: Power
    category_id: 77
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Policies
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L206
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L526
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L440
    comments:
      - Enable password prompt on sleep resume while plugged in and on battery
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config" /v DODownloadMode /t REG_DWORD /d 0 /f
    ruleid: 570
    rule_name: Delivery Optimization Download Mode
    description: Disable Delivery Optimization Download Mode in Windows Registry
    default:
      value: ''
      present: 'False'
    category: Config
    category_id: 3
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L522
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L436
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows Script Host\Settings" /v UseWINSAFER /t REG_SZ /d 1 /f
    ruleid: 571
    rule_name: UseWINSAFER
    description: Set the UseWINSAFER value in Windows Script Host Settings to 1.
    default:
      value: ''
      present: 'False'
    category: Windows Script Host
    category_id: 59
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Script Host
      - Microsoft
      - UseWINSAFER
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L507
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L426
    comments:
      - Disable (c|w)script.exe to prevent the system from running VBS scripts
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Disable-WindowsOptionalFeature -Online -FeatureName smb1protocol
    ruleid: 572
    rule_name: SMB1 Protocol via PowerShell
    description: Disable the SMB1 protocol using PowerShell command "Disable-WindowsOptionalFeature."
    default:
      value: ''
      present: 'False'
    category: PowerShell
    category_id: 14
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: cmd
    keywords:
      - Windows
      - PowerShell
      - SMB1 Protocol
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L589
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L472
    comments:
      - Disable NTLMv1
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.996
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath - \r\nOnline   - True\r\nRestartNeeded- False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe" /v AuditLevel /t REG_DWORD /d 00000008 /f
    ruleid: 573
    rule_name: AuditLevel for LSASS.exe
    description: Set the AuditLevel value for LSASS.exe in Windows Registry to 00000008.
    default:
      value: '0x00000008 (8)'
      present: 'True'
    category: Image File Execution Options
    category_id: 78
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - LSASS.exe
      - AuditLevel
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L246
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L602
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L485
    comments:
      - Harden lsass to help protect against credential dumping (Mimikatz)
      - Configures lsass.exe as a protected process and disables wdigest
      - Enables delegation of non-exported credentials which enables support for Restricted Admin Mode or Remote Credential Guard
      - https://technet.microsoft.com/en-us/library/dn408187(v=ws.11).aspx
      - https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Control Panel\Accessibility\StickyKeys" /v Flags" /t REG_SZ /d "506" /f
    ruleid: 574
    rule_name: Flags for StickyKeys
    description: Set the Flags value for StickyKeys in Windows Registry to "506\".
    default:
      value: '510'
      present: 'True'
    category: Accessibility
    category_id: 79
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Accessibility
      - StickyKeys
      - Flags
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L553
    comments:
      - Disable Sticky keys prompt
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\ldap" /v "LDAPClientIntegrity" /t REG_DWORD /d 1 /f
    ruleid: 575
    rule_name: LDAPClientIntegrity for ldap Service
    description: Set the LDAPClientIntegrity value for the ldap service in Windows Registry to 1.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Services
    category_id: 68
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Services
      - System
      - ldap
      - LDAPClientIntegrity
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L462
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L382
    comments:
      - 1- Negotiated; 2-Required
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "HideIcons" /t REG_DWORD /d 0 /f
    ruleid: 576
    rule_name: HideIcons
    description: Set the HideIcons value in Windows Explorer Advanced Settings to 0.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Explorer
      - HideIcons
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L564
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Kerberos\Parameters" /v SupportedEncryptionTypes /t REG_DWORD /d 2147483640 /f
    ruleid: 577
    rule_name: SupportedEncryptionTypes for Kerberos
    description: Set the SupportedEncryptionTypes value for Kerberos in Windows Registry to 2147483640.
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Kerberos
      - SupportedEncryptionTypes
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L185
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L378
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L313
    comments:
      - Prevent Kerberos from using DES or RC4
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "LaunchTo" /t REG_DWORD /d 1 /f
    ruleid: 578
    rule_name: LaunchTo in Windows Explorer Advanced Settings
    description: Set the LaunchTo value in Windows Explorer Advanced Settings to 1.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Explorer
      - LaunchTo
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L558
    comments:
      - Changing default Explorer view to Computer
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v EnableLUA /t REG_DWORD /d 1 /f
    ruleid: 579
    rule_name: LUA in Windows Policies System
    description: Set the EnableLUA value in Windows Policies System to 1.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Policies
      - EnableLUA
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L164
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L388
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L325
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v fDisableCdm /t REG_DWORD /d 1 /f
    ruleid: 580
    rule_name: fDisableCdm for Terminal Services
    description: Set the fDisableCdm value for Terminal Services in Windows Registry to 1.
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Terminal Services
      - fDisableCdm
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L215
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L535
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L449
    comments:
      - Prevent sharing of local drives via Remote Desktop Session Hosts
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: wmic /interactive:off nicconfig where TcpipNetbiosOptions=0 call SetTcpipNetbios 2
    ruleid: 581
    rule_name: WMIC SetTcpipNetbiosOptions
    description: Disable NetBIOS over TCP/IP using WMIC
    default:
      value: ''
      present: 'False'
    category: Tcpip
    category_id: 64
    sub_category:
    sub_category_id:
    cmd: wmic
    run:
    keywords:
      - WMIC
      - SetTcpipNetbiosOptions
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L586
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L469
    comments:
      - Stop NetBIOS over TCP/IP
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.130
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Executing (\\\\windows-hardeni\\ROOT\\CIMV2:Win32_NetworkAdapterConfiguration.Index=1)->SetTcpipNetbios()\r\r\nMethod execution successful.\r\r\nOut Parameters:\r\ninstance of __PARAMETERS\r\n{\r\n\tReturnValue = 0;\r\n};\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKEY_CLASSES_ROOT\Windows.VhdFile\shell\mount" /v ProgrammaticAccessOnly /t REG_SZ /f
    ruleid: 582
    rule_name: Programmatic Access Only
    description: Modify Windows.VhdFile shell mount settings in the registry
    default:
      value: ''
      present: 'False'
    category: Windows VhdFile
    category_id: 80
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows.VhdFile
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L512
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L550
    comments:
      - Block ISO based malware downloads
      - https://winaero.com/remove-mount-context-menu-windows-10/
      - Blocking ISO mounting for non admin users
      - REF-> https://malicious.link/post/2022/blocking-iso-mounting/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v NoRecentDocsMenu /t REG_DWORD /d 1 /f
    ruleid: 583
    rule_name: No Recent Docs Menu
    description: Modify NoRecentDocsMenu setting in the Windows Explorer policy
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - NoRecentDocsMenu
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L543
    comments:
      - Removal Media Settings - Disable Autorun/Autoplay on all drives
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: BCDEDIT /set nointegritychecks OFF
    ruleid: 584
    rule_name: BCDEDIT Disable Integrity Checks
    description: Disable integrity checks using BCDEDIT
    default:
      value: ''
      present: 'False'
    category: Driver
    category_id: 81
    sub_category:
    sub_category_id:
    cmd: BCDEDIT
    run:
    keywords:
      - BCDEDIT
      - Integrity Checks
    references:
      -
      - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L195
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L962
    comments:
      - Enforce device driver signing
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.048
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'An error has occurred setting the element data.\r\nThe value is protected by Secure Boot policy and cannot be modified or deleted.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\DNSClient" /v EnableMulticast /t REG_DWORD /d 1 /f
    ruleid: 585
    rule_name: Registry Key Modification
    description: Modify EnableMulticast setting in the DNSClient policy
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - EnableMulticast
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L379
    comments:
      - Prevent Kerberos from using DES or RC4
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\mrxsmb10" /v Start /t REG_DWORD /d 4 /f
    ruleid: 586
    rule_name: Start Current Control Set
    description: Modify Start setting in the mrxsmb10 service registry key
    default:
      value: ''
      present: 'False'
    category: Services
    category_id: 68
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Services
      - Start
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L227
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L590
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L473
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - Disable NTLMv1
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Disable-WindowsOptionalFeature -Online -FeatureName MicrosoftWindowsPowerShellV2 -norestart
    ruleid: 587
    rule_name: PowerShell Disable Windows Optional Feature
    description: Disable MicrosoftWindowsPowerShellV2 using PowerShell
    default:
      value: ''
      present: 'False'
    category: PowerShell
    category_id: 14
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: cmd
    keywords:
      - PowerShell
      - Disable-WindowsOptionalFeature
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L179
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.505
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\n\r\nPath - \r\nOnline - True\r\nRestartNeeded -  False\r\n\r\n\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" /v "HubMode" /t REG_DWORD /d 1 /f
    ruleid: 588
    rule_name: HubMode
    description: Modify HubMode setting in the Windows Explorer registry key
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - HubMode
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L573
    comments:
      - https://www.techspot.com/guides/1703-remove-3d-objects-shortcut-windows-file-explorer/
      - Remove Explorer QuickAccess
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v PreXPSP2ShellProtocolBehavior /t REG_DWORD /d 0 /f
    ruleid: 589
    rule_name: Pre XPSP2 Shell Protocol
    description: Modify PreXPSP2ShellProtocolBehavior setting in the Windows Explorer policy
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - PreXPSP2ShellProtocolBehavior
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L172
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows Script Host\Settings" /v DisplayLogo /t REG_SZ /d 1 /f
    ruleid: 590
    rule_name: DisplayLogo
    description: Modify DisplayLogo setting in the Windows Script Host settings
    default:
      value: ''
      present: 'False'
    category: Windows Script Host
    category_id: 59
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - DisplayLogo
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L505
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L424
    comments:
      - Disable (c|w)script.exe to prevent the system from running VBS scripts
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.018
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v ClearRecentDocsOnExit /t REG_DWORD /d 1 /f
    ruleid: 591
    rule_name: Clear Recent Documents on Exit
    description: Disable the "Clear Recent Documents on Exit" policy in Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - ClearRecentDocsOnExit
      - Windows
      - Policy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L544
    comments:
      - Removal Media Settings - Disable Autorun/Autoplay on all drives
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\LanmanServer\Parameters" /v "EnableSecuritySignature" /t REG_DWORD /d 1 /f
    ruleid: 592
    rule_name: Security Signature
    description: Enable the Lanman Server Security Signature in Windows Registry.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: LanmanServer
    category_id: 51
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - EnableSecuritySignature
      - System
      - Policy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L459
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L379
    comments:
      - Enable SMB/LDAP Signing
      - Sources ->
      - http://eddiejackson.net/wp/?p=15812
      - https://en.hackndo.com/ntlm-relay/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WcmSvc\GroupPolicy" /v fMinimizeConnections /t REG_DWORD /d 1 /f
    ruleid: 593
    rule_name: Group Policy Minimize Connections
    description: Enable the Group Policy "Minimize Connections" in Windows Registry.
    default:
      value: ''
      present: 'False'
    category: WcmSvc
    category_id: 82
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - fMinimizeConnections
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L176
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L397
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L332
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.052
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\LanmanServer\Parameters" /v "RequireSecuritySignature" /t REG_DWORD /d 1 /f
    ruleid: 594
    rule_name: Require Security Signature
    description: Require the Lanman Server Security Signature in Windows Registry.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: LanmanServer
    category_id: 51
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - RequireSecuritySignature
      - System
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L458
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L378
    comments:
      - Enable SMB/LDAP Signing
      - Sources ->
      - http://eddiejackson.net/wp/?p=15812
      - https://en.hackndo.com/ntlm-relay/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\MICROSOFT\.NETFramework\Security\TrustManager\PromptingLevel" /v MyComputer /t REG_SZ /d "Disabled" /f
    ruleid: 595
    rule_name: .NET Framework Trust Manager Prompting
    description: Disable the .NET Framework Trust Manager Prompting in Windows Registry.
    default:
      value: ''
      present: 'False'
    category: TrustManager
    category_id: 48
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - MyComputer
      - .NET Framework
      - Trust Manager
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L613
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L496
    comments:
      - Disable the ClickOnce trust prompt
      - this only partially mitigates the risk of malicious ClickOnce Appps - the ability to run the manifest is disabled, but hash retrieval is still possible
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters" /v SignSecureChannel /t REG_DWORD /d 1 /f
    ruleid: 596
    rule_name: Secure Channel Signing for Netlogon
    description: Enable Secure Channel Signing for Netlogon in Windows Registry.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Netlogon
    category_id: 65
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SignSecureChannel
      - Services
      - SYSTEM
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L188
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L469
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L389
    comments:
      - Encrypt and sign outgoing secure channel traffic when possible
      - Ensure 'Domain member-> Digitally sign secure channel data (when possible)' is set to 'Enabled'
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DeliveryOptimization" /v DODownloadMode /t REG_DWORD /d 1 /f
    ruleid: 597
    rule_name: DO Download Mode
    description: Enable Delivery Optimization Download Mode in Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Delivery Optimization
    category_id: 83
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - DODownloadMode
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L200
    comments:
      - Windows Update Settings
      - Prevent Delivery Optimization from downloading Updates from other computers across the internet
      - 1 will restrict to LAN only. 0 will disable the feature entirely
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Attachments" /v SaveZoneInformation /t REG_DWORD /d 2 /f
    ruleid: 598
    rule_name: Attachment Save Zone Information
    description: Set the Attachment Save Zone Information in Windows Registry.
    default:
      value: ''
      present: 'False'
    category: Attachments
    category_id: 84
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SaveZoneInformation
      - Windows
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L169
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L391
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L328
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v SeparateProcess" /t REG_DWORD /d 1 /f
    ruleid: 599
    rule_name: Separate Processes
    description: Enable Separate Explorer Processes in Windows Registry.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SeparateProcess
      - Windows
      - Microsoft
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L560
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\NTDS\Parameters" /v LDAPServerIntegrity" /t REG_DWORD /d 2 /f
    ruleid: 600
    rule_name: LDAP Server Integrity
    description: Set LDAP Server Integrity in Windows Registry.
    default:
      value: ''
      present: 'False'
    category: NTDS
    category_id: 85
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - LDAPServerIntegrity
      - Services
      - System
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L461
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L381
    comments:
      - 1- Negotiated; 2-Required
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.025
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: setx __PSLockdownPolicy "4" /M
    ruleid: 601
    rule_name: PowerShell Lockdown Policy
    description: Set the PowerShell Lockdown Policy to restrict script execution.
    default:
      value: ''
      present: 'False'
    category: Lockdown
    category_id: 86
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Lockdown
      - Policy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L431
    comments:
      - Enable Powershell Constrained Language Mode (CLM)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.185
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'\r\nSUCCESS- Specified value was saved.\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v Start_TrackDocs" /t REG_DWORD /d 0 /f
    ruleid: 602
    rule_name: Tracking Documents
    description: Disable tracking of recently opened documents in Windows Explorer.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Explorer
      - Windows
      - Tracking
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L568
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.014
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" /v SMB1 /t REG_DWORD /d 0 /f
    ruleid: 603
    rule_name: SMBv1 Protocol
    description: Disable the SMB version 1 (SMBv1) protocol on the system.
    default:
      value: ''
      present: 'False'
    category: LanmanServer
    category_id: 51
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Services
      - SYSTEM
      - SMBv1
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L159
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L228
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L386
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L323
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51" /v DCSettingIndex /t REG_DWORD /d 1 /f
    ruleid: 604
    rule_name: DCSettingIndex
    description: Set DCSettingIndex in Power Settings to a specific value.
    default:
      value: ''
      present: 'False'
    category: Power Settings
    category_id: 87
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Power Settings
      - DCSettingIndex
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L207
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L527
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L441
    comments:
      - Enable password prompt on sleep resume while plugged in and on battery
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Services\Netlogon\Parameters" /v SealSecureChannel /t REG_DWORD /d 1 /f
    ruleid: 605
    rule_name: SealSecureChannel
    description: Enable SealSecureChannel for Netlogon service.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Netlogon
    category_id: 65
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - System
      - Netlogon
      - SealSecureChannel
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L187
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L467
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L387
    comments:
      - Ensure 'Domain member - Digitally encrypt secure channel data (when possible)' is set to 'Enabled'
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v NoAutorun /t REG_DWORD /d 1 /f
    ruleid: 606
    rule_name: AutoRun
    description: Disable AutoRun feature in Windows Explorer.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - AutoRun
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L221
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L541
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L455
    comments:
      - Windows Remote Access Settings
      - Disable solicited remote assistance
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v fAllowToGetHelp /t REG_DWORD /d 0 /f
    ruleid: 607
    rule_name: Remote Assistance
    description: Disable Remote Assistance in Terminal Services.
    default:
      value: ''
      present: 'False'
    category: Windows NT
    category_id: 54
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Policies
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L211
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L531
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L445
    comments:
      - Windows Remote Access Settings
      - Disable solicited remote assistance
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v NoDataExecutionPrevention /t REG_DWORD /d 0 /f
    ruleid: 608
    rule_name: Data Execution Prevention (DEP)
    description: Disable Data Execution Prevention (DEP) in Windows Explorer.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Policies
      - Microsoft
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L170
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L392
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L329
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v NoDriveTypeAutoRun /t REG_DWORD /d 0xff /f
    ruleid: 610
    rule_name: AutoRun for Drive Types
    description: Disable AutoRun for specific drive types in Windows Explorer.
    default:
      value: ''
      present: 'False'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - AutoRun
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L539
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L586
    comments:
      - Removal Media Settings - Disable Autorun/Autoplay on all drives
      - Disable AutoRun
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters" /v SealSecureChannel /t REG_DWORD /d 1 /f
    ruleid: 611
    rule_name: Seal Secure Channel
    description: Set Netlogon Secure Channel to 1
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Netlogon
    category_id: 65
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Netlogon
      - Secure Channel
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L187
    comments:
      - Encrypt and sign outgoing secure channel traffic when possible
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v RestrictAnonymous /t REG_DWORD /d 1 /f
    ruleid: 612
    rule_name: Restrict Anonymous
    description: Restrict anonymous access in the LSA
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - LSA
      - Restrict Anonymous
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L231
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L415
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L344
    comments:
      - Windows Sharing/SMB Settings
      - Disable smb1, anonymous access to named pipes/shared, anonymous enumeration of SAM accounts, non-admin remote access to SAM
      - Enable optional SMB client signing
      - https://www.top-password.com/blog/prevent-ntlm-credentials-from-being-sent-to-remote-servers/
      - Whitelist IPS for NTLM usage
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.069
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\System\CurrentControlSet\Control\Lsa" /v LMCompatibilityLevel /t REG_DWORD /d 5 /f
    ruleid: 613
    rule_name: LM Compatibility Level
    description: Set LMCompatibilityLevel to 5
    default:
      value: ''
      present: 'False'
    category: Lsa
    category_id: 16
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - LMCompatibilityLevel
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L342
    comments:
      - 5 in the next setting could impact share access. Comment it / edit registry if you see any impact.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers" /v DisableAutoplay /t REG_DWORD /d 1 /f
    ruleid: 614
    rule_name: Autoplay
    description: Disable Autoplay in Windows
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category:
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Autoplay
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L545
    comments:
      - Removal Media Settings - Disable Autorun/Autoplay on all drives
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: wmic /interactive:off nicconfig where (TcpipNetbiosOptions=0 OR TcpipNetbiosOptions=1) call SetTcpipNetbios 2
    ruleid: 615
    rule_name: Configure TcpipNetbiosOptions
    description: Configure TcpipNetbiosOptions via WMIC
    default:
      value: ''
      present: 'False'
    category: Tcpip
    category_id: 64
    sub_category:
    sub_category_id:
    cmd: wmic
    run: cmd
    keywords:
      - TcpipNetbiosOptions
      - WMIC
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L178
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.071
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'No Instance(s) Available.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service" /v AllowUnencryptedTraffic /t REG_DWORD /d 0 /f
    ruleid: 616
    rule_name: AllowUnencryptedTraffic
    description: Set WinRM AllowUnencryptedTraffic to 0
    default:
      value: ''
      present: 'False'
    category: WinRM
    category_id: 58
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - WinRM
      - AllowUnencryptedTraffic
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L254
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L577
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L459
    comments:
      - Windows RPC and WinRM settings
      - Stop WinRM
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest" /v Negotiate /t REG_DWORD /d 0 /f
    ruleid: 617
    rule_name: WDigest
    description: Disable WDigest in SecurityProviders
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: SecurityProviders
    category_id: 69
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - WDigest
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L607
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L490
    comments:
      - Harden lsass to help protect against credential dumping (Mimikatz)
      - Configures lsass.exe as a protected process and disables wdigest
      - Enables delegation of non-exported credentials which enables support for Restricted Admin Mode or Remote Credential Guard
      - https://technet.microsoft.com/en-us/library/dn408187(v=ws.11).aspx
      - https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.022
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\services\tcpip6\parameters" /v DisabledComponents /t REG_DWORD /d 0xFF /f
    ruleid: 618
    rule_name: Tcpip6 DisabledComponents
    description: Set Tcpip6 DisabledComponents to 0xFF
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Tcpip6
      - DisabledComponents
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L517
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L431
    comments:
      - Disable IPv6
      - https://support.microsoft.com/en-us/help/929852/guidance-for-configuring-ipv6-in-windows-for-advanced-users
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.023
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v AutoCheckSelect" /t REG_DWORD /d 0 /f
    ruleid: 619
    rule_name: AutoCheckSelect
    description: Disable AutoCheckSelect in Explorer
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - AutoCheckSelect
      - Disable
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L565
    comments:
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.024
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" /v DisableIPSourceRouting /t REG_DWORD /d 2 /f
    ruleid: 620
    rule_name: IPSourceRouting
    description: Set Tcpip DisableIPSourceRouting to 2
    default:
      value: ''
      present: 'False'
    category: Tcpip
    category_id: 64
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Tcpip
      - DisableIPSourceRouting
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L161
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L383
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L320
    comments:
      - Enable and Configure General Windows Security Settings
      - Disables DNS multicast, smart mutli-homed resolution, netbios, powershellv2, printer driver download and printing over http, icmp redirect
      - Enables UAC and sets to always notify, Safe DLL loading (DLL Hijacking prevention), saving zone information, explorer DEP, explorer shell protocol protected mode
      - General OS hardening
      - Disable DNS Multicast, NTLM, SMBv1, NetBIOS over TCP/IP, PowerShellV2, AutoRun, 8.3 names, Last Access timestamp and weak TLS/SSL ciphers and protocols
      - Enables UAC, SMB/LDAP Signing, Show hidden files
      - Prevent Kerberos from using DES or RC4
      - Set the IGMPLevel key only if you don't need local or network printers on a LAN. To reset, set to 2.
      - It is a valuable setting for stand-alone machines which mostly use cloud services and do not need to work with other machines in a LAN.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.026
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: fsutil behavior set disable8dot3 1
    ruleid: 621
    rule_name: Disable 8.3 Filename Creation
    description: Disable 8.3 filename creation to improve security.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: fsutil
    run:
    keywords:
      - 8.3 Filename
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L702
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L600
    comments:
      - Disable 8.3 names (Mitigate Microsoft IIS tilde directory enumeration) and Last Access timestamp for files and folder (Performance)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.116
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The registry state is now- 1 (Disable 8dot3 name creation on all volumes).\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: fsutil behavior set disablelastaccess 0
    ruleid: 622
    rule_name: Enable Last Access Timestamp
    description: Enable the last access timestamp for files and directories.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: fsutil
    run:
    keywords:
      - Timestamp
      - Last Access
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L703
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L601
    comments:
      - Disable 8.3 names (Mitigate Microsoft IIS tilde directory enumeration) and Last Access timestamp for files and folder (Performance)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.015
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'DisableLastAccess = 0  (User Managed, Disabled)\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\Personalization" /v NoLockScreenCamera /t REG_DWORD /d 1 /f
    ruleid: 623
    rule_name: Disable Lock Screen Camera
    description: Disable the camera on the lock screen for enhanced security.
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 10
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Lock Screen
      - Camera
      - Security
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L266
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L729
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L607
    comments:
      - Disable other camera use while screen is locked
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" /v LetAppsActivateWithVoice /t REG_DWORD /d 2 /f
    ruleid: 624
    rule_name: Allow Apps to Activate with Voice
    description: Allow apps to activate with voice even when the device is locked.
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 10
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Apps
      - Voice
      - Activation
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L270
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L733
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L611
    comments:
      - Disable other camera use while screen is locked
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.021
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy" /v LetAppsActivateWithVoiceAboveLock /t REG_DWORD /d 2 /f
    ruleid: 625
    rule_name: Allow Apps to Activate with Voice Above Lock
    description: Allow apps to activate with voice even when the device is locked.
    default:
      value: ''
      present: 'False'
    category: Windows
    category_id: 10
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Apps
      - Voice
      - Activation
      - Lock
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L268
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L731
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L609
    comments:
      - Prevent Windows app voice activation while locked
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.019
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Biometrics\FacialFeatures" /v EnhancedAntiSpoofing /t REG_DWORD /d 1 /f
    ruleid: 626
    rule_name: Enable Enhanced Anti-Spoofing for Facial Features
    description: Enable enhanced anti-spoofing for facial recognition features.
    default:
      value: ''
      present: 'False'
    category: Biometrics
    category_id: 88
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Facial Recognition
      - Anti-Spoofing
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L264
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L727
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L605
    comments:
      - Biometrics
      - Enable anti-spoofing for facial recognition
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.020
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Client" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 627
    rule_name: SSL 3.0 Client
    description: Disable SSL 3.0 client support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SSL
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L778
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L656
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.029
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 628
    rule_name: TLS 1.0 Server Enabled
    description: Enable TLS 1.0 server support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L784
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L662
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Server" /v DisabledByDefault /t REG_DWORD /d 1 /f
    ruleid: 629
    rule_name: SSL 3.0 Server Disabled
    description: Disable SSL 3.0 server support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SSL
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L781
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L659
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 40/128" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 630
    rule_name: RC2 40/128 Cipher Disabled
    description: Disable RC2 40/128 cipher in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - RC2
      - SCHANNEL
      - Cipher
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L747
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L625
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\SHA384" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 631
    rule_name: SHA384 Hash Enabled
    description: Enable SHA384 hash support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Hashes
    category_id: 91
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SHA384
      - SCHANNEL
      - Hash
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L758
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L636
    comments:
      - Encryption - Hashes- All allowed - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.074
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\Multi-Protocol Unified Hello\Client" /v DisabledByDefault /t REG_DWORD /d 1 /f
    ruleid: 632
    rule_name: Multi-Protocol Unified Hello Client Disabled
    description: Disable Multi-Protocol Unified Hello client support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Multi-Protocol Unified Hello
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L767
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L645
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 633
    rule_name: SSL 2.0 Server
    description: Disable SSL 2.0 server support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SSL
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L776
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L654
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\AES 128/128" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 634
    rule_name: AES 128/128 Cipher Enabled
    description: Enable AES 128/128 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - AES
      - SCHANNEL
      - Cipher
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L742
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L620
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 635
    rule_name: TLS 1.1 Client Enabled
    description: Enable TLS 1.1 client support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L786
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L664
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server" /v DisabledByDefault /t REG_DWORD /d 0 /f
    ruleid: 636
    rule_name: TLS 1.1 Server Disabled
    description: Disable TLS 1.1 server support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L789
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L667
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.071
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\MD5" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 637
    rule_name: MD5 Hash Disabled
    description: Disable MD5 hash support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Hashes
    category_id: 91
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - MD5
      - SCHANNEL
      - Hash
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L755
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L633
    comments:
      - Encryption - Hashes- All allowed - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.060
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 638
    rule_name: TLS 1.2 Client Enabled
    description: Enable TLS 1.2 client support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L790
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L668
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\SHA" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 639
    rule_name: SHA Hash Enabled
    description: Enable SHA hash support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Hashes
    category_id: 91
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SHA
      - SCHANNEL
      - Hash
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L756
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L634
    comments:
      - Encryption - Hashes- All allowed - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.052
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client" /v DisabledByDefault /t REG_DWORD /d 0 /f
    ruleid: 640
    rule_name: TLS 1.2 Client Disabled
    description: Disable TLS 1.2 client support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L791
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L669
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\ECDH" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 641
    rule_name: ECDH Key Exchange Enabled
    description: Enable ECDH key exchange algorithm support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: KeyExchangeAlgorithms
    category_id: 92
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - ECDH
      - SCHANNEL
      - Key Exchange
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L763
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L641
    comments:
      - Encryption - Key Exchanges - All allowed
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.041
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\PCT 1.0\Client" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 642
    rule_name: PCT 1.0 Client Enabled
    description: Enable PCT 1.0 client support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - PCT
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L770
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L648
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.081
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server" /v DisabledByDefault /t REG_DWORD /d 0 /f
    ruleid: 643
    rule_name: TLS 1.2 Server DisabledByDefault
    description: Disable TLS 1.2 server support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L793
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L671
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.028
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\PCT 1.0\Server" /v DisabledByDefault /t REG_DWORD /d 1 /f
    ruleid: 644
    rule_name: PCT 1.0 Server DisabledByDefault
    description: Disable PCT 1.0 server support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - PCT
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L773
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L651
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\SHA256" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 645
    rule_name: SHA256 Hash Enabled
    description: Enable SHA256 hash support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Hashes
    category_id: 91
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SHA256
      - SCHANNEL
      - Hash
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L757
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L635
    comments:
      - Encryption - Hashes- All allowed - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.043
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client" /v DisabledByDefault /t REG_DWORD /d 0 /f
    ruleid: 646
    rule_name: TLS 1.0 Client Disabled
    description: Disable TLS 1.0 client support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L783
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L661
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Server" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 647
    rule_name: SSL 3.0 Server Enabled
    description: Enable SSL 3.0 server support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SSL
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L780
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L658
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\PKCS" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 648
    rule_name: PKCS Enabled
    description: Enable PKCS key exchange algorithm support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: KeyExchangeAlgorithms
    category_id: 92
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - PKCS
      - SCHANNEL
      - Key Exchange Algorithm
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L764
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L642
    comments:
      - Encryption - Key Exchanges - All allowed
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\PCT 1.0\Server" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 649
    rule_name: PCT 1.0 Server Enabled
    description: Enable PCT 1.0 server support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - PCT
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L772
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L650
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.070
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 3.0\Client" /v DisabledByDefault /t REG_DWORD /d 1 /f
    ruleid: 650
    rule_name: SSL 3.0 Client Disabled
    description: Disable SSL 3.0 client support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SSL
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L779
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L657
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.037
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 56/128" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 651
    rule_name: RC4 56/128 Cipher Enabled
    description: Enable RC4 56/128 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - RC4
      - SCHANNEL
      - Cipher
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L751
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L629
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.051
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 652
    rule_name: TLS 1.1 Server Enabled
    description: Enable TLS 1.1 server support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L788
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L666
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 653
    rule_name: TLS 1.0 Client Enabled
    description: Enable TLS 1.0 client support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L782
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L660
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Cryptography\Configuration\SSL\00010002" /v EccCurves /t REG_MULTI_SZ /d NistP384,NistP256 /f
    ruleid: 654
    rule_name: ECC Curves Enabled
    description: Enable ECC curves NistP384 and NistP256 in SSL cryptography configuration.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - ECC Curves
      - SSL
      - Cryptography
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L183
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L797
    comments:
      - Prioritize ECC Curves with longer keys - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.037
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\Multi-Protocol Unified Hello\Client" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 655
    rule_name: Multi-Protocol Unified Hello Client Enabled
    description: Enable Multi-Protocol Unified Hello client support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Multi-Protocol Unified Hello
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L766
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L644
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server" /v DisabledByDefault /t REG_DWORD /d 0 /f
    ruleid: 656
    rule_name: TLS 1.0 Server Disabled by Default
    description: Disable TLS 1.0 server support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L785
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L663
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 64/128" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 657
    rule_name: RC4 64/128 Cipher Enabled
    description: Enable RC4 64/128 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - RC4
      - SCHANNEL
      - Cipher
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L752
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L630
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Cryptography\Configuration\SSL\00010002" /v Functions /t REG_SZ /d "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_3DES_EDE_CBC_SHA,TLS_RSA_WITH_NULL_SHA256,TLS_RSA_WITH_NULL_SHA,TLS_PSK_WITH_AES_256_GCM_SHA384,TLS_PSK_WITH_AES_128_GCM_SHA256,TLS_PSK_WITH_AES_256_CBC_SHA384,TLS_PSK_WITH_AES_128_CBC_SHA256,TLS_PSK_WITH_NULL_SHA384,TLS_PSK_WITH_NULL_SHA256" /f
    ruleid: 658
    rule_name: SSL/TLS Cipher Suites Configuration
    description: Configure supported SSL/TLS cipher suites in the Windows registry.
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SSL
      - TLS
      - Cipher Suites
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L795
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L673
    comments:
      - Encryption - Cipher Suites (order) - All cipher included to avoid application problems
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\NULL" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 659
    rule_name: NULL Cipher
    description: Disable NULL cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - Cipher
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L745
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L623
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 56/128" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 660
    rule_name: RC2 56/128 Cipher
    description: Disable RC2 56/128 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - Cipher
      - RC2 56/128
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L748
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L626
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.083
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC2 128/128" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 661
    rule_name: RC2 128/128 Cipher
    description: Disable RC2 128/128 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - Cipher
      - RC2 128/128
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L746
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L624
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.047
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\Multi-Protocol Unified Hello\Server" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 662
    rule_name: Multi-Protocol Unified Hello (Server)
    description: Disable Multi-Protocol Unified Hello support on the server side in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - Multi-Protocol Unified Hello
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L768
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L646
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\Multi-Protocol Unified Hello\Server" /v DisabledByDefault /t REG_DWORD /d 1 /f
    ruleid: 663
    rule_name: Multi-Protocol Unified Hello (Server) Disabled by Default
    description: Disable Multi-Protocol Unified Hello on the server side by default in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - Multi-Protocol Unified Hello
      - Server
      - Default
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L769
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L647
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.039
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server" /v DisabledByDefault /t REG_DWORD /d 1 /f
    ruleid: 664
    rule_name: SSL 2.0 (Server) Disabled by Default
    description: Disable SSL 2.0 on the server side by default in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - SSL 2.0
      - Server
      - Default
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L777
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L655
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 40/128" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 665
    rule_name: RC4 40/128 Cipher
    description: Disable RC4 40/128 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - Cipher
      - RC4 40/128
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L750
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L628
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.045
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Client" /v DisabledByDefault /t REG_DWORD /d 1 /f
    ruleid: 666
    rule_name: SSL 2.0 (Client) Disabled by Default
    description: Disable SSL 2.0 on the client side by default in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - SSL 2.0
      - Client
      - Default
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L775
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L653
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.041
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\RC4 128/128" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 667
    rule_name: RC4 128/128 Cipher
    description: Disable RC4 128/128 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SCHANNEL
      - Cipher
      - RC4 128/128
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L749
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L627
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.042
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 668
    rule_name: Diffie-Hellman
    description: Enable the Diffie-Hellman key exchange algorithm support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: KeyExchangeAlgorithms
    category_id: 92
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Diffie-Hellman
      - SCHANNEL
      - Key Exchange
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L761
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L639
    comments:
      - Encryption - Key Exchanges - All allowed
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 669
    rule_name: TLS 1.2 Server Enabled
    description: Enable TLS 1.2 server support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Server
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L792
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L670
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Client" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 670
    rule_name: SSL 2.0 Client Enabled
    description: Enable SSL 2.0 client support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SSL
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L774
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L652
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.295
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\AES 256/256" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 671
    rule_name: AES 256/256 Cipher Enabled
    description: Enable AES 256/256 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - AES
      - SCHANNEL
      - Cipher
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L743
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L621
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\KeyExchangeAlgorithms\Diffie-Hellman" /v ServerMinKeyBitLength /t REG_DWORD /d 0x00001000 /f
    ruleid: 672
    rule_name: Diffie-Hellman Minimum Key Bit Length Set
    description: Set the minimum key bit length for Diffie-Hellman key exchange in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: KeyExchangeAlgorithms
    category_id: 92
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Diffie-Hellman
      - SCHANNEL
      - Key Exchange
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L762
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L640
    comments:
      - Encryption - Key Exchanges - All allowed
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.059
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\PCT 1.0\Client" /v DisabledByDefault /t REG_DWORD /d 1 /f
    ruleid: 673
    rule_name: PCT 1.0 Client Disabled by Default
    description: Disable PCT 1.0 client support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - PCT
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L771
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L649
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\DES 56/56" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 674
    rule_name: DES 56/56 Cipher Enabled
    description: Enable DES 56/56 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - DES
      - SCHANNEL
      - Cipher
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L744
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L622
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" /v Enabled /t REG_DWORD /d 0 /f
    ruleid: 675
    rule_name: Triple DES 168 Cipher Enabled
    description: Enable Triple DES 168 cipher support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Ciphers
    category_id: 90
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Triple DES
      - SCHANNEL
      - Cipher
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L753
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L631
    comments:
      - Disable weak TLS/SSL ciphers and protocols
      - https://www.nartac.com/Products/IISCrypto
      - https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs
      - https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn786418(v=ws.11)
      - https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings
      - Encryption - Ciphers - AES only - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Hashes\SHA512" /v Enabled /t REG_DWORD /d 0xffffffff /f
    ruleid: 676
    rule_name: SHA-512 Hash Enabled
    description: Enable SHA-512 hash support in SCHANNEL.
    default:
      value: ''
      present: 'False'
    category: Hashes
    category_id: 91
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - SHA-512
      - SCHANNEL
      - Hash
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L759
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L637
    comments:
      - Encryption - Hashes- All allowed - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.042
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client" /v DisabledByDefault /t REG_DWORD /d 0 /f
    ruleid: 677
    rule_name: TLS 1.1 Client Disabled by Default
    description: Disable TLS 1.1 client support in SCHANNEL by default.
    default:
      value: ''
      present: 'False'
    category: Protocols
    category_id: 89
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - TLS
      - SCHANNEL
      - Client
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L787
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L665
    comments:
      - Encryption - Protocols- TLS 1.0 and higher - IISCrypto (recommended options)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block runscripthelper.exe netconns" program="%systemroot%\system32\runscripthelper.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 678
    rule_name: Block runscripthelper.exe netconns
    description: Block outbound TCP connections for runscripthelper.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - runscripthelper.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L644
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L550
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 2.391
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block regasm.exe netconns" program="%systemroot%\system32\regasm.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 679
    rule_name: Block regasm.exe netconns
    description: Block outbound TCP connections for regasm.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - regasm.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L649
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L541
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block cscript.exe netconns" program="%systemroot%\SysWOW64\cscript.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 680
    rule_name: Block cscript.exe netconns
    description: Block outbound TCP connections for cscript.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - cscript.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L658
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L516
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.953
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block scriptrunner.exe netconns" program="%systemroot%\system32\scriptrunner.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 681
    rule_name: Block scriptrunner.exe netconns
    description: Block outbound TCP connections for scriptrunner.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - scriptrunner.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L645
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L552
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Netsh.exe advfirewall firewall add rule name="Block calc.exe netconns" program="%systemroot%\system32\calc.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 682
    rule_name: Block calc.exe netconns
    description: Block outbound TCP connections for calc.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - calc.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L292
    comments:
      - Block Win32 binaries from making netconns when they shouldn't - specifically targeting native processes known to be abused by bad actors
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block appvlp.exe netconns" program="C:\Program Files (x86)\Microsoft Office\root\client\AppVLP.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 683
    rule_name: Block appvlp.exe netconns
    description: Block outbound TCP connections for appvlp.exe
    default:
      value: ''
      present: 'False'
    category: Microsoft Office
    category_id: 95
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - appvlp.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L624
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L507
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall set publicprofile firewallpolicy blockinboundalways,allowoutbound
    ruleid: 684
    rule_name: firewallpolicy blockinboundalways
    description: Block all inbound connections on Public profile - enable this only when you are sure you have physical access.
    default:
      value: ''
      present: 'False'
    category: firewallpolicy
    category_id: 96
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - advfirewall
      - publicprofile
      - bound
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L284
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L689
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L580
    comments:
      - Block all inbound connections on Public profile
      - Block all inbound connections on Public profile - enable this only when you are sure you have physical access.
      - To restore the consequences of the next command, run the one after it. This will disable RDP and Share and all other inbound connections to this computer.
      - WARNING !!!!!!!!!!!!!!!!!!!!!
      - The following command enables RDP before you block all other ports - use the same logic for any other ports you might need open before you block inbound connections.
      - netsh advfirewall firewall add rule name="Open Remote Desktop" protocol=TCP dir=in localport=3389 action=allow
      - netsh advfirewall set publicprofile firewallpolicy blockinbound,allowoutbound
      - The following command ignores the RDP or any other rule above and blocks ALL inbound connections. Use this when you connect to the remote machine
      - for troubleshooting using an agent or don't connect remotely at all, as you will not be able to use RDP or other means of remote administration after this.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration:
    output:
      - impact:
      - behavior:
    script:
      - success:
      - fail:
      - info:
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block mshta.exe netconns" program="%systemroot%\SysWOW64\mshta.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 685
    rule_name: Block mshta.exe netconns
    description: Block outbound TCP connections for mshta.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - mshta.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L665
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L530
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block pcalua.exe netconns" program="%systemroot%\SysWOW64\pcalua.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 686
    rule_name: Block pcalua.exe netconns
    description: Block outbound TCP connections for pcalua.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - pcalua.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L669
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L540
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Netsh.exe advfirewall firewall add rule name="Block wscript.exe netconns" program="%systemroot%\system32\wscript.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 687
    rule_name: Block wscript.exe netconns
    description: Block outbound TCP connections for wscript.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - wscript.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L294
    comments:
      - Block Win32 binaries from making netconns when they shouldn't - specifically targeting native processes known to be abused by bad actors
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block nltest.exe netconns" program="%systemroot%\system32\nltest.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 688
    rule_name: Block nltest.exe netconns
    description: Block outbound TCP connections for nltest.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - nltest.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L637
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L533
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block regsvr32.exe netconns" program="%systemroot%\SysWOW64\regsvr32.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 689
    rule_name: Block regsvr32.exe netconns
    description: Block outbound TCP connections for regsvr32.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - regsvr32.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L671
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L544
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block mshta.exe netconns" program="%systemroot%\system32\mshta.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 690
    rule_name: Block mshta.exe netconns
    description: Block outbound TCP connections for mshta.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - mshta.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L635
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L529
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block expand.exe netconns" program="%systemroot%\SysWOW64\expand.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 691
    rule_name: Block expand.exe netconns
    description: Block outbound TCP connections for expand.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - expand.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L660
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L520
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block hh.exe netconns" program="%systemroot%\system32\hh.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 692
    rule_name: Block hh.exe netconns
    description: Block outbound TCP connections for hh.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - hh.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L633
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L525
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block certutil.exe netconns" program="%systemroot%\system32\certutil.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 693
    rule_name: Block certutil.exe netconns
    description: Block outbound TCP connections for certutil.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - certutil.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L626
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L511
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block odbcconf.exe netconns" program="%systemroot%\SysWOW64\odbcconf.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 694
    rule_name: Block odbcconf.exe netconns
    description: Block outbound TCP connections for odbcconf.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - odbcconf.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L653
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L538
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block certutil.exe netconns" program="%systemroot%\SysWOW64\certutil.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 695
    rule_name: Block certutil.exe netconns
    description: Block outbound TCP connections for certutil.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - certutil.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L656
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L512
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block cmstp.exe netconns" program="%systemroot%\system32\cmstp.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 696
    rule_name: Block cmstp.exe netconns
    description: Block outbound TCP connections for cmstp.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - cmstp.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L627
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L513
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block print.exe netconns" program="%systemroot%\SysWOW64\print.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 697
    rule_name: Block print.exe netconns
    description: Block outbound TCP connections for print.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - print.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L670
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Netsh.exe advfirewall firewall add rule name="Block regsvr32.exe netconns" program="%systemroot%\system32\regsvr32.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 698
    rule_name: Block regsvr32.exe netconns
    description: Block outbound TCP connections for regsvr32.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - regsvr32.exe
      - netconns
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/windows-server/networking/netsh-advfirewall-firewall-control-firewall-behavior
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L291
    comments:
      - Block Win32 binaries from making netconns when they shouldn't - specifically targeting native processes known to be abused by bad actors
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe Set-MpPreference -EnableNetworkProtection Enabled
    ruleid: 699
    rule_name: Enable Network Protection with PowerShell
    description: Enable network protection using PowerShell for Windows Defender
    default:
      value: ''
      present: 'False'
    category: Security Configuration
    category_id: 97
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run:
    keywords:
      - network protection
      - PowerShell
      - Windows Defender
      - security
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/windows-server/networking/netsh-advfirewall-firewall-control-firewall-behavior
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L286
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L241
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L211
    comments:
      - Enable Windows Defender Network Protection
      - Enable Network protection
      - Enabled - Users will not be able to access malicious IP addresses and domains
      - Disable (Default) - The Network protection feature will not work. Users will not be blocked from accessing malicious domains
      - AuditMode - If a user visits a malicious IP address or domain, an event will be recorded in the Windows event log but the user will not be blocked from visiting the address.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 1.412
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block cscript.exe netconns" program="%systemroot%\system32\cscript.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 700
    rule_name: Block cscript.exe outbound connections
    description: Block outbound TCP connections for cscript.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - cscript.exe
      - netconns
      - advfirewall
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/windows-server/networking/netsh-advfirewall-firewall-control-firewall-behavior
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L628
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L515
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block esentutl.exe netconns" program="%systemroot%\system32\esentutl.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 701
    rule_name: Block esentutl.exe outbound connections
    description: Block outbound TCP connections for esentutl.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - esentutl.exe
      - netconns
      - advfirewall
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L629
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L517
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: NetSh Advfirewall set allprofiles state on
    ruleid: 702
    rule_name: Enable Windows Firewall for all profiles
    description: Enable Windows Firewall for all network profiles (public, private, domain) using NetSh command
    default:
      value: ''
      present: 'False'
    category: Security Configuration
    category_id: 97
    sub_category:
    sub_category_id:
    cmd: Netsh
    run:
    keywords:
      - advfirewall
      - security configuration
      - network profiles
      - NetSh
    references:
      - https://learn.microsoft.com/en-us/troubleshoot/windows-server/networking/netsh-advfirewall-firewall-control-firewall-behavior
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L276
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.140
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block SyncAppvPublishingServer.exe netconns" program="%systemroot%\SysWOW64\SyncAppvPublishingServer.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 703
    rule_name: Block SyncAppvPublishingServer.exe outbound connections
    description: Block outbound TCP connections for SyncAppvPublishingServer.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - SyncAppvPublishingServer.exe
      - netconns
      - advfirewall
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L677
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L555
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block cmstp.exe netconns" program="%systemroot%\SysWOW64\cmstp.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 704
    rule_name: Block cmstp.exe outbound connections
    description: Block outbound TCP connections for cmstp.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - cmstp.exe
      - netconns
      - advfirewall
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L657
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L514
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block odbcconf.exe netconns" program="%systemroot%\system32\odbcconf.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 705
    rule_name: Block odbcconf.exe outbound connections
    description: Block outbound TCP connections for odbcconf.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - odbcconf.exe
      - netconns
      - advfirewall
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L650
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L537
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Netsh.exe advfirewall firewall add rule name="Block mshta.exe netconns" program="%systemroot%\system32\mshta.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 706
    rule_name: Block mshta.exe outbound connections
    description: Block outbound TCP connections for mshta.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - mshta.exe
      - netconns
      - advfirewall
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L293
    comments:
      - Block Win32 binaries from making netconns when they shouldn't - specifically targeting native processes known to be abused by bad actors
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block esentutl.exe netconns" program="%systemroot%\SysWOW64\esentutl.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 707
    rule_name: Block esentutl.exe outbound connections
    description: Block outbound TCP connections for esentutl.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - esentutl.exe
      - netconns
      - advfirewall
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L659
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L518
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block scriptrunner.exe netconns" program="%systemroot%\SysWOW64\scriptrunner.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 708
    rule_name: Block scriptrunner.exe outbound connections
    description: Block outbound TCP connections for scriptrunner.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - scriptrunner.exe
      - netconns
      - advfirewall
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L676
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L553
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block wmic.exe netconns" program="%systemroot%\system32\wbem\wmic.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 709
    rule_name: Block wmic.exe outbound connections
    description: Block outbound TCP connections for wmic.exe using Windows Firewall
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - wmic.exe
      - netconns
      - advfirewall
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L647
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L556
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block regasm.exe netconns" program="%systemroot%\SysWOW64\regasm.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 710
    rule_name: Block regasm.exe netconns
    description: Block outbound TCP connections for regasm.exe (SysWOW64)
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - regasm.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L652
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L542
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block Notepad.exe netconns" program="%systemroot%\SysWOW64\notepad.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 711
    rule_name: Block Notepad.exe netconns
    description: Block outbound TCP connections for Notepad.exe (SysWOW64)
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - Notepad.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L668
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L536
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh Advfirewall set allprofiles state on
    ruleid: 712
    rule_name: Set all profiles to enable firewall
    description: Enable the Windows Firewall for all profiles
    default:
      value: ''
      present: 'False'
    category: Network Security
    category_id: 98
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - enabling
      - firewall
      - all profiles
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L276
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L623
    comments:
      - Enable and configure Windows Firewall
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.109
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block extrac32.exe netconns" program="%systemroot%\SysWOW64\extrac32.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 713
    rule_name: Block extrac32.exe netconns
    description: Block outbound TCP connections for extrac32.exe (SysWOW64)
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - extrac32.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L661
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L522
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block nltest.exe netconns" program="%systemroot%\SysWOW64\nltest.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 714
    rule_name: Block nltest.exe netconns
    description: Block outbound TCP connections for nltest.exe (SysWOW64)
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - nltest.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L667
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L534
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block wmic.exe netconns" program="%systemroot%\SysWOW64\wbem\wmic.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 715
    rule_name: Block wmic.exe netconns
    description: Block outbound TCP connections for wmic.exe (SysWOW64)
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - wmic.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L678
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L557
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block findstr.exe netconns" program="%systemroot%\SysWOW64\findstr.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 716
    rule_name: Block findstr.exe netconns
    description: Block outbound TCP connections for findstr.exe (SysWOW64)
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - findstr.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L662
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L524
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall set currentprofile logging filename %systemroot%\system32\LogFiles\Firewall\pfirewall.log
    ruleid: 717
    rule_name: Set firewall logging filename
    description: Set the firewall logging filename for the current profile
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - firewall logging
      - current profile
      - filename
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L279
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L683
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L567
    comments:
      - Enable Firewall Logging
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block Notepad.exe netconns" program="%systemroot%\system32\notepad.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 718
    rule_name: Block Notepad.exe netconns
    description: Block outbound TCP connections for Notepad.exe (System32)
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - Notepad.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L638
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L535
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block calc.exe netconns" program="%systemroot%\SysWOW64\calc.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 719
    rule_name: Block calc.exe netconns
    description: Block outbound TCP connections for calc.exe in SysWOW64 directory
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - calc.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L655
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L510
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block replace.exe netconns" program="%systemroot%\system32\replace.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 720
    rule_name: Block replace.exe netconns
    description: Block outbound TCP connections for replace.exe in system32 directory
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - replace.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L642
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L545
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Netsh.exe advfirewall firewall add rule name="Block Notepad.exe netconns" program="%systemroot%\system32\notepad.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 721
    rule_name: Block Notepad.exe netconns
    description: Block outbound TCP connections for Notepad.exe in system32 directory
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - Notepad.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L290
    comments:
      - Block Win32 binaries from making netconns when they shouldn't - specifically targeting native processes known to be abused by bad actors
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block replace.exe netconns" program="%systemroot%\SysWOW64\replace.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 722
    rule_name: Block replace.exe netconns
    description: Block outbound TCP connections for replace.exe in SysWOW64 directory
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - replace.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L672
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L546
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block runscripthelper.exe netconns" program="%systemroot%\SysWOW64\runscripthelper.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 723
    rule_name: Block runscripthelper.exe netconns
    description: Block outbound TCP connections for runscripthelper.exe in SysWOW64 directory
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - runscripthelper.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L675
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L551
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block hh.exe netconns" program="%systemroot%\SysWOW64\hh.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 724
    rule_name: Block hh.exe netconns
    description: Block outbound TCP connections for hh.exe in SysWOW64 directory
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - hh.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L663
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L526
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block rundll32.exe netconns" program="%systemroot%\SysWOW64\rundll32.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 725
    rule_name: Block rundll32.exe netconns
    description: Block outbound TCP connections for rundll32.exe in SysWOW64 directory
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - rundll32.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L674
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L549
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block rpcping.exe netconns" program="%systemroot%\SysWOW64\rpcping.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 726
    rule_name: Block rpcping.exe netconns
    description: Block outbound TCP connections for rpcping.exe in SysWOW64 directory
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - rpcping.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L673
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L547
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block appvlp.exe netconns" program="C:\Program Files\Microsoft Office\root\client\AppVLP.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 727
    rule_name: Block appvlp.exe netconns
    description: Block outbound TCP connections for appvlp.exe in Microsoft Office directory
    default:
      value: ''
      present: 'False'
    category: Microsoft Office
    category_id: 95
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - appvlp.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L654
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L508
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.063
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block calc.exe netconns" program="%systemroot%\system32\calc.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 728
    rule_name: Block calc.exe netconns
    description: Block outbound TCP connections for calc.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - calc.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L625
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L509
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block notepad.exe netconns" program="%systemroot%\SysWOW64\notepad.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 729
    rule_name: Block notepad.exe netconns
    description: Block outbound TCP connections for notepad.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - notepad.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L668
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L536
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block SyncAppvPublishingServer.exe netconns" program="%systemroot%\system32\SyncAppvPublishingServer.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 730
    rule_name: Block SyncAppvPublishingServer.exe netconns
    description: Block outbound TCP connections for SyncAppvPublishingServer.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - SyncAppvPublishingServer.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L646
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L554
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block findstr.exe netconns" program="%systemroot%\system32\findstr.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 731
    rule_name: Block findstr.exe netconns
    description: Block outbound TCP connections for findstr.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - findstr.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L632
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L523
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block makecab.exe netconns" program="%systemroot%\SysWOW64\makecab.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 732
    rule_name: Block makecab.exe netconns
    description: Block outbound TCP connections for makecab.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - makecab.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L664
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L528
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Netsh.exe advfirewall firewall add rule name="Block cscript.exe netconns" program="%systemroot%\system32\cscript.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 733
    rule_name: Block cscript.exe netconns
    description: Block outbound TCP connections for cscript.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - cscript.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L295
    comments:
      - Block Win32 binaries from making netconns when they shouldn't - specifically targeting native processes known to be abused by bad actors
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall set currentprofile logging maxfilesize 4096
    ruleid: 734
    rule_name:
    description:
    default:
      value: ''
      present: 'False'
    category:
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - advfirewall
      - logging
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L280
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L684
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L568
    comments:
      - Enable Firewall Logging
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block hh.exe netconns" program="%systemroot%\system32\hh.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 735
    rule_name: Block hh.exe netconns
    description: Block outbound TCP connections for hh.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - hh.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L633
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L525
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block msiexec.exe netconns" program="%systemroot%\SysWOW64\msiexec.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 736
    rule_name: Block msiexec.exe netconns
    description: Block outbound TCP connections for msiexec.exe
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - msiexec.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L666
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L532
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block notepad.exe netconns" program="%systemroot%\system32\notepad.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 737
    rule_name: Block notepad.exe netconns
    description: Block outbound TCP connections for notepad.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - notepad.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L638
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L535
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: Netsh.exe advfirewall firewall add rule name="Block runscripthelper.exe netconns" program="%systemroot%\system32\runscripthelper.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 738
    rule_name: Block runscripthelper.exe netconns
    description: Block outbound TCP connections for runscripthelper.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - runscripthelper.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L296
    comments:
      - Block Win32 binaries from making netconns when they shouldn't - specifically targeting native processes known to be abused by bad actors
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block wscript.exe netconns" program="%systemroot%\system32\wscript.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 739
    rule_name: Block wscript.exe netconns
    description: Block outbound TCP connections for wscript.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - wscript.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L648
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L558
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block expand.exe netconns" program="%systemroot%\system32\expand.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 740
    rule_name: Block expand.exe netconns
    description: Block outbound TCP connections for expand.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - expand.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L630
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L519
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.062
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block extrac32.exe netconns" program="%systemroot%\system32\extrac32.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 741
    rule_name: Block extrac32.exe netconns
    description: Block outbound TCP connections for extrac32.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - extrac32.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L631
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L521
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.094
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block msiexec.exe netconns" program="%systemroot%\system32\msiexec.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 742
    rule_name: Block msiexec.exe netconns
    description: Block outbound TCP connections for msiexec.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - msiexec.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L636
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L531
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.063
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block regsvr32.exe netconns" program="%systemroot%\system32\regsvr32.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 743
    rule_name: Block regsvr32.exe netconns
    description: Block outbound TCP connections for regsvr32.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - regsvr32.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L641
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L543
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block print.exe netconns" program="%systemroot%\system32\print.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 744
    rule_name: Block print.exe netconns
    description: Block outbound TCP connections for print.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - print.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L640
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block pcalua.exe netconns" program="%systemroot%\system32\pcalua.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 745
    rule_name: Block pcalua.exe netconns
    description: Block outbound TCP connections for pcalua.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - pcalua.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L639
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L539
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block makecab.exe netconns" program="%systemroot%\system32\makecab.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 746
    rule_name: Block makecab.exe netconns
    description: Block outbound TCP connections for makecab.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - makecab.exe
      - netconns
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L634
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L527
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block rundll32.exe netconns" program="%systemroot%\system32\rundll32.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 747
    rule_name: Block rundll32.exe netconns
    description: Block outbound TCP connections for rundll32.exe
    default:
      value: ''
      present: 'False'
    category: system32
    category_id: 93
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - rundll32.exe
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L643
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L548
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh int tcp set global timestamps=disabled
    ruleid: 748
    rule_name: Disable TCP timestamps
    description: Disable TCP timestamps to enhance security
    default:
      value: ''
      present: 'False'
    category: Network Security
    category_id: 98
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - TCP timestamps
      - security
      - disable
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L563
    comments:
      - Disable TCP timestamps
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.14
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall firewall add rule name="Block wscript.exe netconns" program="%systemroot%\SysWOW64\wscript.exe" protocol=tcp dir=out enable=yes action=block profile=any
    ruleid: 749
    rule_name: Block wscript.exe netconns
    description: Block outbound TCP connections for wscript.exe in SysWOW64
    default:
      value: ''
      present: 'False'
    category: SysWOW64
    category_id: 94
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - blocking
      - wscript.exe
      - SysWOW64
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L679
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L559
    comments:
      - Enable Windows Firewall and configure some advanced options
      - Block Win32/64 binaries (LOLBins) from making net connections when they shouldn't
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.078
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: netsh advfirewall set currentprofile logging droppedconnections enable
    ruleid: 750
    rule_name: Enable logging for dropped connections
    description: Enable logging for dropped connections in the current firewall profile
    default:
      value: ''
      present: 'False'
    category: Network Security
    category_id: 98
    sub_category:
    sub_category_id:
    cmd: netsh
    run:
    keywords:
      - logging
      - dropped connections
      - firewall
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L281
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L685
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L569
    comments:
      - Enable Firewall Logging
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.109
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'Ok.\r\n\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "iFileAttachmentPerms" /t REG_DWORD /d 1 /f
    ruleid: 751
    rule_name: Adobe Acrobat Reader DC File Attachment Permissions
    description: This rule sets the File Attachment Permissions for Adobe Acrobat Reader DC to allow file attachments.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - File Attachment
      - Permissions
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L357
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L869
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files (repo1)
      - Sources->
      - https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG (repo1 and repo2)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.017
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cServices" /v "bToggleAdobeSign" /t REG_DWORD /d 1 /f
    ruleid: 752
    rule_name: Adobe Acrobat Reader DC Adobe Sign Toggle
    description: This rule enables the Adobe Sign Toggle feature in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Adobe Sign
      - Toggle
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L363
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L875
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "bEnhancedSecurityInBrowser" /t REG_DWORD /d 1 /f
    ruleid: 753
    rule_name: Enhanced Security in Adobe Acrobat Reader DC Browser
    description: This rule enables enhanced security features in the Adobe Acrobat Reader DC browser.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Enhanced Security
      - Browser
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L354
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L866
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.045
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cWelcomeScreen" /f
    ruleid: 754
    rule_name: Adobe Acrobat Reader DC Welcome Screen
    description: This rule disables the welcome screen in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Welcome Screen
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L347
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L859
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "bDisableTrustedSites" /t REG_DWORD /d 1 /f
    ruleid: 755
    rule_name: Trusted Sites in Adobe Acrobat Reader DC
    description: This rule disables the Trusted Sites feature in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Trusted Sites
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L352
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L864
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.041
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cDefaultLaunchURLPerms" /v "iUnknownURLPerms" /t REG_DWORD /d 2 /f
    ruleid: 756
    rule_name: Set Adobe Acrobat Reader DC Default Launch URL Permissions
    description: This rule sets the default launch URL permissions in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Default Launch URL
      - Permissions
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L361
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L873
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Wow6432Node\Adobe\Acrobat Reader\DC\Installer" /v "DisableMaintenance" /t REG_DWORD /d 1 /f
    ruleid: 757
    rule_name: Disable Adobe Acrobat Reader DC Maintenance
    description: This rule disables maintenance tasks for Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: Maintenance
    category_id: 100
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Maintenance
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L370
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L882
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.043
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "bEnableFlash" /t REG_DWORD /d 0 /f
    ruleid: 758
    rule_name: Adobe Acrobat Reader DC Flash Player
    description: This rule enables the Flash Player in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Flash Player
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L353
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L865
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Adobe\Acrobat Reader\DC\Installer" /v "DisableMaintenance" /t REG_DWORD /d 1 /f
    ruleid: 759
    rule_name: Disable Adobe Acrobat Reader DC Maintenance
    description: This rule disables maintenance tasks for Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: Maintenance
    category_id: 100
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Maintenance
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L348
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L860
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "bDisablePDFHandlerSwitching" /t REG_DWORD /d 1 /f
    ruleid: 760
    rule_name: Adobe Acrobat Reader DC PDF Handler Switching
    description: This rule disables PDF handler switching in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - PDF Handler
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L350
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L862
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "bProtectedMode" /t REG_DWORD /d 1 /f
    ruleid: 761
    rule_name: Adobe Acrobat Reader DC Protected Mode
    description: This rule enables the Protected Mode in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Protected Mode
      - Enable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L356
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L868
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.047
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "iProtectedView" /t REG_DWORD /d 2 /f
    ruleid: 762
    rule_name: Adobe Acrobat Reader DC Protected View
    description: This rule configures the Protected View settings in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Protected View
      - Configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L358
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L870
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.052
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cDefaultLaunchURLPerms" /f
    ruleid: 763
    rule_name: Adobe Acrobat Reader DC Default Launch URL Permissions
    description: This rule configures Default Launch URL Permissions in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Default Launch URL
      - Permissions
      - Configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L343
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L855
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "bEnhancedSecurityStandalone" /t REG_DWORD /d 1 /f
    ruleid: 764
    rule_name: Enhanced Security in Adobe Acrobat Reader DC (Standalone)
    description: This rule enables Enhanced Security in Adobe Acrobat Reader DC (Standalone).
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Enhanced Security
      - Standalone
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L355
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L867
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.043
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cDefaultLaunchURLPerms" /v "iURLPerms" /t REG_DWORD /d 3 /f
    ruleid: 765
    rule_name: Configure Adobe Acrobat Reader DC Default Launch URL Permissions
    description: This rule configures Default Launch URL Permissions in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Default Launch URL
      - Permissions
      - Configuration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L360
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L872
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.045
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "bDisableTrustedFolders" /t REG_DWORD /d 1 /f
    ruleid: 766
    rule_name: Disable Trusted Folders in Adobe Acrobat Reader DC
    description: This rule disables Trusted Folders in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Trusted Folders
      - Disable
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L351
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L863
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cCloud" /f
    ruleid: 767
    rule_name: Adobe Acrobat Reader DC Cloud Features
    description: This rule disables the Cloud Features in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Cloud Features
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L342
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L854
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cServices" /f
    ruleid: 768
    rule_name: Adobe Acrobat Reader DC Services
    description: This rule disables the Services in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Services
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L344
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L856
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.076
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cSharePoint" /v "bDisableSharePointFeatures" /t REG_DWORD /d 1 /f
    ruleid: 769
    rule_name: Adobe Acrobat Reader DC SharePoint Features
    description: This rule disables the SharePoint Features in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - SharePoint Features
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L367
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L879
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cServices" /v "bToggleAdobeDocumentServices" /t REG_DWORD /d 1 /f
    ruleid: 770
    rule_name: Enable Adobe Acrobat Reader DC Document Services
    description: This rule enables the Document Services in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Document Services
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L362
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L874
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cServices" /v "bToggleWebConnectors" /t REG_DWORD /d 1 /f
    ruleid: 771
    rule_name: Adobe Acrobat Reader DC Web Connectors
    description: This rule enables the Web Connectors in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Web Connectors
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L365
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L877
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cWelcomeScreen" /v "bShowWelcomeScreen" /t REG_DWORD /d 0 /f
    ruleid: 772
    rule_name: Adobe Acrobat Reader DC Welcome Screen
    description: This rule disables the Welcome Screen in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Welcome Screen
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L369
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L881
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.041
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cWebmailProfiles" /v "bDisableWebmail" /t REG_DWORD /d 1 /f
    ruleid: 773
    rule_name: Adobe Acrobat Reader DC Webmail Profiles
    description: This rule disables the Webmail Profiles in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Webmail Profiles
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L368
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L880
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.040
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cCloud" /v "bAdobeSendPluginToggle" /t REG_DWORD /d 1 /f
    ruleid: 774
    rule_name: Adobe Acrobat Reader DC Adobe Send Plugin Toggle
    description: This rule enables the Adobe Send Plugin Toggle feature in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Adobe Send Plugin
      - Toggle
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L359
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L871
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.044
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cServices" /v "bTogglePrefsSync" /t REG_DWORD /d 1 /f
    ruleid: 775
    rule_name: Adobe Acrobat Reader DC Toggle Preferences Sync
    description: This rule enables the Toggle Preferences Sync feature in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Toggle Preferences Sync
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L364
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L876
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.058
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cWebmailProfiles" /f
    ruleid: 776
    rule_name: Adobe Acrobat Reader DC Webmail Profiles
    description: This rule disables Webmail Profiles in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Webmail Profiles
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L346
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L858
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown" /v "bAcroSuppressUpsell" /t REG_DWORD /d 1 /f
    ruleid: 777
    rule_name: Adobe Acrobat Reader DC Upsell Promotions
    description: This rule disables upsell promotions in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Upsell Promotions
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L349
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L861
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.074
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cSharePoint" /f
    ruleid: 778
    rule_name: Adobe Acrobat Reader DC SharePoint Integration
    description: This rule disables SharePoint integration in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - SharePoint Integration
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L345
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L857
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown\cServices" /v "bUpdater" /t REG_DWORD /d 0 /f
    ruleid: 779
    rule_name: Adobe Acrobat Reader DC Updater
    description: This rule disables the updater in Adobe Acrobat Reader DC.
    default:
      value: ''
      present: 'False'
    category: FeatureLockDown
    category_id: 99
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Adobe
      - Acrobat Reader
      - Updater
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L366
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L878
    comments:
      - Harden Adobe Acrobat Reader against embeded malicious files
      - Sources -> https://blog.nviso.be/2018/07/26/shortcomings-of-blacklisting-in-adobe-reader-and-what-you-can-do-about-it/
      - https://www.adobe.com/devnet-docs/acrobatetk/tools/Wizard/WizardDC/attachments.html
      - Adobe Reader DC STIG
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableWindowsConsumerFeatures /t REG_DWORD /d 1 /f
    ruleid: 780
    rule_name: Windows Consumer Features
    description: Disable Windows Consumer Features by adding a Registry key.
    default:
      value: ''
      present: 'False'
    category: CloudContent
    category_id: 26
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Hardening
      - Consumer Features
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L329
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L949
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L727
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.030
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "ShowSuperHidden" /t REG_DWORD /d 1 /f
    ruleid: 781
    rule_name: Show Super Hidden Files
    description: Show super hidden files by modifying a Registry value.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category: Advanced
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Registry
      - Hardening
      - Super Hidden Files
      - Show
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L697
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L595
    comments:
      - Show known file extensions and hidden files
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.049
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "HideFileExt" /t REG_DWORD /d 0 /f
    ruleid: 782
    rule_name: HideFileExt
    description: Hide file extensions by modifying a Registry value.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category: Advanced
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
      - Software
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L693
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L591
    comments:
      - Show known file extensions and hidden files
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v "HiberbootEnabled" /t REG_DWORD /d 0 /f
    ruleid: 783
    rule_name: Hiberboot
    description: Enable Hiberboot by modifying a Registry value.
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Windows
      - Software
      - Hiberboot
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L707
    comments:
      - Disable Windows FastBoot (Improve SSD Health)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powershell.exe -Command "$PhysAdapter = Get-NetAdapter -Physical;$PhysAdapter | Get-DnsClientServerAddress -AddressFamily IPv4 | Set-DnsClientServerAddress -ServerAddresses '1.1.1.1','8.8.8.8'"
    ruleid: 784
    rule_name: DNS Server Addresses
    description: Set DNS server addresses using PowerShell for physical network adapters.
    default:
      value: ''
      present: 'False'
    category: Get-NetAdapter
    category_id: 101
    sub_category:
    sub_category_id:
    cmd: powershell.exe
    run: cmd
    keywords:
      - PowerShell
      - DNS
      - Network Adapter
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L922
    comments:
      - Not working on Windows 10 21H1?
      - Enable DoH (support appeared on Windows 10 2004 build (May 2020 Update)
      - http://woshub.com/enable-dns-over-https-windows/
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 6.582
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: 'True'
      - info:
          b'Get-DnsClientServerAddress - No matching MSFT_DNSClientServerAddress objects found by CIM query for instances of the \r\nROOT/StandardCimv2/MSFT_DNSClientServerAddress class on the  CIM server-
          SELECT * FROM MSFT_DNSClientServerAddress  WHERE ((InterfaceIndex = 10)) \r\nAND ((AddressFamily = 2)). Verify query parameters and retry.\r\nAt line:1 char:56\r\n+ ... $PhysAdapter |
          Get-DnsClientServerAddress -AddressFamily IPv4 | Set-D ...\r\n+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo - ObjectNotFound- (MSFT_DNSClientServerAddress:String) [Get-DnsClientServerAddress],
          CimJobException\r\n    + FullyQualifiedErrorId - CmdletizationQuery_NotFound,Get-DnsClientServerAddress\r\n \r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: fsutil behavior set disable8dot3 1
    ruleid: 785
    rule_name: File Name 8.3 Creation
    description: Disable 8.3 file name creation using the fsutil command.
    default:
      value: ''
      present: 'False'
    category: disable8dot3
    category_id: 102
    sub_category:
    sub_category_id:
    cmd: fsutil
    run: cmd
    keywords:
      - fsutil
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L702
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L600
    comments:
      - Disable 8.3 names (Mitigate Microsoft IIS tilde directory enumeration) and Last Access timestamp for files and folder (Performance)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.177
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The registry state is now- 1 (Disable 8dot3 name creation on all volumes).\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "HideFileExt" /t REG_DWORD /d 0 /f
    ruleid: 786
    rule_name: HideFileExt
    description: Show file extensions in user profiles by modifying a Registry value.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category: Advanced
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Software
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L694
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L592
    comments:
      - Show known file extensions and hidden files
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "ShowSuperHidden" /t REG_DWORD /d 1 /f
    ruleid: 787
    rule_name: Show Super Hidden
    description: Show super hidden files in user profiles by modifying a Registry value.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Software
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L698
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L596
    comments:
      - Show known file extensions and hidden files
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection" /v AllowTelemetry /t REG_DWORD /d 0 /f
    ruleid: 788
    rule_name: Windows Telemetry
    description: Allow Windows Telemetry by adding a Registry key.
    default:
      value: ''
      present: 'False'
    category: DataCollection
    category_id: 28
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Policies
      - Telemetry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L310
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L930
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L708
    comments:
      - Set Windows Telemetry to security only
      - If you intend to use Enhanced for Windows Analytics then set this to "2" instead
      - Note my understanding is W10 Home edition will do a minimum of "Basic"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.048
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore" /v Location /t REG_SZ /d Deny /f
    ruleid: 789
    rule_name: Consent for App Location Access
    description: Deny app consent for location access by adding a Registry key.
    default:
      value: 'Deny'
      present: 'True'
    category: ConsentStore
    category_id: 103
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - SOFTWARE
      - Consent
      - Location
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L314
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L934
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L712
    comments:
      - Disable location data
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "Hidden" /t REG_DWORD /d 1 /f
    ruleid: 790
    rule_name: Hidden Files
    description: Show hidden files in user profiles by modifying a Registry value.
    default:
      value: '0x00000002 (2)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category: Advanced
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Software
      - Microsoft
      - Hidden
    references:
      - https://learn.microsoft.com/en-us/windows/privacy/manage-connections-from-windows-operating-system-components-to-microsoft-services
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L696
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L594
    comments:
      - Show known file extensions and hidden files
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.048
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection" /v LimitEnhancedDiagnosticDataWindowsAnalytics /t REG_DWORD /d 1 /f
    ruleid: 791
    rule_name: Limit Enhanced Diagnostic Data for Windows Analytics
    description: Limit enhanced diagnostic data for Windows Analytics by adding a Registry key.
    default:
      value: ''
      present: 'False'
    category: DataCollection
    category_id: 28
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Diagnostic Data
      - Windows Analytics
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L306
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L926
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L704
    comments:
      - Set Windows Analytics to limited enhanced if enhanced is enabled
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\Control Panel\International\User Profile" /v HttpAcceptLanguageOptOut /t REG_DWORD /d 1 /f
    ruleid: 792
    rule_name: HTTP Accept Language Opt-out
    description: Disable HTTP Accept Language Opt-out in the user profile by adding a Registry key.
    default:
      value: '0x00000001 (1)'
      present: 'True'
    category: User Profile
    category_id: 29
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - HTTP Accept Language
      - User Profile
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L335
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L955
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L733
    comments:
      - Disable websites accessing local language list
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.105
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v SystemPaneSuggestionsEnabled /t REG_DWORD /d 0 /f
    ruleid: 793
    rule_name: System Pane Suggestions
    description: Disable System Pane suggestions in the user profile by adding a Registry key.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: ContentDeliveryManager
    category_id: 30
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - System Pane Suggestions
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L330
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L950
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L728
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.052
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection" /v MaxTelemetryAllowed /t REG_DWORD /d 1 /f
    ruleid: 794
    rule_name: Maximum Telemetry Level
    description: Set the maximum telemetry level by adding a Registry key.
    default:
      value: ''
      present: 'False'
    category: DataCollection
    category_id: 28
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Policies
      - Microsoft
      - Telemetry
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L311
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L931
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L709
    comments:
      - Set Windows Telemetry to security only
      - If you intend to use Enhanced for Windows Analytics then set this to "2" instead
      - Note my understanding is W10 Home edition will do a minimum of "Basic"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Diagnostics\DiagTrack" /v ShowedToastAtLevel /t REG_DWORD /d 1 /f
    ruleid: 795
    rule_name: Showed Toast at Level for Diagnostics Tracking
    description: Enable "Showed Toast at Level" for Diagnostics Tracking by adding a Registry key.
    default:
      value: ''
      present: 'False'
    category: DiagTrack
    category_id: 104
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - SOFTWARE
      - Diagnostics
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L312
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L932
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L710
    comments:
      - Set Windows Telemetry to security only
      - If you intend to use Enhanced for Windows Analytics then set this to "2" instead
      - Note my understanding is W10 Home edition will do a minimum of "Basic"
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" /v BingSearchEnabled /t REG_DWORD /d 0 /f
    ruleid: 796
    rule_name: Bing Search
    description: Disable Bing Search in Windows by modifying a Registry key.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Search
    category_id: 32
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Search
      - Bing Search
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L316
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L936
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L714
    comments:
      - Prevent the Start Menu Search from providing internet results and using your location
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: fsutil behavior set disablelastaccess 0
    ruleid: 797
    rule_name: Last Access Timestamps
    description: Disable Last Access Timestamps in Windows by modifying system behavior.
    default:
      value: ''
      present: 'False'
    category: Timestamp
    category_id: 105
    sub_category:
    sub_category_id:
    cmd: fsutil
    run: cmd
    keywords:
      - fsutil
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L703
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L601
    comments:
      - Disable 8.3 names (Mitigate Microsoft IIS tilde directory enumeration) and Last Access timestamp for files and folder (Performance)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.046
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'DisableLastAccess = 0  (User Managed, Disabled)\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" /v DisabledByGroupPolicy /t REG_DWORD /d 1 /f
    ruleid: 798
    rule_name: GroupPolicy
    description: Disable Advertising Info in Windows by adding a Registry key.
    default:
      value: ''
      present: 'False'
    category: AdvertisingInfo
    category_id: 106
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Policies
      - Advertising Info
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L324
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L944
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L722
    comments:
      - Disable the advertising ID
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "Hidden" /t REG_DWORD /d 1 /f
    ruleid: 799
    rule_name: Show Hidden Files
    description: Show hidden files in Windows system by modifying a Registry value.
    default:
      value: '0x00000002 (2)'
      present: 'True'
    category: Explorer
    category_id: 11
    sub_category: Advanced
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Software
      - Microsoft
      - Hidden
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L695
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L593
    comments:
      - Show known file extensions and hidden files
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.043
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" /v CortanaConsent /t REG_DWORD /d 0 /f
    ruleid: 800
    rule_name: Cortana Consent
    description: Deny Cortana consent for search in Windows by adding a Registry key.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Search
    category_id: 32
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - SOFTWARE
      - Cortana
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L318
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L938
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L716
    comments:
      - Prevent the Start Menu Search from providing internet results and using your location
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\SettingSync" /v DisableSettingSync /t REG_DWORD /d 2 /f
    ruleid: 801
    rule_name: Setting Sync
    description: Disable Setting Sync by modifying a Registry key.
    default:
      value: ''
      present: 'False'
    category: SettingSync
    category_id: 107
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Policies
      - Setting Sync
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L322
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L942
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L720
    comments:
      - Disable Win10 settings sync to cloud
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.033
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications" /v NoToastApplicationNotificationOnLockScreen /t REG_DWORD /d 1 /f
    ruleid: 802
    rule_name: Toast Application Notifications on Lock Screen
    description: Disable toast application notifications on the lock screen by modifying a Registry key.
    default:
      value: ''
      present: 'False'
    category: PushNotifications
    category_id: 33
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Policies
      - Toast Notifications
      - Lock Screen
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L337
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L957
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L735
    comments:
      - Prevent toast notifications from appearing on lock screen
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: powercfg -h off
    ruleid: 803
    rule_name: Turn Off Hibernate
    description: Turn off hibernation by using the 'powercfg' command.
    default:
      value: ''
      present: 'False'
    category: Hibernate
    category_id: 108
    sub_category:
    sub_category_id:
    cmd: powercfg
    run:
    keywords:
      - Powercfg
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L710
    comments:
      - Disable Windows Hibernate and delete c:\hiberfil.sys
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.107
    output:
      - impact:
      - behavior:
    script:
      - success: ''
      - fail: ''
      - info: b''
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Search" /v AllowSearchToUseLocation /t REG_DWORD /d 0 /f
    ruleid: 804
    rule_name: Search Location Access
    description: Disable search location access by adding a Registry key.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: Search
    category_id: 32
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Search
      - Location
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L317
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L937
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L715
    comments:
      - Prevent the Start Menu Search from providing internet results and using your location
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.036
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\GameDVR" /v AllowGameDVR /t REG_DWORD /d 0 /f
    ruleid: 805
    rule_name: Windows Game DVR
    description: Disable GameDVR by adding a Registry key.
    default:
      value: ''
      present: 'False'
    category: GameDVR
    category_id: 109
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Policies
      - GameDVR
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L327
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L947
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L725
    comments:
      - Disable Windows GameDVR (Broadcasting and Recording)
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.040
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v SilentInstalledAppsEnabled /t REG_DWORD /d 0 /f
    ruleid: 806
    rule_name: Silent Installed Apps
    description: Disable silent installed apps by adding a Registry key.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: ContentDeliveryManager
    category_id: 30
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - SOFTWARE
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L331
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L951
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L729
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.060
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v OemPreInstalledAppsEnabled /t REG_DWORD /d 0 /f
    ruleid: 807
    rule_name: OEM Pre-Installed Apps
    description: Disable OEM pre-installed apps by adding a Registry key.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: ContentDeliveryManager
    category_id: 30
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - SOFTWARE
      - OEM Pre-Installed Apps
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L333
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L953
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L731
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v PublishUserActivities /t REG_DWORD /d 1 /f
    ruleid: 808
    rule_name: User Activity Publishing
    description: Disable user activity publishing by adding a Registry key.
    default:
      value: ''
      present: 'False'
    category: System
    category_id: 6
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - Policies
      - User Activity
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L320
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L940
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L718
    comments:
      - Disable publishing of Win10 user activity
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.047
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v PreInstalledAppsEnabled /t REG_DWORD /d 0 /f
    ruleid: 809
    rule_name: Pre-Installed Apps
    description: Enabled pre-installed apps by adding a Registry key.
    default:
      value: '0x00000000 (0)'
      present: 'True'
    category: ContentDeliveryManager
    category_id: 30
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Microsoft
      - SOFTWARE
      - Pre-Installed Apps
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L332
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L952
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/b5a2578f00f17a88e5cd5c576541b20be3f82ccf/Windows-10-Hardening-script.cmd#L730
    comments:
      - Disable Microsoft consumer experience which prevent notifications of suggested applications to install
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter" /v EnabledV9 /t REG_DWORD /d 1 /f
    ruleid: 810
    rule_name: Phishing Filter
    description: Enable the Phishing Filter in Microsoft Edge for the current user.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 115
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Phishing Filter
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
    permalinks:
      - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L91
      - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L839
      - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L692
    comments:
      - Enable SmartScreen for Edge
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.031
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge"  /v "BackgroundModeEnabled" /t REG_DWORD /d 0 /f
    ruleid: 811
    rule_name: Background Mode
    description: Disable the Background Mode in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Background Mode
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L837
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L890
    comments:
      - Prevent Edge from running in background
      - On the new Chromium version of Microsoft Edge, extensions and other services can keep the browser running in the background even after it's closed.
      - Although this may not be an issue for most desktop PCs, it could be a problem for laptops and low-end devices as these background processes can
      - increase battery consumption and memory usage. The background process displays an icon in the system tray and can always be closed from there.
      - If you run enable this policy the background mode will be disabled.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.062
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /f
    ruleid: 812
    rule_name: Clear Microsoft Edge Policies
    description: Clear all Microsoft Edge policies for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Policy
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L836
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L889
    comments:
      - Prevent Edge from running in background
      - On the new Chromium version of Microsoft Edge, extensions and other services can keep the browser running in the background even after it's closed.
      - Although this may not be an issue for most desktop PCs, it could be a problem for laptops and low-end devices as these background processes can
      - increase battery consumption and memory usage. The background process displays an icon in the system tray and can always be closed from there.
      - If you run enable this policy the background mode will be disabled.
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.032
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge\ExtensionInstallAllowlist\1" /t REG_SZ /d "odfafepnkmbhccpbejgmiehpchacaeak" /f
    ruleid: 813
    rule_name: Allow Specific Extension Installation
    description: Allow the installation of a specific extension in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Extension Install
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L902
    comments:
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "AllowDeletingBrowserHistory" /t REG_DWORD /d "0x00000000" /f
    ruleid: 814
    rule_name: Prevent Browser History Deletion
    description: Prevent users from deleting their browser history in Microsoft Edge.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Browser History
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L853
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L901
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.040
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "PreventSmartScreenPromptOverrideForFiles" /t REG_DWORD /d "0x00000001" /f
    ruleid: 815
    rule_name: SmartScreen Prompt Override for Files in Microsoft Edge
    description: Enable SmartScreen prompt override for files in Microsoft Edge.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - SmartScreen
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L850
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L898
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.035
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer" /v SafeForScripting /t REG_DWORD /d 0 /f
    ruleid: 816
    rule_name: Safe For Scripting
    description: Disable Windows Installer's "Safe For Scripting" feature for the current user.
    default:
      value: ''
      present: 'False'
    category: Windows Installer
    category_id: 57
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Windows
      - Installer
      - Safe For Scripting
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L93
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L841
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L694
    comments:
      - Enable Notifications in IE when a site attempts to install software
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.071
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "SitePerProcess" /t REG_DWORD /d "0x00000001" /f
    ruleid: 817
    rule_name: Site-Per-Process in Microsoft Edge
    description: Enable Site-Per-Process mode in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Edge
      - Site-Per-Process
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L845
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L893
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.037
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "SSLVersionMin" /t REG_SZ /d "tls1.2^@" /f
    ruleid: 818
    rule_name: Set Minimum SSL Version to TLS 1.2 in Microsoft Edge
    description: Set the minimum SSL version to TLS 1.2 in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft
      - Edge
      - SSL
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L846
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L894
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.054
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "SmartScreenPuaEnabled" /t REG_DWORD /d "0x00000001" /f
    ruleid: 819
    rule_name: SmartScreen for Potentially Unwanted Apps in Microsoft Edge
    description: Enable SmartScreen for Potentially Unwanted Apps (PUA) in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - SmartScreen
      - PUA
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L852
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L900
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.038
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge\ExtensionInstallForcelist\1" /t REG_SZ /d "odfafepnkmbhccpbejgmiehpchacaeak" /f
    ruleid: 820
    rule_name: Allow Specific Extension Installation
    description: Allow the installation of a specific extension in Microsoft Edge for all users using ExtensionInstallForcelist.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Extension Install
    references:
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L903
    comments:
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.042
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "PreventSmartScreenPromptOverride" /t REG_DWORD /d "0x00000001" /f
    ruleid: 821
    rule_name: SmartScreen Prompt Override
    description: Enable SmartScreen prompt override in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - SmartScreen
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L849
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L897
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.043
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "SSLErrorOverrideAllowed" /t REG_DWORD /d "0" /f
    ruleid: 822
    rule_name: SSL Error Override
    description: Disable SSL error override in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - SSL
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L851
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L899
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.075
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "NativeMessagingUserLevelHosts" /t REG_DWORD /d "0" /f
    ruleid: 823
    rule_name: Native Messaging User-Level Hosts in Microsoft Edge
    description: Disable Native Messaging User-Level Hosts in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Native Messaging
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L847
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L895
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.049
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKCU\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main" /v "FormSuggest Passwords" /t REG_SZ /d no /f
    ruleid: 824
    rule_name: Form Suggest Passwords in Microsoft Edge
    description: Disable Form Suggest Passwords in Microsoft Edge for the current user.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Form Suggest
      - Passwords
    references:
    github:
      repos:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/mackwage/08604751462126599d7e52f233490efe#file-windows_hardening-cmd-L95
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L843
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L696
    comments:
      - Disable Edge password manager to encourage use of proper password manager
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.034
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKLM\Software\Policies\Microsoft\Edge" /v "SmartScreenEnabled" /t REG_DWORD /d "0x00000001" /f
    ruleid: 825
    rule_name: SmartScreen in Microsoft Edge
    description: Enable SmartScreen in Microsoft Edge for all users.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - SmartScreen
    references:
    github:
      repos:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://gist.github.com/ricardojba/ecdfe30dadbdab6c514a530bc5d51ef6#file-windows_hardening-cmd-L848
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L896
    comments:
      - More hardening
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.044
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:

  - rule: reg add "HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Edge\Extensions\odfafepnkmbhccpbejgmiehpchacaeak" /v "update_url" /t REG_SZ "https://edge.microsoft.com/extensionwebstorebase/v1/crx" /f
    ruleid: 826
    rule_name: Set Extension Update URL in Microsoft Edge
    description: Set the extension update URL for a specific extension in Microsoft Edge for 32-bit applications.
    default:
      value: ''
      present: 'False'
    category: MicrosoftEdge
    category_id: 110
    sub_category:
    sub_category_id:
    cmd: reg
    run: cmd
    keywords:
      - Microsoft Edge
      - Extension Update URL
    references:
      - https://learn.microsoft.com/en-us/microsoft-edge/extensions-chromium/developer-guide/alternate-distribution-options
    github:
      repos:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd
      permalinks:
        - https://github.com/atlantsecurity/windows-hardening-scripts/blob/main/Windows-10-Hardening-script.cmd#L904
    comments:
      - EDGE HARDENING
    targets:
      - Windows 11
      - Windows 10
    recommended:
    level:
    priority:
    implementation:
    duration: 0.037
    output:
      - impact:
      - behavior:
    script:
      - success: 'True'
      - fail: ''
      - info: b'The operation completed successfully.\r\r\n'
    threats:
      - severity:
      - vector:
      - mitre:
